{
	"info": {
		"_postman_id": "c23d3a28-babc-4702-88fa-9e447936aa98",
		"name": "ClickUp API v2 Reference",
		"description": "The ClickUp API enables you to programmatically access and manage your ClickUp resources.\n\n## Authentication\nThe API supports two authentication methods:\n- **Personal API Token**: Use for testing and personal integrations. Add token to requests with header: `Authorization: pk_...`\n- **OAuth 2.0**: Required for building apps for other users. Uses authorization code flow.\n\n## Getting Started\nOur [Getting Started Guide](https://developer.clickup.com/docs/index) provides a comprehensive overview of how to use the ClickUp API.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15032898",
		"_collection_link": "https://www.postman.com/clickup-api/clickup-public-api/collection/rekuqnj/clickup-api-v2-reference?action=share&source=collection_link&creator=15032898"
	},
	"item": [
		{
			"name": "Audit Logs",
			"item": [
				{
					"name": "Create Workspace-level audit logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicability\": \"<string>\",\n  \"filter\": {\n    \"workspaceId\": \"<string>\",\n    \"userId\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userEmail\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"eventType\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"eventStatus\": \"<string>\",\n    \"startTime\": \"<number>\",\n    \"endTime\": \"<number>\"\n  },\n  \"pagination\": {\n    \"pageRows\": \"<number>\",\n    \"pageTimestamp\": \"<number>\",\n    \"pageDirection\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspace_id/auditlogs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspace_id",
								"auditlogs"
							],
							"variable": [
								{
									"key": "workspace_id",
									"value": "<string>",
									"description": "(Required) The ID of the Workspace."
								}
							]
						},
						"description": "Create Workspace-level audit logs. Audit logs can only be created by the Workspace owner on Enterprise Plans."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"applicability\": \"<string>\",\n  \"filter\": {\n    \"workspaceId\": \"<string>\",\n    \"userId\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userEmail\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"eventType\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"eventStatus\": \"<string>\",\n    \"startTime\": \"<number>\",\n    \"endTime\": \"<number>\"\n  },\n  \"pagination\": {\n    \"pageRows\": \"<number>\",\n    \"pageTimestamp\": \"<number>\",\n    \"pageDirection\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.clickup.com/api/v3/workspaces/:workspace_id/auditlogs",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v3",
										"workspaces",
										":workspace_id",
										"auditlogs"
									],
									"variable": [
										{
											"key": "workspace_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Get Access Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/oauth/token?client_id=<string>&client_secret=<string>&code=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) Oauth app client id"
								},
								{
									"key": "client_secret",
									"value": "<string>",
									"description": "(Required) Oauth app client secret"
								},
								{
									"key": "code",
									"value": "<string>",
									"description": "(Required) Code given in redirect url"
								}
							]
						},
						"description": "These are the routes for authing the API and going through the [OAuth flow](doc:authentication).\\\n \\\nApplications utilizing a personal API token don't use this endpoint.\\\n \\\n***Note:** OAuth tokens are not supported when using the [**Try It** feature](doc:trytheapi) of our Reference docs. You can't try this endpoint from your web browser.*\n"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "https://api.clickup.com/api/v2/oauth/token?client_id=<string>&client_secret=<string>&code=<string>",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"oauth",
										"token"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>",
											"description": "(Required) Oauth app client id"
										},
										{
											"key": "client_secret",
											"value": "<string>",
											"description": "(Required) Oauth app client secret"
										},
										{
											"key": "code",
											"value": "<string>",
											"description": "(Required) Code given in redirect url"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_token\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Authorized User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"user"
							]
						},
						"description": "View the details of the authenticated user's ClickUp account."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "https://api.clickup.com/api/v2/user",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"color\": \"<string>\",\n    \"profilePicture\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get Authorized Workspaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team"
							]
						},
						"description": "View the Workspaces available to the authenticated user."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "https://api.clickup.com/api/v2/team",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"team"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"teams\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"color\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"members\": [\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        },\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"color\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"members\": [\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        },\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Attachments",
			"item": [
				{
					"name": "Create Task Attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/attachment?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"attachment"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by its custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Upload a file to a task as an attachment. Files stored in the cloud cannot be used in this API request.\\\n \\\n***Note:** This request uses multipart/form-data as the content type.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.clickup.com/api/v2/task/:task_id/attachment?custom_task_ids=<boolean>&team_id=<number>",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"task",
										":task_id",
										"attachment"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by its custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"version\": \"<string>\",\n  \"date\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"extension\": \"<string>\",\n  \"thumbnail_small\": \"<string>\",\n  \"thumbnail_large\": \"<string>\",\n  \"url\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get Task Comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/comment?custom_task_ids=<boolean>&team_id=<number>&start=<integer>&start_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"comment"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								},
								{
									"key": "start",
									"value": "<integer>",
									"description": "Enter the `date` of a task comment using Unix time in milliseconds."
								},
								{
									"key": "start_id",
									"value": "<string>",
									"description": "Enter the Comment `id` of a task comment."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "View task comments. \\\n \\\nIf you do not include the `start` and `start_id` parameters, this endpoint will return the most recent 25 comments.\\\n \\\nUse the `start` and `start id` parameters of the oldest comment to retrieve the next 25 comments."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "https://api.clickup.com/api/v2/task/:task_id/comment?custom_task_ids=<boolean>&team_id=<number>&start=<integer>&start_id=<string>",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"task",
										":task_id",
										"comment"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										},
										{
											"key": "start",
											"value": "<integer>",
											"description": "Enter the `date` of a task comment using Unix time in milliseconds."
										},
										{
											"key": "start_id",
											"value": "<string>",
											"description": "Enter the Comment `id` of a task comment."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"comments\": [\n    {\n      \"id\": \"<string>\",\n      \"comment\": [\n        {\n          \"text\": \"<string>\"\n        },\n        {\n          \"text\": \"<string>\"\n        }\n      ],\n      \"comment_text\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"resolved\": \"<boolean>\",\n      \"assignee\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assigned_by\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"reactions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"date\": \"<string>\",\n      \"reply_count\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"comment\": [\n        {\n          \"text\": \"<string>\"\n        },\n        {\n          \"text\": \"<string>\"\n        }\n      ],\n      \"comment_text\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"resolved\": \"<boolean>\",\n      \"assignee\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assigned_by\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"reactions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"date\": \"<string>\",\n      \"reply_count\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Task Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment_text\": \"<string>\",\n  \"notify_all\": \"<boolean>\",\n  \"assignee\": \"<integer>\",\n  \"group_assignee\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/comment?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"comment"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a new comment to a task."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment_text\": \"<string>\",\n  \"notify_all\": \"<boolean>\",\n  \"assignee\": \"<integer>\",\n  \"group_assignee\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.clickup.com/api/v2/task/:task_id/comment?custom_task_ids=<boolean>&team_id=<number>",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"task",
										":task_id",
										"comment"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"hist_id\": \"<string>\",\n  \"date\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get Chat View Comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/view/:view_id/comment?start=<integer>&start_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"view",
								":view_id",
								"comment"
							],
							"query": [
								{
									"key": "start",
									"value": "<integer>",
									"description": "Enter the `date` of a Chat view comment using Unix time in milliseconds."
								},
								{
									"key": "start_id",
									"value": "<string>",
									"description": "Enter the Comment `id` of a Chat view comment."
								}
							],
							"variable": [
								{
									"key": "view_id",
									"value": "<string>",
									"description": "(Required) 105 (string)"
								}
							]
						},
						"description": "View comments from a Chat view. \\\n \\\nIf you do not include the `start` and `start_id` parameters, this endpoint will return the most recent 25 comments.\\\n \\\nUse the `start` and `start id` parameters of the oldest comment to retrieve the next 25 comments."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "https://api.clickup.com/api/v2/view/:view_id/comment?start=<integer>&start_id=<string>",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"view",
										":view_id",
										"comment"
									],
									"query": [
										{
											"key": "start",
											"value": "<integer>",
											"description": "Enter the `date` of a Chat view comment using Unix time in milliseconds."
										},
										{
											"key": "start_id",
											"value": "<string>",
											"description": "Enter the Comment `id` of a Chat view comment."
										}
									],
									"variable": [
										{
											"key": "view_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"comments\": [\n    {\n      \"id\": \"<string>\",\n      \"comment\": [\n        {\n          \"text\": \"<string>\"\n        },\n        {\n          \"text\": \"<string>\"\n        }\n      ],\n      \"comment_text\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"resolved\": \"<boolean>\",\n      \"assignee\": \"<string,null>\",\n      \"assigned_by\": \"<string,null>\",\n      \"reactions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"date\": \"<string>\",\n      \"reply_count\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"comment\": [\n        {\n          \"text\": \"<string>\"\n        },\n        {\n          \"text\": \"<string>\"\n        }\n      ],\n      \"comment_text\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"resolved\": \"<boolean>\",\n      \"assignee\": \"<string,null>\",\n      \"assigned_by\": \"<string,null>\",\n      \"reactions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"date\": \"<string>\",\n      \"reply_count\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Chat View Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment_text\": \"<string>\",\n  \"notify_all\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/view/:view_id/comment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"view",
								":view_id",
								"comment"
							],
							"variable": [
								{
									"key": "view_id",
									"value": "<string>",
									"description": "(Required) 105 (string)"
								}
							]
						},
						"description": "Add a new comment to a Chat view."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment_text\": \"<string>\",\n  \"notify_all\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.clickup.com/api/v2/view/:view_id/comment",
									"protocol": "https",
									"host": [
										"api",
										"clickup",
										"com"
									],
									"path": [
										"api",
										"v2",
										"view",
										":view_id",
										"comment"
									],
									"variable": [
										{
											"key": "view_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"hist_id\": \"<string>\",\n  \"date\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Get List Comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/comment?start=<integer>&start_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"comment"
							],
							"query": [
								{
									"key": "start",
									"value": "<integer>",
									"description": "Enter the `date` of a List info comment using Unix time in milliseconds."
								},
								{
									"key": "start_id",
									"value": "<string>",
									"description": "Enter the Comment `id` of a List info comment."
								}
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the comments added to a List. \\\n \\\nIf you do not include the `start` and `start_id` parameters, this endpoint will return the most recent 25 comments.\\\n \\\nUse the `start` and `start id` parameters of the oldest comment to retrieve the next 25 comments."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/comment?start=<integer>&start_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"comment"
									],
									"query": [
										{
											"key": "start",
											"value": "<integer>",
											"description": "Enter the `date` of a List info comment using Unix time in milliseconds."
										},
										{
											"key": "start_id",
											"value": "<string>",
											"description": "Enter the Comment `id` of a List info comment."
										}
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"comments\": [\n    {\n      \"id\": \"<string>\",\n      \"comment\": [\n        {\n          \"text\": \"<string>\"\n        },\n        {\n          \"text\": \"<string>\"\n        }\n      ],\n      \"comment_text\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"resolved\": \"<boolean>\",\n      \"assignee\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assigned_by\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"reactions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"date\": \"<string>\",\n      \"reply_count\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"comment\": [\n        {\n          \"text\": \"<string>\"\n        },\n        {\n          \"text\": \"<string>\"\n        }\n      ],\n      \"comment_text\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"resolved\": \"<boolean>\",\n      \"assignee\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assigned_by\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"reactions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"date\": \"<string>\",\n      \"reply_count\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create List Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment_text\": \"<string>\",\n  \"assignee\": \"<integer>\",\n  \"notify_all\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/comment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"comment"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a comment to a List."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment_text\": \"<string>\",\n  \"assignee\": \"<integer>\",\n  \"notify_all\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/comment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"comment"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"hist_id\": \"<string>\",\n  \"date\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Update Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment_text\": \"<string>\",\n  \"assignee\": \"<integer>\",\n  \"resolved\": \"<boolean>\",\n  \"group_assignee\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/comment/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"comment",
								":comment_id"
							],
							"variable": [
								{
									"key": "comment_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Replace the content of a task commment, assign a comment, and mark a comment as resolved."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment_text\": \"<string>\",\n  \"assignee\": \"<integer>\",\n  \"resolved\": \"<boolean>\",\n  \"group_assignee\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/comment/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"comment",
										":comment_id"
									],
									"variable": [
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/comment/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"comment",
								":comment_id"
							],
							"variable": [
								{
									"key": "comment_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete a task comment."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/comment/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"comment",
										":comment_id"
									],
									"variable": [
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get Threaded Comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/comment/:comment_id/reply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"comment",
								":comment_id",
								"reply"
							],
							"variable": [
								{
									"key": "comment_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View threaded comments. The parent comment is not included."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/comment/:comment_id/reply",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"comment",
										":comment_id",
										"reply"
									],
									"variable": [
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"comments\": [\n    {\n      \"id\": \"<string>\",\n      \"comment\": [\n        {\n          \"text\": \"<string>\"\n        },\n        {\n          \"text\": \"<string>\"\n        }\n      ],\n      \"comment_text\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"resolved\": \"<boolean>\",\n      \"assignee\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assigned_by\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"reactions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"date\": \"<string>\",\n      \"reply_count\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"comment\": [\n        {\n          \"text\": \"<string>\"\n        },\n        {\n          \"text\": \"<string>\"\n        }\n      ],\n      \"comment_text\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"resolved\": \"<boolean>\",\n      \"assignee\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assigned_by\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"reactions\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"date\": \"<string>\",\n      \"reply_count\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Threaded Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comment_text\": \"<string>\",\n  \"notify_all\": \"<boolean>\",\n  \"assignee\": \"<integer>\",\n  \"group_assignee\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/comment/:comment_id/reply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"comment",
								":comment_id",
								"reply"
							],
							"variable": [
								{
									"key": "comment_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Create a threaded comment."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment_text\": \"<string>\",\n  \"notify_all\": \"<boolean>\",\n  \"assignee\": \"<integer>\",\n  \"group_assignee\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/comment/:comment_id/reply",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"comment",
										":comment_id",
										"reply"
									],
									"variable": [
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Custom Task Types",
			"item": [
				{
					"name": "Get Custom Task Types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/custom_item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"custom_item"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the custom task types available in a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/custom_item",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"custom_item"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"custom_items\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"name_plural\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"name_plural\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Custom Fields",
			"item": [
				{
					"name": "Get List Custom Fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"field"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the Custom Fields you have access to in a specific List."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"field"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"fields\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"<string,null>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"<string,null>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Folder Custom Fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id/field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id",
								"field"
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the Custom Fields you have access to in a specific Folder. Get Folder Custom Fields only returns Custom Fields created at the Folder level. Custom Fields created at the List level are not included."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"field"
									],
									"variable": [
										{
											"key": "folder_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"fields\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"<string,null>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"<string,null>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Space Custom Fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"field"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the Custom Fields you have access to in a specific Space. Get Space Custom Fields only returns Custom Fields created at the Space level. Custom Fields created at the Folder and List level are not included."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"field"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"fields\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"<string,null>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"<string,null>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Workspace Custom Fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"field"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the Custom Fields you have access to in a specific Workspace. Get Workspace Custom Fields only returns Custom Fields created at the Workspace level. Custom Fields created at the Space, Folder, and List level are not included."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"field"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"fields\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"<string,null>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"<string,null>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Set Custom Field Value",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"value\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/field/:field_id?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"field",
								":field_id"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by its Custom Task ID, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) Enter the task ID of the task you want to update."
								},
								{
									"key": "field_id",
									"value": "<string>",
									"description": "(Required) Enter the universal unique identifier (UUID) of the Custom Field you want to set."
								}
							]
						},
						"description": "Add data to a Custom field on a task. \\\n \\\nYou'll need to know the `task_id` of the task you want to update, and the universal unique identifier (UUID) `field_id` of the Custom Field you want to set. \\\n \\\nYou can use [Get Accessible Custom Fields](ref:getaccessiblecustomfields) or the [Get Task](ref:gettask) endpoint to find the `field_id`."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/field/:field_id?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"field",
										":field_id"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by its Custom Task ID, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "field_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Remove Custom Field Value",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/field/:field_id?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"field",
								":field_id"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "field_id",
									"value": "<string>",
									"description": "(Required) b8a8-48d8-a0c6-b4200788a683 (uuid)"
								}
							]
						},
						"description": "Remove the data from a Custom Field on a task. This does not delete the option from the Custom Field."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/field/:field_id?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"field",
										":field_id"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "field_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Docs",
			"item": [
				{
					"name": "Search Docs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs?id=<string>&creator=<number>&deleted=false&archived=false&parent_id=<string>&parent_type=<string>&limit=50&next_cursor=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspaceId",
								"docs"
							],
							"query": [
								{
									"key": "id",
									"value": "<string>",
									"description": "Filter results to a single Doc with the given Doc ID."
								},
								{
									"key": "creator",
									"value": "<number>",
									"description": "Filter results to Docs created by the user with the given user ID."
								},
								{
									"key": "deleted",
									"value": "false",
									"description": "Filter results to return deleted Docs."
								},
								{
									"key": "archived",
									"value": "false",
									"description": "Filter results to return archived Docs."
								},
								{
									"key": "parent_id",
									"value": "<string>",
									"description": "Filter results to children of a parent Doc with the given parent Doc ID."
								},
								{
									"key": "parent_type",
									"value": "<string>",
									"description": "Filter results to children of the given parent Doc type. For example, `SPACE`, `FOLDER`, `LIST`, `EVERYTHING`, `WORKSPACE`."
								},
								{
									"key": "limit",
									"value": "50",
									"description": "The maximum number of results to retrieve for each page."
								},
								{
									"key": "next_cursor",
									"value": "<string>",
									"description": "The cursor to use to get the next page of results."
								}
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "<number>",
									"description": "(Required) The ID of your Workspace."
								}
							]
						},
						"description": "View the Docs in your Workspace. You can only view information of Docs you can access."
					},
					"response": [
						{
							"name": "Search results",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs?id=<string>&creator=<number>&deleted=false&archived=false&parent_id=<string>&parent_type=<string>&limit=50&next_cursor=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter results to a single Doc with the given Doc ID."
										},
										{
											"key": "creator",
											"value": "<number>",
											"description": "Filter results to Docs created by the user with the given user ID."
										},
										{
											"key": "deleted",
											"value": "false",
											"description": "Filter results to return deleted Docs."
										},
										{
											"key": "archived",
											"value": "false",
											"description": "Filter results to return archived Docs."
										},
										{
											"key": "parent_id",
											"value": "<string>",
											"description": "Filter results to children of a parent Doc with the given parent Doc ID."
										},
										{
											"key": "parent_type",
											"value": "<string>",
											"description": "Filter results to children of the given parent Doc type. For example, `SPACE`, `FOLDER`, `LIST`, `EVERYTHING`, `WORKSPACE`."
										},
										{
											"key": "limit",
											"value": "50",
											"description": "The maximum number of results to retrieve for each page."
										},
										{
											"key": "next_cursor",
											"value": "<string>",
											"description": "The cursor to use to get the next page of results."
										}
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"docs\": [\n    {\n      \"id\": \"<string>\",\n      \"date_created\": \"<number>\",\n      \"name\": \"<string>\",\n      \"type\": null,\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<number>\"\n      },\n      \"public\": \"<boolean>\",\n      \"workspace_id\": \"<number>\",\n      \"creator\": \"<number>\",\n      \"deleted\": \"<boolean>\",\n      \"archived\": \"<boolean>\",\n      \"date_updated\": \"<number>\",\n      \"date_deleted\": \"<number>\",\n      \"deleted_by\": \"<number>\",\n      \"archived_by\": \"<number>\",\n      \"date_archived\": \"<number>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"date_created\": \"<number>\",\n      \"name\": \"<string>\",\n      \"type\": null,\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<number>\"\n      },\n      \"public\": \"<boolean>\",\n      \"workspace_id\": \"<number>\",\n      \"creator\": \"<number>\",\n      \"deleted\": \"<boolean>\",\n      \"archived\": \"<boolean>\",\n      \"date_updated\": \"<number>\",\n      \"date_deleted\": \"<number>\",\n      \"deleted_by\": \"<number>\",\n      \"archived_by\": \"<number>\",\n      \"date_archived\": \"<number>\"\n    }\n  ],\n  \"next_cursor\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create Doc",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<string>\",\n    \"type\": \"<number>\"\n  },\n  \"visibility\": \"<string>\",\n  \"create_page\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspaceId",
								"docs"
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "<number>",
									"description": "(Required) The ID of the Workspace."
								}
							]
						},
						"description": "Create a new Doc. "
					},
					"response": [
						{
							"name": "Doc created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<string>\",\n    \"type\": \"<number>\"\n  },\n  \"visibility\": \"<string>\",\n  \"create_page\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs"
									],
									"variable": [
										{
											"key": "workspaceId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"date_created\": \"<number>\",\n  \"name\": \"<string>\",\n  \"type\": null,\n  \"parent\": {\n    \"id\": \"<string>\",\n    \"type\": \"<number>\"\n  },\n  \"public\": \"<boolean>\",\n  \"workspace_id\": \"<number>\",\n  \"creator\": \"<number>\",\n  \"date_updated\": \"<number>\",\n  \"archived\": \"<boolean>\",\n  \"archived_by\": \"<number>\",\n  \"date_archived\": \"<number>\",\n  \"date_deleted\": \"<number>\",\n  \"deleted\": \"<boolean>\",\n  \"deleted_by\": \"<number>\",\n  \"page_defaults\": {\n    \"font\": \"<string>\",\n    \"font_size\": \"<number>\",\n    \"line_height\": \"<number>\",\n    \"page_width\": \"<number>\",\n    \"paragraph_spacing\": \"<number>\",\n    \"show_author_header\": \"<boolean>\",\n    \"show_contributor_header\": \"<boolean>\",\n    \"show_cover_header\": \"<boolean>\",\n    \"show_date_header\": \"<boolean>\",\n    \"show_page_outline\": \"<boolean>\",\n    \"show_sub_pages\": \"<boolean>\",\n    \"sub_page_size\": \"<string>\",\n    \"show_sub_title_header\": \"<boolean>\",\n    \"show_title_icon_header\": \"<boolean>\",\n    \"show_relationships\": \"<boolean>\",\n    \"show_relationships_compact\": \"<boolean>\",\n    \"show_sub_pages_author\": \"<boolean>\",\n    \"show_sub_pages_thumbnail\": \"<boolean>\",\n    \"show_sub_pages_compact\": \"<boolean>\",\n    \"sub_pages_style\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get Doc",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspaceId",
								"docs",
								":docId"
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "<number>",
									"description": "(Required) The ID of the Workspace."
								},
								{
									"key": "docId",
									"value": "<string>",
									"description": "(Required) The ID of the Doc."
								}
							]
						},
						"description": "View information about a Doc."
					},
					"response": [
						{
							"name": "Doc found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId"
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"date_created\": \"<number>\",\n  \"name\": \"<string>\",\n  \"type\": null,\n  \"parent\": {\n    \"id\": \"<string>\",\n    \"type\": \"<number>\"\n  },\n  \"public\": \"<boolean>\",\n  \"workspace_id\": \"<number>\",\n  \"creator\": \"<number>\",\n  \"date_updated\": \"<number>\",\n  \"archived\": \"<boolean>\",\n  \"archived_by\": \"<number>\",\n  \"date_archived\": \"<number>\",\n  \"date_deleted\": \"<number>\",\n  \"deleted\": \"<boolean>\",\n  \"deleted_by\": \"<number>\",\n  \"page_defaults\": {\n    \"font\": \"<string>\",\n    \"font_size\": \"<number>\",\n    \"line_height\": \"<number>\",\n    \"page_width\": \"<number>\",\n    \"paragraph_spacing\": \"<number>\",\n    \"show_author_header\": \"<boolean>\",\n    \"show_contributor_header\": \"<boolean>\",\n    \"show_cover_header\": \"<boolean>\",\n    \"show_date_header\": \"<boolean>\",\n    \"show_page_outline\": \"<boolean>\",\n    \"show_sub_pages\": \"<boolean>\",\n    \"sub_page_size\": \"<string>\",\n    \"show_sub_title_header\": \"<boolean>\",\n    \"show_title_icon_header\": \"<boolean>\",\n    \"show_relationships\": \"<boolean>\",\n    \"show_relationships_compact\": \"<boolean>\",\n    \"show_sub_pages_author\": \"<boolean>\",\n    \"show_sub_pages_thumbnail\": \"<boolean>\",\n    \"show_sub_pages_compact\": \"<boolean>\",\n    \"sub_pages_style\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Doc not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId"
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Doc PageListing",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pageListing?max_page_depth=-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspaceId",
								"docs",
								":docId",
								"pageListing"
							],
							"query": [
								{
									"key": "max_page_depth",
									"value": "-1",
									"description": "The maximum depth to retrieve pages and subpages. A value less than 0 does not limit the depth."
								}
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "<number>",
									"description": "(Required) The ID of the Workspace."
								},
								{
									"key": "docId",
									"value": "<string>",
									"description": "(Required) The ID of the Doc."
								}
							]
						},
						"description": "View the PageListing for a Doc."
					},
					"response": [
						{
							"name": "PageListing found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pageListing?max_page_depth=-1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId",
										"pageListing"
									],
									"query": [
										{
											"key": "max_page_depth",
											"value": "-1",
											"description": "The maximum depth to retrieve pages and subpages. A value less than 0 does not limit the depth."
										}
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"doc_id\": \"<string>\",\n    \"workspace_id\": \"<number>\",\n    \"name\": \"<string>\",\n    \"parent_page_id\": \"<string>\",\n    \"pages\": [\n      {\n        \"id\": \"<string>\",\n        \"doc_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"pages\": \"<array>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"doc_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"pages\": \"<array>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"doc_id\": \"<string>\",\n    \"workspace_id\": \"<number>\",\n    \"name\": \"<string>\",\n    \"parent_page_id\": \"<string>\",\n    \"pages\": [\n      {\n        \"id\": \"<string>\",\n        \"doc_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"pages\": \"<array>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"doc_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"pages\": \"<array>\"\n      }\n    ]\n  }\n]"
						},
						{
							"name": "PageListing not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pageListing?max_page_depth=-1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId",
										"pageListing"
									],
									"query": [
										{
											"key": "max_page_depth",
											"value": "-1",
											"description": "The maximum depth to retrieve pages and subpages. A value less than 0 does not limit the depth."
										}
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Doc pages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages?max_page_depth=-1&content_format=text/md",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspaceId",
								"docs",
								":docId",
								"pages"
							],
							"query": [
								{
									"key": "max_page_depth",
									"value": "-1",
									"description": "The maximum depth to retrieve pages and subpages. A value less than 0 does not limit the depth."
								},
								{
									"key": "content_format",
									"value": "text/md",
									"description": "The format to return the page content in. For example, `text/md` for markdown or `text/plain` for plain."
								}
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "<number>",
									"description": "(Required) The ID of the Workspace."
								},
								{
									"key": "docId",
									"value": "<string>",
									"description": "(Required) The ID of the Doc."
								}
							]
						},
						"description": "View pages belonging to a Doc."
					},
					"response": [
						{
							"name": "Pages found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages?max_page_depth=-1&content_format=text/md",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId",
										"pages"
									],
									"query": [
										{
											"key": "max_page_depth",
											"value": "-1",
											"description": "The maximum depth to retrieve pages and subpages. A value less than 0 does not limit the depth."
										},
										{
											"key": "content_format",
											"value": "text/md",
											"description": "The format to return the page content in. For example, `text/md` for markdown or `text/plain` for plain."
										}
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"doc_id\": \"<string>\",\n    \"workspace_id\": \"<number>\",\n    \"name\": \"<string>\",\n    \"date_created\": \"<number>\",\n    \"content\": \"<string>\",\n    \"creator_id\": \"<number>\",\n    \"authors\": [\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"parent_page_id\": \"<string>\",\n    \"pages\": \"<array>\",\n    \"sub_title\": \"<string>\",\n    \"date_updated\": \"<number>\",\n    \"avatar\": {\n      \"color\": \"<string>\",\n      \"value\": \"<string>\",\n      \"source\": \"<string>\"\n    },\n    \"deleted\": \"<boolean>\",\n    \"deleted_by\": \"<number>\",\n    \"date_deleted\": \"<number>\",\n    \"date_edited\": \"<number>\",\n    \"edited_by\": \"<number>\",\n    \"archived\": \"<boolean>\",\n    \"archived_by\": \"<number>\",\n    \"date_archived\": \"<number>\",\n    \"contributors\": [\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"cover\": {\n      \"color\": \"<string>\",\n      \"image_url\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      }\n    },\n    \"protected\": \"<boolean>\",\n    \"protected_by\": \"<number>\",\n    \"protected_note\": \"<string>\",\n    \"presentation_details\": {\n      \"font\": \"<string>\",\n      \"font_size\": \"<number>\",\n      \"line_height\": \"<number>\",\n      \"page_width\": \"<number>\",\n      \"paragraph_spacing\": \"<number>\",\n      \"show_author_header\": \"<boolean>\",\n      \"show_contributor_header\": \"<boolean>\",\n      \"show_cover_header\": \"<boolean>\",\n      \"show_date_header\": \"<boolean>\",\n      \"show_page_outline\": \"<boolean>\",\n      \"show_sub_pages\": \"<boolean>\",\n      \"sub_page_size\": \"<string>\",\n      \"show_sub_title_header\": \"<boolean>\",\n      \"show_title_icon_header\": \"<boolean>\",\n      \"show_relationships\": \"<boolean>\",\n      \"show_relationships_compact\": \"<boolean>\",\n      \"show_sub_pages_author\": \"<boolean>\",\n      \"show_sub_pages_thumbnail\": \"<boolean>\",\n      \"show_sub_pages_compact\": \"<boolean>\",\n      \"sub_pages_style\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"doc_id\": \"<string>\",\n    \"workspace_id\": \"<number>\",\n    \"name\": \"<string>\",\n    \"date_created\": \"<number>\",\n    \"content\": \"<string>\",\n    \"creator_id\": \"<number>\",\n    \"authors\": [\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"parent_page_id\": \"<string>\",\n    \"pages\": \"<array>\",\n    \"sub_title\": \"<string>\",\n    \"date_updated\": \"<number>\",\n    \"avatar\": {\n      \"color\": \"<string>\",\n      \"value\": \"<string>\",\n      \"source\": \"<string>\"\n    },\n    \"deleted\": \"<boolean>\",\n    \"deleted_by\": \"<number>\",\n    \"date_deleted\": \"<number>\",\n    \"date_edited\": \"<number>\",\n    \"edited_by\": \"<number>\",\n    \"archived\": \"<boolean>\",\n    \"archived_by\": \"<number>\",\n    \"date_archived\": \"<number>\",\n    \"contributors\": [\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"cover\": {\n      \"color\": \"<string>\",\n      \"image_url\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      }\n    },\n    \"protected\": \"<boolean>\",\n    \"protected_by\": \"<number>\",\n    \"protected_note\": \"<string>\",\n    \"presentation_details\": {\n      \"font\": \"<string>\",\n      \"font_size\": \"<number>\",\n      \"line_height\": \"<number>\",\n      \"page_width\": \"<number>\",\n      \"paragraph_spacing\": \"<number>\",\n      \"show_author_header\": \"<boolean>\",\n      \"show_contributor_header\": \"<boolean>\",\n      \"show_cover_header\": \"<boolean>\",\n      \"show_date_header\": \"<boolean>\",\n      \"show_page_outline\": \"<boolean>\",\n      \"show_sub_pages\": \"<boolean>\",\n      \"sub_page_size\": \"<string>\",\n      \"show_sub_title_header\": \"<boolean>\",\n      \"show_title_icon_header\": \"<boolean>\",\n      \"show_relationships\": \"<boolean>\",\n      \"show_relationships_compact\": \"<boolean>\",\n      \"show_sub_pages_author\": \"<boolean>\",\n      \"show_sub_pages_thumbnail\": \"<boolean>\",\n      \"show_sub_pages_compact\": \"<boolean>\",\n      \"sub_pages_style\": \"<string>\"\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Create page",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_page_id\": null,\n  \"name\": \"\",\n  \"sub_title\": null,\n  \"content\": \"\",\n  \"content_format\": \"text/md\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspaceId",
								"docs",
								":docId",
								"pages"
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "<number>",
									"description": "(Required) The ID of the Workspace."
								},
								{
									"key": "docId",
									"value": "<string>",
									"description": "(Required) The ID of the Doc."
								}
							]
						},
						"description": "Create a page in a Doc."
					},
					"response": [
						{
							"name": "Page created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"parent_page_id\": null,\n  \"name\": \"\",\n  \"sub_title\": null,\n  \"content\": \"\",\n  \"content_format\": \"text/md\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId",
										"pages"
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"doc_id\": \"<string>\",\n  \"workspace_id\": \"<number>\",\n  \"name\": \"<string>\",\n  \"date_created\": \"<number>\",\n  \"content\": \"<string>\",\n  \"creator_id\": \"<number>\",\n  \"authors\": [\n    \"<number>\",\n    \"<number>\"\n  ],\n  \"parent_page_id\": \"<string>\",\n  \"pages\": \"<array>\",\n  \"sub_title\": \"<string>\",\n  \"date_updated\": \"<number>\",\n  \"avatar\": {\n    \"color\": \"<string>\",\n    \"value\": \"<string>\",\n    \"source\": \"<string>\"\n  },\n  \"deleted\": \"<boolean>\",\n  \"deleted_by\": \"<number>\",\n  \"date_deleted\": \"<number>\",\n  \"date_edited\": \"<number>\",\n  \"edited_by\": \"<number>\",\n  \"archived\": \"<boolean>\",\n  \"archived_by\": \"<number>\",\n  \"date_archived\": \"<number>\",\n  \"contributors\": [\n    \"<number>\",\n    \"<number>\"\n  ],\n  \"cover\": {\n    \"color\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"position\": {\n      \"x\": \"<number>\",\n      \"y\": \"<number>\"\n    }\n  },\n  \"protected\": \"<boolean>\",\n  \"protected_by\": \"<number>\",\n  \"protected_note\": \"<string>\",\n  \"presentation_details\": {\n    \"font\": \"<string>\",\n    \"font_size\": \"<number>\",\n    \"line_height\": \"<number>\",\n    \"page_width\": \"<number>\",\n    \"paragraph_spacing\": \"<number>\",\n    \"show_author_header\": \"<boolean>\",\n    \"show_contributor_header\": \"<boolean>\",\n    \"show_cover_header\": \"<boolean>\",\n    \"show_date_header\": \"<boolean>\",\n    \"show_page_outline\": \"<boolean>\",\n    \"show_sub_pages\": \"<boolean>\",\n    \"sub_page_size\": \"<string>\",\n    \"show_sub_title_header\": \"<boolean>\",\n    \"show_title_icon_header\": \"<boolean>\",\n    \"show_relationships\": \"<boolean>\",\n    \"show_relationships_compact\": \"<boolean>\",\n    \"show_sub_pages_author\": \"<boolean>\",\n    \"show_sub_pages_thumbnail\": \"<boolean>\",\n    \"show_sub_pages_compact\": \"<boolean>\",\n    \"sub_pages_style\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get page",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages/:pageId?content_format=text/md",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspaceId",
								"docs",
								":docId",
								"pages",
								":pageId"
							],
							"query": [
								{
									"key": "content_format",
									"value": "text/md",
									"description": "The format to return the page content in. For example, `text/md` for markdown or `text/plain` for plain."
								}
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "<number>",
									"description": "(Required) The ID of the Workspace."
								},
								{
									"key": "docId",
									"value": "<string>",
									"description": "(Required) The ID of the Doc."
								},
								{
									"key": "pageId",
									"value": "<string>",
									"description": "(Required) The ID of the page."
								}
							]
						},
						"description": "View the information about a page in a Doc. Due to markdown format limitations, some content elements [will not be displayed exactly as they appear in ClickUp.](doc:docsimportexportlimitations/)"
					},
					"response": [
						{
							"name": "Page found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages/:pageId?content_format=text/md",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "content_format",
											"value": "text/md",
											"description": "The format to return the page content in. For example, `text/md` for markdown or `text/plain` for plain."
										}
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										},
										{
											"key": "pageId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"doc_id\": \"<string>\",\n  \"workspace_id\": \"<number>\",\n  \"name\": \"<string>\",\n  \"date_created\": \"<number>\",\n  \"content\": \"<string>\",\n  \"creator_id\": \"<number>\",\n  \"authors\": [\n    \"<number>\",\n    \"<number>\"\n  ],\n  \"parent_page_id\": \"<string>\",\n  \"pages\": \"<array>\",\n  \"sub_title\": \"<string>\",\n  \"date_updated\": \"<number>\",\n  \"avatar\": {\n    \"color\": \"<string>\",\n    \"value\": \"<string>\",\n    \"source\": \"<string>\"\n  },\n  \"deleted\": \"<boolean>\",\n  \"deleted_by\": \"<number>\",\n  \"date_deleted\": \"<number>\",\n  \"date_edited\": \"<number>\",\n  \"edited_by\": \"<number>\",\n  \"archived\": \"<boolean>\",\n  \"archived_by\": \"<number>\",\n  \"date_archived\": \"<number>\",\n  \"contributors\": [\n    \"<number>\",\n    \"<number>\"\n  ],\n  \"cover\": {\n    \"color\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"position\": {\n      \"x\": \"<number>\",\n      \"y\": \"<number>\"\n    }\n  },\n  \"protected\": \"<boolean>\",\n  \"protected_by\": \"<number>\",\n  \"protected_note\": \"<string>\",\n  \"presentation_details\": {\n    \"font\": \"<string>\",\n    \"font_size\": \"<number>\",\n    \"line_height\": \"<number>\",\n    \"page_width\": \"<number>\",\n    \"paragraph_spacing\": \"<number>\",\n    \"show_author_header\": \"<boolean>\",\n    \"show_contributor_header\": \"<boolean>\",\n    \"show_cover_header\": \"<boolean>\",\n    \"show_date_header\": \"<boolean>\",\n    \"show_page_outline\": \"<boolean>\",\n    \"show_sub_pages\": \"<boolean>\",\n    \"sub_page_size\": \"<string>\",\n    \"show_sub_title_header\": \"<boolean>\",\n    \"show_title_icon_header\": \"<boolean>\",\n    \"show_relationships\": \"<boolean>\",\n    \"show_relationships_compact\": \"<boolean>\",\n    \"show_sub_pages_author\": \"<boolean>\",\n    \"show_sub_pages_thumbnail\": \"<boolean>\",\n    \"show_sub_pages_compact\": \"<boolean>\",\n    \"sub_pages_style\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Page not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages/:pageId?content_format=text/md",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "content_format",
											"value": "text/md",
											"description": "The format to return the page content in. For example, `text/md` for markdown or `text/plain` for plain."
										}
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										},
										{
											"key": "pageId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Edit page",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"sub_title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"content_edit_mode\": \"replace\",\n  \"content_format\": \"text/md\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages/:pageId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspaceId",
								"docs",
								":docId",
								"pages",
								":pageId"
							],
							"variable": [
								{
									"key": "workspaceId",
									"value": "<number>",
									"description": "(Required) The ID of the Workspace."
								},
								{
									"key": "docId",
									"value": "<string>",
									"description": "(Required) The ID of the Doc."
								},
								{
									"key": "pageId",
									"value": "<string>",
									"description": "(Required) The ID of the page."
								}
							]
						},
						"description": "Edit a page in a Doc."
					},
					"response": [
						{
							"name": "Page updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"sub_title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"content_edit_mode\": \"replace\",\n  \"content_format\": \"text/md\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspaceId/docs/:docId/pages/:pageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspaceId",
										"docs",
										":docId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "workspaceId"
										},
										{
											"key": "docId"
										},
										{
											"key": "pageId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Folders",
			"item": [
				{
					"name": "Get Folders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/folder?archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"folder"
							],
							"query": [
								{
									"key": "archived",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the Folders in a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/folder?archived=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"folder"
									],
									"query": [
										{
											"key": "archived",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"folders\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"orderindex\": \"<integer>\",\n    \"override_statuses\": \"<boolean>\",\n    \"hidden\": \"<boolean>\",\n    \"space\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"access\": \"<boolean>\"\n    },\n    \"task_count\": \"<string>\",\n    \"lists\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Create Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/folder",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"folder"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a new Folder to a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/folder",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"folder"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orderindex\": \"<integer>\",\n  \"override_statuses\": \"<boolean>\",\n  \"hidden\": \"<boolean>\",\n  \"space\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"access\": \"<boolean>\"\n  },\n  \"task_count\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Folder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id"
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the Lists within a Folder."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id"
									],
									"variable": [
										{
											"key": "folder_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orderindex\": \"<integer>\",\n  \"override_statuses\": \"<boolean>\",\n  \"hidden\": \"<boolean>\",\n  \"space\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"access\": \"<boolean>\"\n  },\n  \"task_count\": \"<string>\",\n  \"lists\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Folder",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id"
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Rename a Folder."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id"
									],
									"variable": [
										{
											"key": "folder_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orderindex\": \"<integer>\",\n  \"override_statuses\": \"<boolean>\",\n  \"hidden\": \"<boolean>\",\n  \"space\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"access\": \"<boolean>\"\n  },\n  \"task_count\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Folder",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id"
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete a Folder from your Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id"
									],
									"variable": [
										{
											"key": "folder_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Create Folder from template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"return_immediately\": \"<boolean>\",\n    \"content\": \"<string>\",\n    \"time_estimate\": \"<boolean>\",\n    \"automation\": \"<boolean>\",\n    \"include_views\": \"<boolean>\",\n    \"old_due_date\": \"<boolean>\",\n    \"old_start_date\": \"<boolean>\",\n    \"old_followers\": \"<boolean>\",\n    \"comment_attachments\": \"<boolean>\",\n    \"recur_settings\": \"<boolean>\",\n    \"old_tags\": \"<boolean>\",\n    \"old_statuses\": \"<boolean>\",\n    \"subtasks\": \"<boolean>\",\n    \"custom_type\": \"<boolean>\",\n    \"old_assignees\": \"<boolean>\",\n    \"attachments\": \"<boolean>\",\n    \"comment\": \"<boolean>\",\n    \"old_status\": \"<boolean>\",\n    \"external_dependencies\": \"<boolean>\",\n    \"internal_dependencies\": \"<boolean>\",\n    \"priority\": \"<boolean>\",\n    \"custom_fields\": \"<boolean>\",\n    \"old_checklists\": \"<boolean>\",\n    \"relationships\": \"<boolean>\",\n    \"old_subtask_assignees\": \"<boolean>\",\n    \"start_date\": \"<dateTime>\",\n    \"due_date\": \"<dateTime>\",\n    \"remap_start_date\": \"<boolean>\",\n    \"skip_weekends\": \"<boolean>\",\n    \"archived\": 2\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/folder_template/:template_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"folder_template",
								":template_id"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<string>",
									"description": "(Required) ID of the Space where the Folder will be created"
								},
								{
									"key": "template_id",
									"value": "<string>",
									"description": "(Required) ID of the Folder template to use."
								}
							]
						},
						"description": "Creates a new folder based on an existing template, copying all specified attributes and relationships."
					},
					"response": [
						{
							"name": "Folder created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"return_immediately\": \"<boolean>\",\n    \"content\": \"<string>\",\n    \"time_estimate\": \"<boolean>\",\n    \"automation\": \"<boolean>\",\n    \"include_views\": \"<boolean>\",\n    \"old_due_date\": \"<boolean>\",\n    \"old_start_date\": \"<boolean>\",\n    \"old_followers\": \"<boolean>\",\n    \"comment_attachments\": \"<boolean>\",\n    \"recur_settings\": \"<boolean>\",\n    \"old_tags\": \"<boolean>\",\n    \"old_statuses\": \"<boolean>\",\n    \"subtasks\": \"<boolean>\",\n    \"custom_type\": \"<boolean>\",\n    \"old_assignees\": \"<boolean>\",\n    \"attachments\": \"<boolean>\",\n    \"comment\": \"<boolean>\",\n    \"old_status\": \"<boolean>\",\n    \"external_dependencies\": \"<boolean>\",\n    \"internal_dependencies\": \"<boolean>\",\n    \"priority\": \"<boolean>\",\n    \"custom_fields\": \"<boolean>\",\n    \"old_checklists\": \"<boolean>\",\n    \"relationships\": \"<boolean>\",\n    \"old_subtask_assignees\": \"<boolean>\",\n    \"start_date\": \"<dateTime>\",\n    \"due_date\": \"<dateTime>\",\n    \"remap_start_date\": \"<boolean>\",\n    \"skip_weekends\": \"<boolean>\",\n    \"archived\": 2\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/folder_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"folder_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"folder\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"orderindex\": \"<integer>\",\n    \"override_statuses\": \"<boolean>\",\n    \"hidden\": \"<boolean>\",\n    \"space\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"access\": \"<boolean>\"\n    },\n    \"task_count\": \"<string>\",\n    \"archived\": \"<boolean>\",\n    \"statuses\": [\n      {\n        \"id\": \"<string>\",\n        \"status\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"status\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"permission_level\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad request - Name is required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"return_immediately\": \"<boolean>\",\n    \"content\": \"<string>\",\n    \"time_estimate\": \"<boolean>\",\n    \"automation\": \"<boolean>\",\n    \"include_views\": \"<boolean>\",\n    \"old_due_date\": \"<boolean>\",\n    \"old_start_date\": \"<boolean>\",\n    \"old_followers\": \"<boolean>\",\n    \"comment_attachments\": \"<boolean>\",\n    \"recur_settings\": \"<boolean>\",\n    \"old_tags\": \"<boolean>\",\n    \"old_statuses\": \"<boolean>\",\n    \"subtasks\": \"<boolean>\",\n    \"custom_type\": \"<boolean>\",\n    \"old_assignees\": \"<boolean>\",\n    \"attachments\": \"<boolean>\",\n    \"comment\": \"<boolean>\",\n    \"old_status\": \"<boolean>\",\n    \"external_dependencies\": \"<boolean>\",\n    \"internal_dependencies\": \"<boolean>\",\n    \"priority\": \"<boolean>\",\n    \"custom_fields\": \"<boolean>\",\n    \"old_checklists\": \"<boolean>\",\n    \"relationships\": \"<boolean>\",\n    \"old_subtask_assignees\": \"<boolean>\",\n    \"start_date\": \"<dateTime>\",\n    \"due_date\": \"<dateTime>\",\n    \"remap_start_date\": \"<boolean>\",\n    \"skip_weekends\": \"<boolean>\",\n    \"archived\": 2\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/folder_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"folder_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"ECODE\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"return_immediately\": \"<boolean>\",\n    \"content\": \"<string>\",\n    \"time_estimate\": \"<boolean>\",\n    \"automation\": \"<boolean>\",\n    \"include_views\": \"<boolean>\",\n    \"old_due_date\": \"<boolean>\",\n    \"old_start_date\": \"<boolean>\",\n    \"old_followers\": \"<boolean>\",\n    \"comment_attachments\": \"<boolean>\",\n    \"recur_settings\": \"<boolean>\",\n    \"old_tags\": \"<boolean>\",\n    \"old_statuses\": \"<boolean>\",\n    \"subtasks\": \"<boolean>\",\n    \"custom_type\": \"<boolean>\",\n    \"old_assignees\": \"<boolean>\",\n    \"attachments\": \"<boolean>\",\n    \"comment\": \"<boolean>\",\n    \"old_status\": \"<boolean>\",\n    \"external_dependencies\": \"<boolean>\",\n    \"internal_dependencies\": \"<boolean>\",\n    \"priority\": \"<boolean>\",\n    \"custom_fields\": \"<boolean>\",\n    \"old_checklists\": \"<boolean>\",\n    \"relationships\": \"<boolean>\",\n    \"old_subtask_assignees\": \"<boolean>\",\n    \"start_date\": \"<dateTime>\",\n    \"due_date\": \"<dateTime>\",\n    \"remap_start_date\": \"<boolean>\",\n    \"skip_weekends\": \"<boolean>\",\n    \"archived\": 2\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/folder_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"folder_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"return_immediately\": \"<boolean>\",\n    \"content\": \"<string>\",\n    \"time_estimate\": \"<boolean>\",\n    \"automation\": \"<boolean>\",\n    \"include_views\": \"<boolean>\",\n    \"old_due_date\": \"<boolean>\",\n    \"old_start_date\": \"<boolean>\",\n    \"old_followers\": \"<boolean>\",\n    \"comment_attachments\": \"<boolean>\",\n    \"recur_settings\": \"<boolean>\",\n    \"old_tags\": \"<boolean>\",\n    \"old_statuses\": \"<boolean>\",\n    \"subtasks\": \"<boolean>\",\n    \"custom_type\": \"<boolean>\",\n    \"old_assignees\": \"<boolean>\",\n    \"attachments\": \"<boolean>\",\n    \"comment\": \"<boolean>\",\n    \"old_status\": \"<boolean>\",\n    \"external_dependencies\": \"<boolean>\",\n    \"internal_dependencies\": \"<boolean>\",\n    \"priority\": \"<boolean>\",\n    \"custom_fields\": \"<boolean>\",\n    \"old_checklists\": \"<boolean>\",\n    \"relationships\": \"<boolean>\",\n    \"old_subtask_assignees\": \"<boolean>\",\n    \"start_date\": \"<dateTime>\",\n    \"due_date\": \"<dateTime>\",\n    \"remap_start_date\": \"<boolean>\",\n    \"skip_weekends\": \"<boolean>\",\n    \"archived\": 2\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/folder_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"folder_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Template or space not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"return_immediately\": \"<boolean>\",\n    \"content\": \"<string>\",\n    \"time_estimate\": \"<boolean>\",\n    \"automation\": \"<boolean>\",\n    \"include_views\": \"<boolean>\",\n    \"old_due_date\": \"<boolean>\",\n    \"old_start_date\": \"<boolean>\",\n    \"old_followers\": \"<boolean>\",\n    \"comment_attachments\": \"<boolean>\",\n    \"recur_settings\": \"<boolean>\",\n    \"old_tags\": \"<boolean>\",\n    \"old_statuses\": \"<boolean>\",\n    \"subtasks\": \"<boolean>\",\n    \"custom_type\": \"<boolean>\",\n    \"old_assignees\": \"<boolean>\",\n    \"attachments\": \"<boolean>\",\n    \"comment\": \"<boolean>\",\n    \"old_status\": \"<boolean>\",\n    \"external_dependencies\": \"<boolean>\",\n    \"internal_dependencies\": \"<boolean>\",\n    \"priority\": \"<boolean>\",\n    \"custom_fields\": \"<boolean>\",\n    \"old_checklists\": \"<boolean>\",\n    \"relationships\": \"<boolean>\",\n    \"old_subtask_assignees\": \"<boolean>\",\n    \"start_date\": \"<dateTime>\",\n    \"due_date\": \"<dateTime>\",\n    \"remap_start_date\": \"<boolean>\",\n    \"skip_weekends\": \"<boolean>\",\n    \"archived\": 2\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/folder_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"folder_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"return_immediately\": \"<boolean>\",\n    \"content\": \"<string>\",\n    \"time_estimate\": \"<boolean>\",\n    \"automation\": \"<boolean>\",\n    \"include_views\": \"<boolean>\",\n    \"old_due_date\": \"<boolean>\",\n    \"old_start_date\": \"<boolean>\",\n    \"old_followers\": \"<boolean>\",\n    \"comment_attachments\": \"<boolean>\",\n    \"recur_settings\": \"<boolean>\",\n    \"old_tags\": \"<boolean>\",\n    \"old_statuses\": \"<boolean>\",\n    \"subtasks\": \"<boolean>\",\n    \"custom_type\": \"<boolean>\",\n    \"old_assignees\": \"<boolean>\",\n    \"attachments\": \"<boolean>\",\n    \"comment\": \"<boolean>\",\n    \"old_status\": \"<boolean>\",\n    \"external_dependencies\": \"<boolean>\",\n    \"internal_dependencies\": \"<boolean>\",\n    \"priority\": \"<boolean>\",\n    \"custom_fields\": \"<boolean>\",\n    \"old_checklists\": \"<boolean>\",\n    \"relationships\": \"<boolean>\",\n    \"old_subtask_assignees\": \"<boolean>\",\n    \"start_date\": \"<dateTime>\",\n    \"due_date\": \"<dateTime>\",\n    \"remap_start_date\": \"<boolean>\",\n    \"skip_weekends\": \"<boolean>\",\n    \"archived\": 2\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/folder_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"folder_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Goals",
			"item": [
				{
					"name": "Get Goals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/goal?include_completed=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"goal"
							],
							"query": [
								{
									"key": "include_completed",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the Goals available in a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/goal?include_completed=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"goal"
									],
									"query": [
										{
											"key": "include_completed",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"goals\": [\n    {\n      \"id\": \"<string>\",\n      \"pretty_id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"creator\": \"<integer>\",\n      \"owner\": \"<string,null>\",\n      \"color\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"start_date\": \"<string,null>\",\n      \"due_date\": \"<string>\",\n      \"description\": \"<string>\",\n      \"private\": \"<boolean>\",\n      \"archived\": \"<boolean>\",\n      \"multiple_owners\": \"<boolean>\",\n      \"editor_token\": \"<string>\",\n      \"date_updated\": \"<string>\",\n      \"last_update\": \"<string>\",\n      \"folder_id\": \"<string,null>\",\n      \"pinned\": \"<boolean>\",\n      \"owners\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"key_result_count\": \"<integer>\",\n      \"members\": [\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"profilePicture\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"isCreator\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"profilePicture\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"isCreator\": \"<boolean>\"\n        }\n      ],\n      \"group_members\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"percent_completed\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"pretty_id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"creator\": \"<integer>\",\n      \"owner\": \"<string,null>\",\n      \"color\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"start_date\": \"<string,null>\",\n      \"due_date\": \"<string>\",\n      \"description\": \"<string>\",\n      \"private\": \"<boolean>\",\n      \"archived\": \"<boolean>\",\n      \"multiple_owners\": \"<boolean>\",\n      \"editor_token\": \"<string>\",\n      \"date_updated\": \"<string>\",\n      \"last_update\": \"<string>\",\n      \"folder_id\": \"<string,null>\",\n      \"pinned\": \"<boolean>\",\n      \"owners\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"key_result_count\": \"<integer>\",\n      \"members\": [\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"profilePicture\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"isCreator\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"profilePicture\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"isCreator\": \"<boolean>\"\n        }\n      ],\n      \"group_members\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"percent_completed\": \"<integer>\"\n    }\n  ],\n  \"folders\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"private\": \"<boolean>\",\n      \"date_created\": \"<string>\",\n      \"creator\": \"<integer>\",\n      \"goal_count\": \"<integer>\",\n      \"members\": [\n        {\n          \"id\": \"<integer>\",\n          \"email\": \"<string>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"date_added\": \"<integer>\",\n          \"added_by\": \"<integer>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"email\": \"<string>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"date_added\": \"<integer>\",\n          \"added_by\": \"<integer>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        }\n      ],\n      \"goals\": [\n        {\n          \"id\": \"<string>\",\n          \"pretty_id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"team_id\": \"<string>\",\n          \"creator\": \"<integer>\",\n          \"owner\": \"<string,null>\",\n          \"color\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"start_date\": \"<string,null>\",\n          \"due_date\": \"<string>\",\n          \"description\": \"<string>\",\n          \"private\": \"<boolean>\",\n          \"archived\": \"<boolean>\",\n          \"multiple_owners\": \"<boolean>\",\n          \"editor_token\": \"<string>\",\n          \"date_updated\": \"<string>\",\n          \"last_update\": \"<string>\",\n          \"folder_id\": \"<string>\",\n          \"folder_access\": \"<boolean>\",\n          \"pinned\": \"<boolean>\",\n          \"owners\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key_result_count\": \"<integer>\",\n          \"members\": [\n            {\n              \"id\": \"<integer>\",\n              \"username\": \"<string>\",\n              \"email\": \"<string>\",\n              \"color\": \"<string>\",\n              \"permission_level\": \"<string>\",\n              \"profilePicture\": \"<string>\",\n              \"initials\": \"<string>\",\n              \"isCreator\": \"<boolean>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"username\": \"<string>\",\n              \"email\": \"<string>\",\n              \"color\": \"<string>\",\n              \"permission_level\": \"<string>\",\n              \"profilePicture\": \"<string>\",\n              \"initials\": \"<string>\",\n              \"isCreator\": \"<boolean>\"\n            }\n          ],\n          \"group_members\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"percent_completed\": \"<integer>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"pretty_id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"team_id\": \"<string>\",\n          \"creator\": \"<integer>\",\n          \"owner\": \"<string,null>\",\n          \"color\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"start_date\": \"<string,null>\",\n          \"due_date\": \"<string>\",\n          \"description\": \"<string>\",\n          \"private\": \"<boolean>\",\n          \"archived\": \"<boolean>\",\n          \"multiple_owners\": \"<boolean>\",\n          \"editor_token\": \"<string>\",\n          \"date_updated\": \"<string>\",\n          \"last_update\": \"<string>\",\n          \"folder_id\": \"<string>\",\n          \"folder_access\": \"<boolean>\",\n          \"pinned\": \"<boolean>\",\n          \"owners\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key_result_count\": \"<integer>\",\n          \"members\": [\n            {\n              \"id\": \"<integer>\",\n              \"username\": \"<string>\",\n              \"email\": \"<string>\",\n              \"color\": \"<string>\",\n              \"permission_level\": \"<string>\",\n              \"profilePicture\": \"<string>\",\n              \"initials\": \"<string>\",\n              \"isCreator\": \"<boolean>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"username\": \"<string>\",\n              \"email\": \"<string>\",\n              \"color\": \"<string>\",\n              \"permission_level\": \"<string>\",\n              \"profilePicture\": \"<string>\",\n              \"initials\": \"<string>\",\n              \"isCreator\": \"<boolean>\"\n            }\n          ],\n          \"group_members\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"percent_completed\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"private\": \"<boolean>\",\n      \"date_created\": \"<string>\",\n      \"creator\": \"<integer>\",\n      \"goal_count\": \"<integer>\",\n      \"members\": [\n        {\n          \"id\": \"<integer>\",\n          \"email\": \"<string>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"date_added\": \"<integer>\",\n          \"added_by\": \"<integer>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"email\": \"<string>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"date_added\": \"<integer>\",\n          \"added_by\": \"<integer>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        }\n      ],\n      \"goals\": [\n        {\n          \"id\": \"<string>\",\n          \"pretty_id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"team_id\": \"<string>\",\n          \"creator\": \"<integer>\",\n          \"owner\": \"<string,null>\",\n          \"color\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"start_date\": \"<string,null>\",\n          \"due_date\": \"<string>\",\n          \"description\": \"<string>\",\n          \"private\": \"<boolean>\",\n          \"archived\": \"<boolean>\",\n          \"multiple_owners\": \"<boolean>\",\n          \"editor_token\": \"<string>\",\n          \"date_updated\": \"<string>\",\n          \"last_update\": \"<string>\",\n          \"folder_id\": \"<string>\",\n          \"folder_access\": \"<boolean>\",\n          \"pinned\": \"<boolean>\",\n          \"owners\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key_result_count\": \"<integer>\",\n          \"members\": [\n            {\n              \"id\": \"<integer>\",\n              \"username\": \"<string>\",\n              \"email\": \"<string>\",\n              \"color\": \"<string>\",\n              \"permission_level\": \"<string>\",\n              \"profilePicture\": \"<string>\",\n              \"initials\": \"<string>\",\n              \"isCreator\": \"<boolean>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"username\": \"<string>\",\n              \"email\": \"<string>\",\n              \"color\": \"<string>\",\n              \"permission_level\": \"<string>\",\n              \"profilePicture\": \"<string>\",\n              \"initials\": \"<string>\",\n              \"isCreator\": \"<boolean>\"\n            }\n          ],\n          \"group_members\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"percent_completed\": \"<integer>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"pretty_id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"team_id\": \"<string>\",\n          \"creator\": \"<integer>\",\n          \"owner\": \"<string,null>\",\n          \"color\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"start_date\": \"<string,null>\",\n          \"due_date\": \"<string>\",\n          \"description\": \"<string>\",\n          \"private\": \"<boolean>\",\n          \"archived\": \"<boolean>\",\n          \"multiple_owners\": \"<boolean>\",\n          \"editor_token\": \"<string>\",\n          \"date_updated\": \"<string>\",\n          \"last_update\": \"<string>\",\n          \"folder_id\": \"<string>\",\n          \"folder_access\": \"<boolean>\",\n          \"pinned\": \"<boolean>\",\n          \"owners\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key_result_count\": \"<integer>\",\n          \"members\": [\n            {\n              \"id\": \"<integer>\",\n              \"username\": \"<string>\",\n              \"email\": \"<string>\",\n              \"color\": \"<string>\",\n              \"permission_level\": \"<string>\",\n              \"profilePicture\": \"<string>\",\n              \"initials\": \"<string>\",\n              \"isCreator\": \"<boolean>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"username\": \"<string>\",\n              \"email\": \"<string>\",\n              \"color\": \"<string>\",\n              \"permission_level\": \"<string>\",\n              \"profilePicture\": \"<string>\",\n              \"initials\": \"<string>\",\n              \"isCreator\": \"<boolean>\"\n            }\n          ],\n          \"group_members\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"percent_completed\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Goal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"multiple_owners\": \"<boolean>\",\n  \"owners\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"color\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/goal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"goal"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Add a new Goal to a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"multiple_owners\": \"<boolean>\",\n  \"owners\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"color\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/goal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"goal"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"goal\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"team_id\": \"<string>\",\n    \"date_created\": \"<string>\",\n    \"start_date\": \"<string,null>\",\n    \"due_date\": \"<string>\",\n    \"description\": \"<string>\",\n    \"private\": \"<boolean>\",\n    \"archived\": \"<boolean>\",\n    \"creator\": \"<integer>\",\n    \"color\": \"<string>\",\n    \"pretty_id\": \"<string>\",\n    \"multiple_owners\": \"<boolean>\",\n    \"folder_id\": \"<string,null>\",\n    \"members\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"owners\": [\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      }\n    ],\n    \"key_results\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"percent_completed\": \"<integer>\",\n    \"history\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pretty_url\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get Goal",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/goal/:goal_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"goal",
								":goal_id"
							],
							"variable": [
								{
									"key": "goal_id",
									"value": "<string>",
									"description": "(Required) 900e-462d-a849-4a216b06d930 (uuid)"
								}
							]
						},
						"description": "View the details of a Goal including its Targets."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/goal/:goal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"goal",
										":goal_id"
									],
									"variable": [
										{
											"key": "goal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"goal\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"team_id\": \"<string>\",\n    \"date_created\": \"<string>\",\n    \"start_date\": \"<string,null>\",\n    \"due_date\": \"<string>\",\n    \"description\": \"<string>\",\n    \"private\": \"<boolean>\",\n    \"archived\": \"<boolean>\",\n    \"creator\": \"<integer>\",\n    \"color\": \"<string>\",\n    \"pretty_id\": \"<string>\",\n    \"multiple_owners\": \"<boolean>\",\n    \"folder_id\": \"<string,null>\",\n    \"members\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"owners\": [\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      }\n    ],\n    \"key_results\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"percent_completed\": \"<integer>\",\n    \"history\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pretty_url\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Goal",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"rem_owners\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"add_owners\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"color\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/goal/:goal_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"goal",
								":goal_id"
							],
							"variable": [
								{
									"key": "goal_id",
									"value": "<string>",
									"description": "(Required) 900e-462d-a849-4a216b06d930 (uuid)"
								}
							]
						},
						"description": "Rename a Goal, set the due date, replace the description, add or remove owners, and set the Goal color."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"rem_owners\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"add_owners\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"color\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/goal/:goal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"goal",
										":goal_id"
									],
									"variable": [
										{
											"key": "goal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"goal\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"team_id\": \"<string>\",\n    \"date_created\": \"<string>\",\n    \"start_date\": \"<string,null>\",\n    \"due_date\": \"<string>\",\n    \"description\": \"<string>\",\n    \"private\": \"<boolean>\",\n    \"archived\": \"<boolean>\",\n    \"creator\": \"<integer>\",\n    \"color\": \"<string>\",\n    \"pretty_id\": \"<string>\",\n    \"multiple_owners\": \"<boolean>\",\n    \"folder_id\": \"<string,null>\",\n    \"members\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"owners\": [\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      }\n    ],\n    \"key_results\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"percent_completed\": \"<integer>\",\n    \"history\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pretty_url\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Goal",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/goal/:goal_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"goal",
								":goal_id"
							],
							"variable": [
								{
									"key": "goal_id",
									"value": "<string>",
									"description": "(Required) 900e-462d-a849-4a216b06d930 (uuid)"
								}
							]
						},
						"description": "Remove a Goal from your Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/goal/:goal_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"goal",
										":goal_id"
									],
									"variable": [
										{
											"key": "goal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Create Key Result",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"owners\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"type\": \"<string>\",\n  \"steps_start\": \"<integer>\",\n  \"steps_end\": \"<integer>\",\n  \"unit\": \"<string>\",\n  \"task_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"list_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/goal/:goal_id/key_result",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"goal",
								":goal_id",
								"key_result"
							],
							"variable": [
								{
									"key": "goal_id",
									"value": "<string>",
									"description": "(Required) 900e-462d-a849-4a216b06d930 (uuid)"
								}
							]
						},
						"description": "Add a Target to a Goal."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"owners\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"type\": \"<string>\",\n  \"steps_start\": \"<integer>\",\n  \"steps_end\": \"<integer>\",\n  \"unit\": \"<string>\",\n  \"task_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"list_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/goal/:goal_id/key_result",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"goal",
										":goal_id",
										"key_result"
									],
									"variable": [
										{
											"key": "goal_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"key_result\": {\n    \"id\": \"<string>\",\n    \"goal_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"unit\": \"<string>\",\n    \"creator\": \"<integer>\",\n    \"date_created\": \"<string>\",\n    \"goal_pretty_id\": \"<string>\",\n    \"percent_completed\": \"<string,null>\",\n    \"completed\": \"<boolean>\",\n    \"task_ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"subcategory_ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"owners\": [\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      }\n    ],\n    \"last_action\": {\n      \"id\": \"<string>\",\n      \"key_result_id\": \"<string>\",\n      \"userid\": \"<integer>\",\n      \"date_modified\": \"<string>\",\n      \"steps_taken\": \"<string,null>\",\n      \"note\": \"<string>\",\n      \"steps_before\": \"<string,null>\",\n      \"steps_current\": \"<string,null>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Edit Key Result",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"steps_current\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/key_result/:key_result_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"key_result",
								":key_result_id"
							],
							"variable": [
								{
									"key": "key_result_id",
									"value": "<string>",
									"description": "(Required) 8480-49bc-8c57-e569747efe93 (uuid)"
								}
							]
						},
						"description": "Update a Target."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"steps_current\": \"<integer>\",\n  \"note\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/key_result/:key_result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"key_result",
										":key_result_id"
									],
									"variable": [
										{
											"key": "key_result_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"key_result\": {\n    \"id\": \"<string>\",\n    \"goal_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"unit\": \"<string>\",\n    \"creator\": \"<integer>\",\n    \"date_created\": \"<string>\",\n    \"goal_pretty_id\": \"<string>\",\n    \"percent_completed\": \"<string,null>\",\n    \"completed\": \"<boolean>\",\n    \"task_ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"subcategory_ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"owners\": [\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      }\n    ],\n    \"last_action\": {\n      \"id\": \"<string>\",\n      \"key_result_id\": \"<string>\",\n      \"userid\": \"<integer>\",\n      \"date_modified\": \"<string>\",\n      \"steps_taken\": \"<string,null>\",\n      \"note\": \"<string>\",\n      \"steps_before\": \"<string,null>\",\n      \"steps_current\": \"<string,null>\",\n      \"steps_before_float\": \"<integer>\",\n      \"steps_taken_float\": \"<integer>\",\n      \"steps_current_float\": \"<string,null>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Key Result",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/key_result/:key_result_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"key_result",
								":key_result_id"
							],
							"variable": [
								{
									"key": "key_result_id",
									"value": "<string>",
									"description": "(Required) 8480-49bc-8c57-e569747efe93 (uuid)"
								}
							]
						},
						"description": "Delete a target from a Goal."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/key_result/:key_result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"key_result",
										":key_result_id"
									],
									"variable": [
										{
											"key": "key_result_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Guests",
			"item": [
				{
					"name": "Invite Guest To Workspace",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<string>\",\n  \"can_edit_tags\": \"<boolean>\",\n  \"can_see_time_spent\": \"<boolean>\",\n  \"can_see_time_estimated\": \"<boolean>\",\n  \"can_create_views\": \"<boolean>\",\n  \"custom_role_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/guest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"guest"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Invite a guest to join a Workspace. To invite a member to your Workspace, use the [Invite User to Workspace](ref:inviteusertoworkspace) endpoint. \\\n \\\nYou'll also need to grant the guest access to specific items using the following endpoints: [Add Guest to Folder](ref:addguesttofolder), [Add Guest to List](ref:addguesttolist), or [Add Guest to Task](ref:addguesttotask). \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"can_edit_tags\": \"<boolean>\",\n  \"can_see_time_spent\": \"<boolean>\",\n  \"can_see_time_estimated\": \"<boolean>\",\n  \"can_create_views\": \"<boolean>\",\n  \"custom_role_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/guest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"guest"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"team\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"color\": \"<string>\",\n    \"avatar\": \"<string,null>\",\n    \"members\": [\n      {\n        \"user\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string,null>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string,null>\",\n          \"profilePicture\": \"<string,null>\",\n          \"initials\": \"<string>\",\n          \"role\": \"<integer>\",\n          \"custom_role\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          \"last_active\": \"<string,null>\",\n          \"date_joined\": \"<string,null>\",\n          \"date_invited\": \"<string>\"\n        },\n        \"invited_by\": {\n          \"id\": \"<integer>\",\n          \"color\": \"<string>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        \"can_see_time_spent\": \"<boolean>\",\n        \"can_see_time_estimated\": \"<boolean>\",\n        \"can_edit_tags\": \"<boolean>\",\n        \"can_create_views\": \"<boolean>\"\n      },\n      {\n        \"user\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string,null>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string,null>\",\n          \"profilePicture\": \"<string,null>\",\n          \"initials\": \"<string>\",\n          \"role\": \"<integer>\",\n          \"custom_role\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          \"last_active\": \"<string,null>\",\n          \"date_joined\": \"<string,null>\",\n          \"date_invited\": \"<string>\"\n        },\n        \"invited_by\": {\n          \"id\": \"<integer>\",\n          \"color\": \"<string>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        \"can_see_time_spent\": \"<boolean>\",\n        \"can_see_time_estimated\": \"<boolean>\",\n        \"can_edit_tags\": \"<boolean>\",\n        \"can_create_views\": \"<boolean>\"\n      }\n    ],\n    \"roles\": [\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"custom\": \"<boolean>\",\n        \"inherited_role\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"custom\": \"<boolean>\",\n        \"inherited_role\": \"<integer>\"\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get Guest",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/guest/:guest_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"guest",
								":guest_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View information about a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/guest/:guest_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"guest",
										":guest_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Edit Guest On Workspace",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"can_edit_tags\": \"<boolean>\",\n  \"can_see_time_spent\": \"<boolean>\",\n  \"can_see_time_estimated\": \"<boolean>\",\n  \"can_create_views\": \"<boolean>\",\n  \"custom_role_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/guest/:guest_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"guest",
								":guest_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Rename and configure options for a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"can_edit_tags\": \"<boolean>\",\n  \"can_see_time_spent\": \"<boolean>\",\n  \"can_see_time_estimated\": \"<boolean>\",\n  \"can_create_views\": \"<boolean>\",\n  \"custom_role_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/guest/:guest_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"guest",
										":guest_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"guest\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string,null>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"custom_role\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"can_see_time_spent\": \"<boolean>\",\n    \"can_see_time_estimated\": \"<boolean>\",\n    \"can_edit_tags\": \"<boolean>\",\n    \"can_create_views\": \"<boolean>\",\n    \"shared\": {\n      \"tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"folders\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Remove Guest From Workspace",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/guest/:guest_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"guest",
								":guest_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Revoke a guest's access to a Workspace. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/guest/:guest_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"guest",
										":guest_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"team\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"color\": \"<string>\",\n    \"avatar\": \"<string,null>\",\n    \"members\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Add Guest To Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission_level\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/guest/:guest_id?include_shared=<boolean>&custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"guest",
								":guest_id"
							],
							"query": [
								{
									"key": "include_shared",
									"value": "<boolean>",
									"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
								},
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Share a task with a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permission_level\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/guest/:guest_id?include_shared=<boolean>&custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"guest",
										":guest_id"
									],
									"query": [
										{
											"key": "include_shared",
											"value": "<boolean>",
											"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
										},
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"guest\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string,null>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"can_see_time_spent\": \"<boolean>\",\n    \"can_see_time_estimated\": \"<boolean>\",\n    \"can_edit_tags\": \"<boolean>\",\n    \"shared\": {\n      \"tasks\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"status\": {\n            \"status\": \"<string>\",\n            \"color\": \"<string>\",\n            \"orderindex\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          \"orderindex\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"date_updated\": \"<string>\",\n          \"date_closed\": \"<string,null>\",\n          \"archived\": \"<boolean>\",\n          \"creator\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          },\n          \"assignees\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"checklists\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"parent\": \"<string,null>\",\n          \"priority\": {\n            \"id\": \"<string>\",\n            \"priority\": \"<string>\",\n            \"color\": \"<string>\",\n            \"orderindex\": \"<string>\"\n          },\n          \"due_date\": \"<string>\",\n          \"start_date\": \"<string,null>\",\n          \"points\": \"<string,null>\",\n          \"time_estimate\": \"<string,null>\",\n          \"custom_fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dependencies\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"team_id\": \"<string>\",\n          \"url\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"list\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"access\": \"<boolean>\"\n          },\n          \"folder\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"hidden\": \"<boolean>\",\n            \"access\": \"<boolean>\"\n          },\n          \"space\": {\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"status\": {\n            \"status\": \"<string>\",\n            \"color\": \"<string>\",\n            \"orderindex\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          \"orderindex\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"date_updated\": \"<string>\",\n          \"date_closed\": \"<string,null>\",\n          \"archived\": \"<boolean>\",\n          \"creator\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          },\n          \"assignees\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"checklists\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"parent\": \"<string,null>\",\n          \"priority\": {\n            \"id\": \"<string>\",\n            \"priority\": \"<string>\",\n            \"color\": \"<string>\",\n            \"orderindex\": \"<string>\"\n          },\n          \"due_date\": \"<string>\",\n          \"start_date\": \"<string,null>\",\n          \"points\": \"<string,null>\",\n          \"time_estimate\": \"<string,null>\",\n          \"custom_fields\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dependencies\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"team_id\": \"<string>\",\n          \"url\": \"<string>\",\n          \"permission_level\": \"<string>\",\n          \"list\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"access\": \"<boolean>\"\n          },\n          \"folder\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"hidden\": \"<boolean>\",\n            \"access\": \"<boolean>\"\n          },\n          \"space\": {\n            \"id\": \"<string>\"\n          }\n        }\n      ],\n      \"lists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"folders\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Remove Guest From Task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/guest/:guest_id?include_shared=<boolean>&custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"guest",
								":guest_id"
							],
							"query": [
								{
									"key": "include_shared",
									"value": "<boolean>",
									"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
								},
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Revoke a guest's access to a task. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/guest/:guest_id?include_shared=<boolean>&custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"guest",
										":guest_id"
									],
									"query": [
										{
											"key": "include_shared",
											"value": "<boolean>",
											"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
										},
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"guest\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string,null>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"can_see_time_spent\": \"<boolean>\",\n    \"can_see_time_estimated\": \"<boolean>\",\n    \"can_edit_tags\": \"<boolean>\",\n    \"shared\": {\n      \"tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"folders\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add Guest To List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission_level\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/guest/:guest_id?include_shared=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"guest",
								":guest_id"
							],
							"query": [
								{
									"key": "include_shared",
									"value": "<boolean>",
									"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
								}
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Share a List with a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permission_level\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/guest/:guest_id?include_shared=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"guest",
										":guest_id"
									],
									"query": [
										{
											"key": "include_shared",
											"value": "<boolean>",
											"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
										}
									],
									"variable": [
										{
											"key": "list_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"guest\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string,null>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"can_see_time_spent\": \"<boolean>\",\n    \"can_see_time_estimated\": \"<boolean>\",\n    \"can_edit_tags\": \"<boolean>\",\n    \"shared\": {\n      \"tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lists\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"status\": \"<string,null>\",\n          \"priority\": \"<string,null>\",\n          \"assignee\": \"<string,null>\",\n          \"task_count\": \"<string>\",\n          \"due_date\": \"<string,null>\",\n          \"start_date\": \"<string,null>\",\n          \"archived\": \"<boolean>\",\n          \"override_statuses\": \"<boolean>\",\n          \"statuses\": [\n            {\n              \"status\": \"<string>\",\n              \"color\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"status\": \"<string>\",\n              \"color\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"permission_level\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"status\": \"<string,null>\",\n          \"priority\": \"<string,null>\",\n          \"assignee\": \"<string,null>\",\n          \"task_count\": \"<string>\",\n          \"due_date\": \"<string,null>\",\n          \"start_date\": \"<string,null>\",\n          \"archived\": \"<boolean>\",\n          \"override_statuses\": \"<boolean>\",\n          \"statuses\": [\n            {\n              \"status\": \"<string>\",\n              \"color\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"status\": \"<string>\",\n              \"color\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"permission_level\": \"<string>\"\n        }\n      ],\n      \"folders\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Remove Guest From List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/guest/:guest_id?include_shared=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"guest",
								":guest_id"
							],
							"query": [
								{
									"key": "include_shared",
									"value": "<boolean>",
									"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
								}
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Revoke a guest's access to a List.\\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/guest/:guest_id?include_shared=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"guest",
										":guest_id"
									],
									"query": [
										{
											"key": "include_shared",
											"value": "<boolean>",
											"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
										}
									],
									"variable": [
										{
											"key": "list_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"guest\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string,null>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"can_see_time_spent\": \"<boolean>\",\n    \"can_see_time_estimated\": \"<boolean>\",\n    \"can_edit_tags\": \"<boolean>\",\n    \"shared\": {\n      \"tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"folders\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add Guest To Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission_level\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id/guest/:guest_id?include_shared=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id",
								"guest",
								":guest_id"
							],
							"query": [
								{
									"key": "include_shared",
									"value": "<boolean>",
									"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
								}
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Share a Folder with a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permission_level\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/guest/:guest_id?include_shared=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"guest",
										":guest_id"
									],
									"query": [
										{
											"key": "include_shared",
											"value": "<boolean>",
											"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
										}
									],
									"variable": [
										{
											"key": "folder_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"guest\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string,null>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"can_see_time_spent\": \"<boolean>\",\n    \"can_see_time_estimated\": \"<boolean>\",\n    \"can_edit_tags\": \"<boolean>\",\n    \"shared\": {\n      \"tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"folders\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"override_statuses\": \"<boolean>\",\n          \"hidden\": \"<boolean>\",\n          \"task_count\": \"<string>\",\n          \"archived\": \"<boolean>\",\n          \"statuses\": [\n            {\n              \"status\": \"<string>\",\n              \"color\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"status\": \"<string>\",\n              \"color\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"lists\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permission_level\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"override_statuses\": \"<boolean>\",\n          \"hidden\": \"<boolean>\",\n          \"task_count\": \"<string>\",\n          \"archived\": \"<boolean>\",\n          \"statuses\": [\n            {\n              \"status\": \"<string>\",\n              \"color\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"status\": \"<string>\",\n              \"color\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"lists\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permission_level\": \"<string>\"\n        }\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Remove Guest From Folder",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id/guest/:guest_id?include_shared=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id",
								"guest",
								":guest_id"
							],
							"query": [
								{
									"key": "include_shared",
									"value": "<boolean>",
									"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
								}
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "guest_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Revoke a guest's access to a Folder. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/guest/:guest_id?include_shared=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"guest",
										":guest_id"
									],
									"query": [
										{
											"key": "include_shared",
											"value": "<boolean>",
											"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
										}
									],
									"variable": [
										{
											"key": "folder_id"
										},
										{
											"key": "guest_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"guest\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string,null>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"can_see_time_spent\": \"<boolean>\",\n    \"can_see_time_estimated\": \"<boolean>\",\n    \"can_edit_tags\": \"<boolean>\",\n    \"shared\": {\n      \"tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"folders\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Lists",
			"item": [
				{
					"name": "Get Lists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id/list?archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id",
								"list"
							],
							"query": [
								{
									"key": "archived",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the Lists within a Folder."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/list?archived=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"list"
									],
									"query": [
										{
											"key": "archived",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "folder_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"lists\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"hide_label\": \"<boolean>\"\n      },\n      \"priority\": {\n        \"priority\": \"<string>\",\n        \"color\": \"<string>\"\n      },\n      \"assignee\": \"<string,null>\",\n      \"task_count\": \"<string,null>\",\n      \"due_date\": \"<string,null>\",\n      \"start_date\": \"<string,null>\",\n      \"folder\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hidden\": \"<boolean>\",\n        \"access\": \"<boolean>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"access\": \"<boolean>\"\n      },\n      \"archived\": \"<boolean>\",\n      \"override_statuses\": \"<boolean>\",\n      \"permission_level\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"hide_label\": \"<boolean>\"\n      },\n      \"priority\": {\n        \"priority\": \"<string>\",\n        \"color\": \"<string>\"\n      },\n      \"assignee\": \"<string,null>\",\n      \"task_count\": \"<string,null>\",\n      \"due_date\": \"<string,null>\",\n      \"start_date\": \"<string,null>\",\n      \"folder\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hidden\": \"<boolean>\",\n        \"access\": \"<boolean>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"access\": \"<boolean>\"\n      },\n      \"archived\": \"<boolean>\",\n      \"override_statuses\": \"<boolean>\",\n      \"permission_level\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"assignee\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"include_markdown_description\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id",
								"list"
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a new List to a Folder."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"assignee\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"include_markdown_description\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"list"
									],
									"variable": [
										{
											"key": "folder_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orderindex\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"status\": {\n    \"status\": \"<string>\",\n    \"color\": \"<string>\",\n    \"hide_label\": \"<boolean>\"\n  },\n  \"priority\": {\n    \"priority\": \"<string>\",\n    \"color\": \"<string>\"\n  },\n  \"assignee\": {\n    \"id\": \"<integer>\",\n    \"color\": \"<string>\",\n    \"username\": \"<string>\",\n    \"initials\": \"<string>\",\n    \"profilePicture\": \"<string>\"\n  },\n  \"task_count\": \"<string,null>\",\n  \"due_date\": \"<string>\",\n  \"due_date_time\": \"<boolean>\",\n  \"start_date\": \"<string,null>\",\n  \"start_date_time\": \"<string,null>\",\n  \"folder\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"access\": \"<boolean>\"\n  },\n  \"space\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"access\": \"<boolean>\"\n  },\n  \"statuses\": [\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"inbound_address\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Folderless Lists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/list?archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"list"
							],
							"query": [
								{
									"key": "archived",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the Lists in a Space that aren't located in a Folder."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/list?archived=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"list"
									],
									"query": [
										{
											"key": "archived",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"lists\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"hide_label\": \"<boolean>\"\n      },\n      \"priority\": {\n        \"priority\": \"<string>\",\n        \"color\": \"<string>\"\n      },\n      \"assignee\": \"<string,null>\",\n      \"task_count\": \"<string,null>\",\n      \"due_date\": \"<string,null>\",\n      \"start_date\": \"<string,null>\",\n      \"folder\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hidden\": \"<boolean>\",\n        \"access\": \"<boolean>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"access\": \"<boolean>\"\n      },\n      \"archived\": \"<boolean>\",\n      \"override_statuses\": \"<boolean>\",\n      \"permission_level\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"hide_label\": \"<boolean>\"\n      },\n      \"priority\": {\n        \"priority\": \"<string>\",\n        \"color\": \"<string>\"\n      },\n      \"assignee\": \"<string,null>\",\n      \"task_count\": \"<string,null>\",\n      \"due_date\": \"<string,null>\",\n      \"start_date\": \"<string,null>\",\n      \"folder\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hidden\": \"<boolean>\",\n        \"access\": \"<boolean>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"access\": \"<boolean>\"\n      },\n      \"archived\": \"<boolean>\",\n      \"override_statuses\": \"<boolean>\",\n      \"permission_level\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Folderless List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"assignee\": \"<integer>\",\n  \"status\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"list"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a new List in a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"assignee\": \"<integer>\",\n  \"status\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"list"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orderindex\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"status\": {\n    \"status\": \"<string>\",\n    \"color\": \"<string>\",\n    \"hide_label\": \"<boolean>\"\n  },\n  \"priority\": {\n    \"priority\": \"<string>\",\n    \"color\": \"<string>\"\n  },\n  \"assignee\": {\n    \"id\": \"<integer>\",\n    \"color\": \"<string>\",\n    \"username\": \"<string>\",\n    \"initials\": \"<string>\",\n    \"profilePicture\": \"<string>\"\n  },\n  \"task_count\": \"<string,null>\",\n  \"due_date\": \"<string>\",\n  \"due_date_time\": \"<boolean>\",\n  \"start_date\": \"<string,null>\",\n  \"start_date_time\": \"<string,null>\",\n  \"folder\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"access\": \"<boolean>\"\n  },\n  \"space\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"access\": \"<boolean>\"\n  },\n  \"statuses\": [\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"inbound_address\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) The List ID. To find the List ID, right-click the List in your Sidebar, select Copy link, and paste the link in your URL. The last string in the URL is your List ID."
								}
							]
						},
						"description": "View information about a List."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orderindex\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"status\": {\n    \"status\": \"<string>\",\n    \"color\": \"<string>\",\n    \"hide_label\": \"<boolean>\"\n  },\n  \"priority\": {\n    \"priority\": \"<string>\",\n    \"color\": \"<string>\"\n  },\n  \"assignee\": \"<string,null>\",\n  \"due_date\": \"<string>\",\n  \"due_date_time\": \"<boolean>\",\n  \"start_date\": \"<string,null>\",\n  \"start_date_time\": \"<string,null>\",\n  \"folder\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"access\": \"<boolean>\"\n  },\n  \"space\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"access\": \"<boolean>\"\n  },\n  \"inbound_address\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"override_statuses\": \"<boolean>\",\n  \"statuses\": [\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"permission_level\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"assignee\": \"<string>\",\n  \"status\": \"<string>\",\n  \"unset_status\": \"<boolean>\",\n  \"include_markdown_description\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Rename a List, update the List Info description, set a due date/time, set the List's priority, set an assignee, set or remove the List color."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"assignee\": \"<string>\",\n  \"status\": \"<string>\",\n  \"unset_status\": \"<boolean>\",\n  \"include_markdown_description\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orderindex\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"status\": {\n    \"status\": \"<string>\",\n    \"color\": \"<string>\",\n    \"hide_label\": \"<boolean>\"\n  },\n  \"priority\": {\n    \"priority\": \"<string>\",\n    \"color\": \"<string>\"\n  },\n  \"assignee\": \"<string,null>\",\n  \"task_count\": \"<string,null>\",\n  \"due_date\": \"<string>\",\n  \"due_date_time\": \"<boolean>\",\n  \"start_date\": \"<string,null>\",\n  \"start_date_time\": \"<string,null>\",\n  \"folder\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"hidden\": \"<boolean>\",\n    \"access\": \"<boolean>\"\n  },\n  \"space\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"access\": \"<boolean>\"\n  },\n  \"statuses\": [\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"inbound_address\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete a List from your Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Add Task To List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/task/:task_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"task",
								":task_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a task to an additional List. \\\n \\\n***Note:** This endpoint requires the [Tasks in Multiple List ClickApp](https://help.clickup.com/hc/en-us/articles/6309958824727-Tasks-in-Multiple-Lists) to be enabled.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/task/:task_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"task",
										":task_id"
									],
									"variable": [
										{
											"key": "list_id"
										},
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Remove Task From List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/task/:task_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"task",
								":task_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Remove a task from an additional List. You can't remove a task from its home List. \\\n \\\n***Note:** This endpoint requires the [Tasks in Multiple List ClickApp](https://help.clickup.com/hc/en-us/articles/6309958824727-Tasks-in-Multiple-Lists) to be enabled.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/task/:task_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"task",
										":task_id"
									],
									"variable": [
										{
											"key": "list_id"
										},
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Create List From Template in Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id/list_template/:template_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id",
								"list_template",
								":template_id"
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<string>",
									"description": "(Required) ID of the Folder where the List will be created"
								},
								{
									"key": "template_id",
									"value": "<string>",
									"description": "(Required) ID of the template to use"
								}
							]
						},
						"description": "Create a new list using a list template in a folder."
					},
					"response": [
						{
							"name": "List created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "folder_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"list\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"deleted\": \"<boolean>\",\n    \"orderindex\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"due_date\": \"<dateTime>\",\n    \"start_date\": \"<dateTime>\",\n    \"folder\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"access\": \"<boolean>\"\n    },\n    \"space\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"access\": \"<boolean>\"\n    },\n    \"inbound_address\": \"<string>\",\n    \"archived\": \"<boolean>\",\n    \"override_statuses\": \"<boolean>\",\n    \"statuses\": [\n      {\n        \"id\": \"<string>\",\n        \"status\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\",\n        \"status_group\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"status\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\",\n        \"status_group\": \"<string>\"\n      }\n    ],\n    \"permission_level\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad request - Name is required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "folder_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"ECODE\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "folder_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "folder_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Template, folder, or space not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "folder_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "folder_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create List From Template in Space.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/list_template/:template_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"list_template",
								":template_id"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<string>",
									"description": "(Required) ID of the Space where the List will be created"
								},
								{
									"key": "template_id",
									"value": "<string>",
									"description": "(Required) ID of the template to use"
								}
							]
						},
						"description": "Create a new List using a List template within a Space."
					},
					"response": [
						{
							"name": "List created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"list\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"deleted\": \"<boolean>\",\n    \"orderindex\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"due_date\": \"<dateTime>\",\n    \"start_date\": \"<dateTime>\",\n    \"folder\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"access\": \"<boolean>\"\n    },\n    \"space\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"access\": \"<boolean>\"\n    },\n    \"inbound_address\": \"<string>\",\n    \"archived\": \"<boolean>\",\n    \"override_statuses\": \"<boolean>\",\n    \"statuses\": [\n      {\n        \"id\": \"<string>\",\n        \"status\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\",\n        \"status_group\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"status\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\",\n        \"status_group\": \"<string>\"\n      }\n    ],\n    \"permission_level\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad request - Name is required, or is already taken",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"ECODE\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Template, folder, or space not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"options\": {\n    \"options\": {\n      \"return_immediately\": true,\n      \"content\": \"incididunt culpa reprehenderit do\",\n      \"time_estimate\": -39508765.76589808,\n      \"automation\": true,\n      \"include_views\": false,\n      \"old_due_date\": true,\n      \"old_start_date\": false,\n      \"old_followers\": false,\n      \"comment_attachments\": true,\n      \"recur_settings\": false,\n      \"old_tags\": false,\n      \"old_statuses\": false,\n      \"subtasks\": false,\n      \"custom_type\": false,\n      \"old_assignees\": true,\n      \"attachments\": true,\n      \"comment\": true,\n      \"old_status\": true,\n      \"external_dependencies\": false,\n      \"internal_dependencies\": false,\n      \"priority\": false,\n      \"custom_fields\": true,\n      \"old_checklists\": true,\n      \"relationships\": true,\n      \"old_subtask_assignees\": false,\n      \"start_date\": \"2020-07-11T14:21:14.491Z\",\n      \"due_date\": \"2010-09-02T20:25:23.728Z\",\n      \"remap_start_date\": true,\n      \"skip_weekends\": true,\n      \"archived\": null\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/list_template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"list_template",
										":template_id"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Members",
			"item": [
				{
					"name": "Get Task Members",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/member",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"member"
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the people who have access to a task. Responses do not include people with inherited Hierarchy permission to the task."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/member",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"member"
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"members\": [\n    {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\",\n      \"profileInfo\": {\n        \"display_profile\": \"<string,null>\",\n        \"verified_ambassador\": \"<string,null>\",\n        \"verified_consultant\": \"<string,null>\",\n        \"top_tier_user\": \"<string,null>\",\n        \"viewed_verified_ambassador\": \"<string,null>\",\n        \"viewed_verified_consultant\": \"<string,null>\",\n        \"viewed_top_tier_user\": \"<string,null>\"\n      }\n    },\n    {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\",\n      \"profileInfo\": {\n        \"display_profile\": \"<string,null>\",\n        \"verified_ambassador\": \"<string,null>\",\n        \"verified_consultant\": \"<string,null>\",\n        \"top_tier_user\": \"<string,null>\",\n        \"viewed_verified_ambassador\": \"<string,null>\",\n        \"viewed_verified_consultant\": \"<string,null>\",\n        \"viewed_top_tier_user\": \"<string,null>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get List Members",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/member",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"member"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Get Workspace members who have access to a List."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/member",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"member"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"members\": [\n    {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\",\n      \"profileInfo\": {\n        \"display_profile\": \"<string,null>\",\n        \"verified_ambassador\": \"<string,null>\",\n        \"verified_consultant\": \"<string,null>\",\n        \"top_tier_user\": \"<string,null>\",\n        \"viewed_verified_ambassador\": \"<string,null>\",\n        \"viewed_verified_consultant\": \"<string,null>\",\n        \"viewed_top_tier_user\": \"<string,null>\"\n      }\n    },\n    {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\",\n      \"profileInfo\": {\n        \"display_profile\": \"<string,null>\",\n        \"verified_ambassador\": \"<string,null>\",\n        \"verified_consultant\": \"<string,null>\",\n        \"top_tier_user\": \"<string,null>\",\n        \"viewed_verified_ambassador\": \"<string,null>\",\n        \"viewed_verified_consultant\": \"<string,null>\",\n        \"viewed_top_tier_user\": \"<string,null>\"\n      }\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Privacy and access",
			"item": [
				{
					"name": "Update privacy and access of an object or location",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"entries\": [\n    {\n      \"id\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"permission_level\": \"<number>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"permission_level\": \"<number>\"\n    }\n  ],\n  \"private\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v3/workspaces/:workspace_id/:object_type/:object_id/acls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"workspaces",
								":workspace_id",
								":object_type",
								":object_id",
								"acls"
							],
							"variable": [
								{
									"key": "workspace_id",
									"value": "<string>",
									"description": "(Required) The ID of the Workspace."
								},
								{
									"key": "object_type",
									"value": "<string>",
									"description": "(Required) Any object that can be shared in a Workspace. For example, `customField`, `dashboard`, `folder`, `goal`, `goalFolder`,`list`, `space`, `task`, and `view`."
								},
								{
									"key": "object_id",
									"value": "<string>",
									"description": "(Required) The ID of the object to share."
								}
							]
						},
						"description": "Update the privacy and access settings of an object or location in the Workspace. Note that sharing an item may incur charges."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entries\": [\n    {\n      \"id\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"permission_level\": \"<number>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"permission_level\": \"<number>\"\n    }\n  ],\n  \"private\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/workspaces/:workspace_id/:object_type/:object_id/acls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"workspaces",
										":workspace_id",
										":object_type",
										":object_id",
										"acls"
									],
									"variable": [
										{
											"key": "workspace_id"
										},
										{
											"key": "object_type"
										},
										{
											"key": "object_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "Get Custom Roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/customroles?include_members=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"customroles"
							],
							"query": [
								{
									"key": "include_members",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the Custom Roles available in a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/customroles?include_members=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"customroles"
									],
									"query": [
										{
											"key": "include_members",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"custom_roles\": [\n    {\n      \"id\": \"<integer>\",\n      \"team_id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"inherited_role\": \"<integer>\",\n      \"date_created\": \"<string>\",\n      \"members\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"team_id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"inherited_role\": \"<integer>\",\n      \"date_created\": \"<string>\",\n      \"members\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Shared Hierarchy",
			"item": [
				{
					"name": "Shared Hierarchy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/shared",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"shared"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the tasks, Lists, and Folders that have been shared with the authenticated user."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/shared",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"shared"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"shared\": {\n    \"tasks\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"lists\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"content\": \"<string,null>\",\n        \"status\": \"<string,null>\",\n        \"priority\": \"<string,null>\",\n        \"assignee\": \"<string,null>\",\n        \"task_count\": \"<string>\",\n        \"due_date\": \"<string,null>\",\n        \"start_date\": \"<string,null>\",\n        \"archived\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"content\": \"<string,null>\",\n        \"status\": \"<string,null>\",\n        \"priority\": \"<string,null>\",\n        \"assignee\": \"<string,null>\",\n        \"task_count\": \"<string>\",\n        \"due_date\": \"<string,null>\",\n        \"start_date\": \"<string,null>\",\n        \"archived\": \"<boolean>\"\n      }\n    ],\n    \"folders\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"content\": \"<string,null>\",\n        \"task_count\": \"<string>\",\n        \"due_date\": \"<string,null>\",\n        \"archived\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"content\": \"<string,null>\",\n        \"task_count\": \"<string>\",\n        \"due_date\": \"<string,null>\",\n        \"archived\": \"<boolean>\"\n      }\n    ]\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Spaces",
			"item": [
				{
					"name": "Get Spaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/space?archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"space"
							],
							"query": [
								{
									"key": "archived",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the Spaces avialable in a Workspace. You can only get member info in private Spaces."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/space?archived=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"space"
									],
									"query": [
										{
											"key": "archived",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"spaces\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"private\": \"<boolean>\",\n      \"statuses\": [\n        {\n          \"status\": \"<string>\",\n          \"color\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"status\": \"<string>\",\n          \"color\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"multiple_assignees\": \"<boolean>\",\n      \"features\": {\n        \"due_dates\": {\n          \"enabled\": \"<boolean>\",\n          \"start_date\": \"<boolean>\",\n          \"remap_due_dates\": \"<boolean>\",\n          \"remap_closed_due_date\": \"<boolean>\"\n        },\n        \"time_tracking\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"tags\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"time_estimates\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"checklists\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"custom_fields\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"remap_dependencies\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"dependency_warning\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"portfolios\": {\n          \"enabled\": \"<boolean>\"\n        }\n      },\n      \"color\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"admin_can_manage\": \"<boolean>\",\n      \"archived\": \"<boolean>\",\n      \"members\": [\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        },\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"private\": \"<boolean>\",\n      \"statuses\": [\n        {\n          \"status\": \"<string>\",\n          \"color\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"status\": \"<string>\",\n          \"color\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"multiple_assignees\": \"<boolean>\",\n      \"features\": {\n        \"due_dates\": {\n          \"enabled\": \"<boolean>\",\n          \"start_date\": \"<boolean>\",\n          \"remap_due_dates\": \"<boolean>\",\n          \"remap_closed_due_date\": \"<boolean>\"\n        },\n        \"time_tracking\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"tags\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"time_estimates\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"checklists\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"custom_fields\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"remap_dependencies\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"dependency_warning\": {\n          \"enabled\": \"<boolean>\"\n        },\n        \"portfolios\": {\n          \"enabled\": \"<boolean>\"\n        }\n      },\n      \"color\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"admin_can_manage\": \"<boolean>\",\n      \"archived\": \"<boolean>\",\n      \"members\": [\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        },\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Space",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"multiple_assignees\": \"<boolean>\",\n  \"features\": {\n    \"due_dates\": {\n      \"enabled\": \"<boolean>\",\n      \"start_date\": \"<boolean>\",\n      \"remap_due_dates\": \"<boolean>\",\n      \"remap_closed_due_date\": \"<boolean>\"\n    },\n    \"time_tracking\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"tags\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"time_estimates\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"checklists\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"custom_fields\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"remap_dependencies\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"dependency_warning\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"portfolios\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/space",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"space"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Add a new Space to a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"multiple_assignees\": \"<boolean>\",\n  \"features\": {\n    \"due_dates\": {\n      \"enabled\": \"<boolean>\",\n      \"start_date\": \"<boolean>\",\n      \"remap_due_dates\": \"<boolean>\",\n      \"remap_closed_due_date\": \"<boolean>\"\n    },\n    \"time_tracking\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"tags\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"time_estimates\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"checklists\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"custom_fields\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"remap_dependencies\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"dependency_warning\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"portfolios\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/space",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"space"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"statuses\": [\n    {\n      \"id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"color\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"color\": \"<string>\"\n    }\n  ],\n  \"multiple_assignees\": \"<boolean>\",\n  \"features\": {\n    \"due_dates\": {\n      \"enabled\": \"<boolean>\",\n      \"start_date\": \"<boolean>\",\n      \"remap_due_dates\": \"<boolean>\",\n      \"remap_closed_due_date\": \"<boolean>\"\n    },\n    \"sprints\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"points\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"custom_items\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"tags\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"time_estimates\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"checklists\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"zoom\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"milestones\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"custom_fields\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"remap_dependencies\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"dependency_warning\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"multiple_assignees\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"portfolios\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"emails\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"archived\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Get Space",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the Spaces available in a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"statuses\": [\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"multiple_assignees\": \"<boolean>\",\n  \"features\": {\n    \"due_dates\": {\n      \"enabled\": \"<boolean>\",\n      \"start_date\": \"<boolean>\",\n      \"remap_due_dates\": \"<boolean>\",\n      \"remap_closed_due_date\": \"<boolean>\"\n    },\n    \"time_tracking\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"tags\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"time_estimates\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"checklists\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"custom_fields\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"remap_dependencies\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"dependency_warning\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"portfolios\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update Space",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"color\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"admin_can_manage\": \"<boolean>\",\n  \"multiple_assignees\": \"<boolean>\",\n  \"features\": {\n    \"due_dates\": {\n      \"enabled\": \"<boolean>\",\n      \"start_date\": \"<boolean>\",\n      \"remap_due_dates\": \"<boolean>\",\n      \"remap_closed_due_date\": \"<boolean>\"\n    },\n    \"time_tracking\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"tags\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"time_estimates\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"checklists\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"custom_fields\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"remap_dependencies\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"dependency_warning\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"portfolios\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Rename, set the Space color, and enable ClickApps for a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"color\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"admin_can_manage\": \"<boolean>\",\n  \"multiple_assignees\": \"<boolean>\",\n  \"features\": {\n    \"due_dates\": {\n      \"enabled\": \"<boolean>\",\n      \"start_date\": \"<boolean>\",\n      \"remap_due_dates\": \"<boolean>\",\n      \"remap_closed_due_date\": \"<boolean>\"\n    },\n    \"time_tracking\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"tags\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"time_estimates\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"checklists\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"custom_fields\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"remap_dependencies\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"dependency_warning\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"portfolios\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"statuses\": [\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"multiple_assignees\": \"<boolean>\",\n  \"features\": {\n    \"due_dates\": {\n      \"enabled\": \"<boolean>\",\n      \"start_date\": \"<boolean>\",\n      \"remap_due_dates\": \"<boolean>\",\n      \"remap_closed_due_date\": \"<boolean>\"\n    },\n    \"time_tracking\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"tags\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"time_estimates\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"checklists\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"custom_fields\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"remap_dependencies\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"dependency_warning\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"portfolios\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Space",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete a Space from your Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get Space Tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/tag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"tag"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the task Tags available in a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"tag"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Space Tag",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tag\": {\n    \"name\": \"<string>\",\n    \"tag_fg\": \"<string>\",\n    \"tag_bg\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/tag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"tag"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a new task Tag to a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": {\n    \"name\": \"<string>\",\n    \"tag_fg\": \"<string>\",\n    \"tag_bg\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"tag"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Edit Space Tag",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tag\": {\n    \"name\": \"<string>\",\n    \"fg_color\": \"<string>\",\n    \"bg_color\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/tag/:tag_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"tag",
								":tag_name"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "tag_name",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Update a task Tag."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": {\n    \"name\": \"<string>\",\n    \"fg_color\": \"<string>\",\n    \"bg_color\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/tag/:tag_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"tag",
										":tag_name"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "tag_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tag\": {\n    \"name\": \"<string>\",\n    \"fg_color\": \"<string>\",\n    \"bg_color\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Space Tag",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tag\": {\n    \"name\": \"<string>\",\n    \"tag_fg\": \"<string>\",\n    \"tag_bg\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/tag/:tag_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"tag",
								":tag_name"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "tag_name",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete a task Tag from a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": {\n    \"name\": \"<string>\",\n    \"tag_fg\": \"<string>\",\n    \"tag_bg\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/tag/:tag_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"tag",
										":tag_name"
									],
									"variable": [
										{
											"key": "space_id"
										},
										{
											"key": "tag_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Add Tag To Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/tag/:tag_name?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"tag",
								":tag_name"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "tag_name",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a Tag to a task."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/tag/:tag_name?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"tag",
										":tag_name"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "tag_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Remove Tag From Task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/tag/:tag_name?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"tag",
								":tag_name"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "tag_name",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Remove a Tag from a task. This does not delete the Tag from the Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/tag/:tag_name?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"tag",
										":tag_name"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "tag_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/task?archived=<boolean>&include_markdown_description=<boolean>&page=<integer>&order_by=<string>&reverse=<boolean>&subtasks=<boolean>&statuses=<string>&statuses=<string>&include_closed=<boolean>&assignees=<string>&assignees=<string>&watchers=<string>&watchers=<string>&tags=<string>&tags=<string>&due_date_gt=<integer>&due_date_lt=<integer>&date_created_gt=<integer>&date_created_lt=<integer>&date_updated_gt=<integer>&date_updated_lt=<integer>&date_done_gt=<integer>&date_done_lt=<integer>&custom_fields=<string>&custom_fields=<string>&custom_field=<string>&custom_field=<string>&custom_items=<number>&custom_items=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"task"
							],
							"query": [
								{
									"key": "archived",
									"value": "<boolean>"
								},
								{
									"key": "include_markdown_description",
									"value": "<boolean>",
									"description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
								},
								{
									"key": "page",
									"value": "<integer>",
									"description": "Page to fetch (starts at 0)."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`."
								},
								{
									"key": "reverse",
									"value": "<boolean>",
									"description": "Tasks are displayed in reverse order."
								},
								{
									"key": "subtasks",
									"value": "<boolean>",
									"description": "Include or exclude subtasks. By default, subtasks are excluded."
								},
								{
									"key": "statuses",
									"value": "<string>",
									"description": "Filter by statuses. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"
								},
								{
									"key": "statuses",
									"value": "<string>",
									"description": "Filter by statuses. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"
								},
								{
									"key": "include_closed",
									"value": "<boolean>",
									"description": "Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`."
								},
								{
									"key": "assignees",
									"value": "<string>",
									"description": "Filter by Assignees. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"
								},
								{
									"key": "assignees",
									"value": "<string>",
									"description": "Filter by Assignees. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"
								},
								{
									"key": "watchers",
									"value": "<string>",
									"description": "Filter by watchers."
								},
								{
									"key": "watchers",
									"value": "<string>",
									"description": "Filter by watchers."
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "Filter by tags. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "Filter by tags. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"
								},
								{
									"key": "due_date_gt",
									"value": "<integer>",
									"description": "Filter by due date greater than Unix time in milliseconds."
								},
								{
									"key": "due_date_lt",
									"value": "<integer>",
									"description": "Filter by due date less than Unix time in milliseconds."
								},
								{
									"key": "date_created_gt",
									"value": "<integer>",
									"description": "Filter by date created greater than Unix time in milliseconds."
								},
								{
									"key": "date_created_lt",
									"value": "<integer>",
									"description": "Filter by date created less than Unix time in milliseconds."
								},
								{
									"key": "date_updated_gt",
									"value": "<integer>",
									"description": "Filter by date updated greater than Unix time in milliseconds."
								},
								{
									"key": "date_updated_lt",
									"value": "<integer>",
									"description": "Filter by date updated less than Unix time in milliseconds."
								},
								{
									"key": "date_done_gt",
									"value": "<integer>",
									"description": "Filter by date done greater than Unix time in milliseconds."
								},
								{
									"key": "date_done_lt",
									"value": "<integer>",
									"description": "Filter by date done less than Unix time in milliseconds."
								},
								{
									"key": "custom_fields",
									"value": "<string>",
									"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"
								},
								{
									"key": "custom_fields",
									"value": "<string>",
									"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"
								},
								{
									"key": "custom_field",
									"value": "<string>",
									"description": "Include tasks with specific values in only one Custom Field. This Custom Field can be a Custom Relationship."
								},
								{
									"key": "custom_field",
									"value": "<string>",
									"description": "Include tasks with specific values in only one Custom Field. This Custom Field can be a Custom Relationship."
								},
								{
									"key": "custom_items",
									"value": "<number>",
									"description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."
								},
								{
									"key": "custom_items",
									"value": "<number>",
									"description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."
								}
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) To find the list_id:<br> 1. In the Sidebar, hover over the List and click the **ellipsis ...** menu.<br> 2. Select **Copy link.**<br> 3. Use the copied URL to find the list_id. The list_id is the number that follows /li in the URL."
								}
							]
						},
						"description": "View the tasks in a List. Responses are limited to 100 tasks per page. You can only view task information of tasks you can access. \\\n \\\nThis endpoint only includes tasks where the specified `list_id` is their home List. Tasks added to the `list_id` with a different home List are not included in the response."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/task?archived=<boolean>&include_markdown_description=<boolean>&page=<integer>&order_by=<string>&reverse=<boolean>&subtasks=<boolean>&statuses=<string>&include_closed=<boolean>&assignees=<string>&watchers=<string>&tags=<string>&due_date_gt=<integer>&due_date_lt=<integer>&date_created_gt=<integer>&date_created_lt=<integer>&date_updated_gt=<integer>&date_updated_lt=<integer>&date_done_gt=<integer>&date_done_lt=<integer>&custom_fields=<string>&custom_field=<string>&custom_items=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"task"
									],
									"query": [
										{
											"key": "archived",
											"value": "<boolean>"
										},
										{
											"key": "include_markdown_description",
											"value": "<boolean>",
											"description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page to fetch (starts at 0)."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`."
										},
										{
											"key": "reverse",
											"value": "<boolean>",
											"description": "Tasks are displayed in reverse order."
										},
										{
											"key": "subtasks",
											"value": "<boolean>",
											"description": "Include or exclude subtasks. By default, subtasks are excluded."
										},
										{
											"key": "statuses",
											"value": "<string>",
											"description": "Filter by statuses. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"
										},
										{
											"key": "include_closed",
											"value": "<boolean>",
											"description": "Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`."
										},
										{
											"key": "assignees",
											"value": "<string>",
											"description": "Filter by Assignees. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"
										},
										{
											"key": "watchers",
											"value": "<string>",
											"description": "Filter by watchers."
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "Filter by tags. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"
										},
										{
											"key": "due_date_gt",
											"value": "<integer>",
											"description": "Filter by due date greater than Unix time in milliseconds."
										},
										{
											"key": "due_date_lt",
											"value": "<integer>",
											"description": "Filter by due date less than Unix time in milliseconds."
										},
										{
											"key": "date_created_gt",
											"value": "<integer>",
											"description": "Filter by date created greater than Unix time in milliseconds."
										},
										{
											"key": "date_created_lt",
											"value": "<integer>",
											"description": "Filter by date created less than Unix time in milliseconds."
										},
										{
											"key": "date_updated_gt",
											"value": "<integer>",
											"description": "Filter by date updated greater than Unix time in milliseconds."
										},
										{
											"key": "date_updated_lt",
											"value": "<integer>",
											"description": "Filter by date updated less than Unix time in milliseconds."
										},
										{
											"key": "date_done_gt",
											"value": "<integer>",
											"description": "Filter by date done greater than Unix time in milliseconds."
										},
										{
											"key": "date_done_lt",
											"value": "<integer>",
											"description": "Filter by date done less than Unix time in milliseconds."
										},
										{
											"key": "custom_fields",
											"value": "<string>",
											"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"
										},
										{
											"key": "custom_field",
											"value": "<string>",
											"description": "Include tasks with specific values in only one Custom Field. This Custom Field can be a Custom Relationship."
										},
										{
											"key": "custom_items",
											"value": "<number>",
											"description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."
										}
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tasks\": [\n    {\n      \"id\": \"<string>\",\n      \"custom_item_id\": \"<number,null>\",\n      \"name\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"orderindex\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"date_updated\": \"<string>\",\n      \"date_closed\": \"<string,null>\",\n      \"date_done\": \"<string,null>\",\n      \"creator\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"watchers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"checklists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parent\": \"<string,null>\",\n      \"priority\": \"<string,null>\",\n      \"due_date\": \"<string,null>\",\n      \"start_date\": \"<string,null>\",\n      \"points\": \"<number>\",\n      \"time_estimate\": \"<string,null>\",\n      \"time_spent\": \"<string,null>\",\n      \"list\": {\n        \"id\": \"<string>\"\n      },\n      \"folder\": {\n        \"id\": \"<string>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\"\n      },\n      \"url\": \"<string>\",\n      \"markdown_description\": \"<string>\",\n      \"custom_fields\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"type_config\": {\n          \"single_user\": \"<boolean>\",\n          \"include_groups\": \"<boolean>\",\n          \"include_guests\": \"<boolean>\",\n          \"include_team_members\": \"<boolean>\"\n        },\n        \"date_created\": \"<string>\",\n        \"hide_from_guests\": \"<boolean>\",\n        \"value\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string,null>\"\n        },\n        \"value_richtext\": \"<string>\",\n        \"value_markdown\": \"<string>\",\n        \"required\": \"<boolean>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"custom_item_id\": \"<number,null>\",\n      \"name\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"orderindex\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"date_updated\": \"<string>\",\n      \"date_closed\": \"<string,null>\",\n      \"date_done\": \"<string,null>\",\n      \"creator\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"watchers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"checklists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parent\": \"<string,null>\",\n      \"priority\": \"<string,null>\",\n      \"due_date\": \"<string,null>\",\n      \"start_date\": \"<string,null>\",\n      \"points\": \"<number>\",\n      \"time_estimate\": \"<string,null>\",\n      \"time_spent\": \"<string,null>\",\n      \"list\": {\n        \"id\": \"<string>\"\n      },\n      \"folder\": {\n        \"id\": \"<string>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\"\n      },\n      \"url\": \"<string>\",\n      \"markdown_description\": \"<string>\",\n      \"custom_fields\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"type_config\": {\n          \"single_user\": \"<boolean>\",\n          \"include_groups\": \"<boolean>\",\n          \"include_guests\": \"<boolean>\",\n          \"include_team_members\": \"<boolean>\"\n        },\n        \"date_created\": \"<string>\",\n        \"hide_from_guests\": \"<boolean>\",\n        \"value\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string,null>\"\n        },\n        \"value_richtext\": \"<string>\",\n        \"value_markdown\": \"<string>\",\n        \"required\": \"<boolean>\"\n      }\n    }\n  ],\n  \"last_page\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"API test\",\n  \"description\": \"https://www.markdownguide.org/cheat-sheet/\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/list/970400017757/task?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								"970400017757",
								"task"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by its custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							]
						},
						"description": "Create a new task."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"assignees\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"archived\": \"<boolean>\",\n  \"group_assignees\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"status\": \"<string>\",\n  \"priority\": \"<integer,null>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"time_estimate\": \"<integer>\",\n  \"start_date\": \"<integer>\",\n  \"start_date_time\": \"<boolean>\",\n  \"points\": \"<number>\",\n  \"notify_all\": \"<boolean>\",\n  \"parent\": \"<string,null>\",\n  \"markdown_content\": \"<string>\",\n  \"links_to\": \"<string,null>\",\n  \"check_required_custom_fields\": \"<boolean>\",\n  \"custom_fields\": [\n    {\n      \"id\": \"<string>\",\n      \"value\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"value\": \"<integer>\"\n    }\n  ],\n  \"custom_item_id\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/task?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"task"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by its custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"custom_id\": \"<string,null>\",\n  \"custom_item_id\": \"<number,null>\",\n  \"name\": \"<string>\",\n  \"text_content\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": {\n    \"status\": \"<string>\",\n    \"color\": \"<string>\",\n    \"orderindex\": \"<integer>\",\n    \"type\": \"<string>\"\n  },\n  \"orderindex\": \"<string>\",\n  \"date_created\": \"<string>\",\n  \"date_updated\": \"<string>\",\n  \"date_closed\": \"<string,null>\",\n  \"creator\": {\n    \"id\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"color\": \"<string>\",\n    \"profilePicture\": \"<string>\"\n  },\n  \"assignees\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"archived\": \"<boolean>\",\n  \"group_assignees\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"checklists\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"parent\": \"<string,null>\",\n  \"priority\": \"<string,null>\",\n  \"due_date\": \"<string,null>\",\n  \"start_date\": \"<string,null>\",\n  \"points\": \"<number>\",\n  \"time_estimate\": \"<string,null>\",\n  \"time_spent\": \"<string,null>\",\n  \"custom_fields\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"single_user\": \"<boolean>\",\n        \"include_groups\": \"<boolean>\",\n        \"include_guests\": \"<boolean>\",\n        \"include_team_members\": \"<boolean>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\",\n      \"value\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string,null>\"\n      },\n      \"value_richtext\": \"<string>\",\n      \"value_markdown\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"single_user\": \"<boolean>\",\n        \"include_groups\": \"<boolean>\",\n        \"include_guests\": \"<boolean>\",\n        \"include_team_members\": \"<boolean>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\",\n      \"value\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string,null>\"\n      },\n      \"value_richtext\": \"<string>\",\n      \"value_markdown\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"list\": {\n    \"id\": \"<string>\"\n  },\n  \"folder\": {\n    \"id\": \"<string>\"\n  },\n  \"space\": {\n    \"id\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Task",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:86cy5kpxp?custom_task_ids=<boolean>&team_id=<number>&include_subtasks=<boolean>&include_markdown_description=<boolean>&custom_fields=<string>&custom_fields=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":86cy5kpxp"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by its custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								},
								{
									"key": "include_subtasks",
									"value": "<boolean>",
									"description": "Include subtasks, default false"
								},
								{
									"key": "include_markdown_description",
									"value": "<boolean>",
									"description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
								},
								{
									"key": "custom_fields",
									"value": "<string>",
									"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"
								},
								{
									"key": "custom_fields",
									"value": "<string>",
									"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"
								}
							],
							"variable": [
								{
									"key": "86cy5kpxp",
									"value": ""
								}
							]
						},
						"description": "View information about a task. You can only view task information of tasks you can access. \\\n \\\nTasks with attachments will return an \"attachments\" response. \\\n \\\nDocs attached to a task are not returned."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id?custom_task_ids=<boolean>&team_id=<number>&include_subtasks=<boolean>&include_markdown_description=<boolean>&custom_fields=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by its custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										},
										{
											"key": "include_subtasks",
											"value": "<boolean>",
											"description": "Include subtasks, default false"
										},
										{
											"key": "include_markdown_description",
											"value": "<boolean>",
											"description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
										},
										{
											"key": "custom_fields",
											"value": "<string>",
											"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"custom_id\": \"<string,null>\",\n  \"custom_item_id\": \"<number,null>\",\n  \"name\": \"<string>\",\n  \"text_content\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": {\n    \"status\": \"<string>\",\n    \"color\": \"<string>\",\n    \"orderindex\": \"<integer>\",\n    \"type\": \"<string>\"\n  },\n  \"orderindex\": \"<string>\",\n  \"date_created\": \"<string>\",\n  \"date_updated\": \"<string>\",\n  \"date_closed\": \"<string,null>\",\n  \"creator\": {\n    \"id\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"color\": \"<string>\",\n    \"profilePicture\": \"<string>\"\n  },\n  \"assignees\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"watchers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"checklists\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"parent\": \"<string,null>\",\n  \"priority\": \"<string,null>\",\n  \"due_date\": \"<string,null>\",\n  \"start_date\": \"<string,null>\",\n  \"points\": \"<number>\",\n  \"time_estimate\": \"<string,null>\",\n  \"time_spent\": \"<string,null>\",\n  \"custom_fields\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"single_user\": \"<boolean>\",\n        \"include_groups\": \"<boolean>\",\n        \"include_guests\": \"<boolean>\",\n        \"include_team_members\": \"<boolean>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\",\n      \"value\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string,null>\"\n      },\n      \"value_richtext\": \"<string>\",\n      \"value_markdown\": \"<string>\",\n      \"required\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"single_user\": \"<boolean>\",\n        \"include_groups\": \"<boolean>\",\n        \"include_guests\": \"<boolean>\",\n        \"include_team_members\": \"<boolean>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\",\n      \"value\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string,null>\"\n      },\n      \"value_richtext\": \"<string>\",\n      \"value_markdown\": \"<string>\",\n      \"required\": \"<boolean>\"\n    }\n  ],\n  \"list\": {\n    \"id\": \"<string>\"\n  },\n  \"folder\": {\n    \"id\": \"<string>\"\n  },\n  \"space\": {\n    \"id\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"markdown_description\": \"<string>\",\n  \"attachments\": [\n    {\n      \"id\": \"<string>\",\n      \"date\": \"<bigint>\",\n      \"title\": \"<string>\",\n      \"type\": \"<int>\",\n      \"source\": \"<int>\",\n      \"version\": \"<int>\",\n      \"extension\": \"<string>\",\n      \"thumbnail_small\": \"<string>\",\n      \"thumbnail_medium\": \"<string>\",\n      \"thumbnail_large\": \"<string>\",\n      \"is_folder\": \"<boolean>\",\n      \"mimetype\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"parent_id\": \"<string>\",\n      \"size\": \"<bigint>\",\n      \"total_comments\": \"<int>\",\n      \"resolved_comments\": \"<int>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"deleted\": \"<boolean>\",\n      \"orientation\": \"<string>\",\n      \"url\": \"<string>\",\n      \"email_data\": {},\n      \"url_w_query\": \"<string>\",\n      \"url_w_host\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"date\": \"<bigint>\",\n      \"title\": \"<string>\",\n      \"type\": \"<int>\",\n      \"source\": \"<int>\",\n      \"version\": \"<int>\",\n      \"extension\": \"<string>\",\n      \"thumbnail_small\": \"<string>\",\n      \"thumbnail_medium\": \"<string>\",\n      \"thumbnail_large\": \"<string>\",\n      \"is_folder\": \"<boolean>\",\n      \"mimetype\": \"<string>\",\n      \"hidden\": \"<boolean>\",\n      \"parent_id\": \"<string>\",\n      \"size\": \"<bigint>\",\n      \"total_comments\": \"<int>\",\n      \"resolved_comments\": \"<int>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"deleted\": \"<boolean>\",\n      \"orientation\": \"<string>\",\n      \"url\": \"<string>\",\n      \"email_data\": {},\n      \"url_w_query\": \"<string>\",\n      \"url_w_host\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"custom_item_id\": \"<number,null>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"markdown_content\": \"<string>\",\n  \"status\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"parent\": \"<string>\",\n  \"time_estimate\": \"<integer>\",\n  \"start_date\": \"<integer>\",\n  \"start_date_time\": \"<boolean>\",\n  \"points\": \"<number>\",\n  \"assignees\": {\n    \"add\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"rem\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"group_assignees\": {\n    \"add\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"rem\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"watchers\": {\n    \"add\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"rem\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"archived\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by its custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Update a task by including one or more fields in the request body."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_item_id\": \"<number,null>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"markdown_content\": \"<string>\",\n  \"status\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"due_date\": \"<integer>\",\n  \"due_date_time\": \"<boolean>\",\n  \"parent\": \"<string>\",\n  \"time_estimate\": \"<integer>\",\n  \"start_date\": \"<integer>\",\n  \"start_date_time\": \"<boolean>\",\n  \"points\": \"<number>\",\n  \"assignees\": {\n    \"add\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"rem\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"group_assignees\": {\n    \"add\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"rem\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"watchers\": {\n    \"add\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"rem\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"archived\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by its custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"custom_id\": \"<string,null>\",\n  \"custom_item_id\": \"<number,null>\",\n  \"name\": \"<string>\",\n  \"text_content\": \"<string>\",\n  \"description\": \"<string>\",\n  \"status\": {\n    \"status\": \"<string>\",\n    \"color\": \"<string>\",\n    \"orderindex\": \"<integer>\",\n    \"type\": \"<string>\"\n  },\n  \"archived\": \"<boolean>\",\n  \"orderindex\": \"<string>\",\n  \"date_created\": \"<string>\",\n  \"date_updated\": \"<string>\",\n  \"date_closed\": \"<string,null>\",\n  \"creator\": {\n    \"id\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"color\": \"<string>\",\n    \"profilePicture\": \"<string>\"\n  },\n  \"assignees\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"group_assignees\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"checklists\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"parent\": \"<string>\",\n  \"priority\": \"<string,null>\",\n  \"due_date\": \"<string,null>\",\n  \"start_date\": \"<string,null>\",\n  \"points\": \"<number>\",\n  \"time_estimate\": \"<string,null>\",\n  \"time_spent\": \"<string,null>\",\n  \"custom_fields\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"single_user\": \"<boolean>\",\n        \"include_groups\": \"<boolean>\",\n        \"include_guests\": \"<boolean>\",\n        \"include_team_members\": \"<boolean>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"type_config\": {\n        \"single_user\": \"<boolean>\",\n        \"include_groups\": \"<boolean>\",\n        \"include_guests\": \"<boolean>\",\n        \"include_team_members\": \"<boolean>\"\n      },\n      \"date_created\": \"<string>\",\n      \"hide_from_guests\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"list\": {\n    \"id\": \"<string>\"\n  },\n  \"folder\": {\n    \"id\": \"<string>\"\n  },\n  \"space\": {\n    \"id\": \"<string>\"\n  },\n  \"url\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by its custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete a task from your Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by its custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get Filtered Team Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_Id/task?page=<integer>&order_by=<string>&reverse=<boolean>&subtasks=<boolean>&space_ids=<string>&space_ids=<string>&project_ids=<string>&project_ids=<string>&list_ids[]=<string>&list_ids[]=<string>&statuses=<string>&statuses=<string>&include_closed=<boolean>&assignees=<string>&assignees=<string>&tags=<string>&tags=<string>&due_date_gt=<integer>&due_date_lt=<integer>&date_created_gt=<integer>&date_created_lt=<integer>&date_updated_gt=<integer>&date_updated_lt=<integer>&date_done_gt=<integer>&date_done_lt=<integer>&custom_fields=<string>&custom_fields=<string>&custom_task_ids=<boolean>&team_id=<number>&parent=<string>&include_markdown_description=<boolean>&custom_items=<number>&custom_items=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_Id",
								"task"
							],
							"query": [
								{
									"key": "page",
									"value": "<integer>",
									"description": "Page to fetch (starts at 0)."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`."
								},
								{
									"key": "reverse",
									"value": "<boolean>",
									"description": "Tasks are displayed in reverse order."
								},
								{
									"key": "subtasks",
									"value": "<boolean>",
									"description": "Include or exclude subtasks. By default, subtasks are excluded."
								},
								{
									"key": "space_ids",
									"value": "<string>",
									"description": "Filter by Spaces. For example: \\\n \\\n`?space_ids[]=1234&space_ids[]=6789`"
								},
								{
									"key": "space_ids",
									"value": "<string>",
									"description": "Filter by Spaces. For example: \\\n \\\n`?space_ids[]=1234&space_ids[]=6789`"
								},
								{
									"key": "project_ids",
									"value": "<string>",
									"description": "Filter by Folders. For example: \\\n \\\n`?project_ids[]=1234&project_ids[]=6789`"
								},
								{
									"key": "project_ids",
									"value": "<string>",
									"description": "Filter by Folders. For example: \\\n \\\n`?project_ids[]=1234&project_ids[]=6789`"
								},
								{
									"key": "list_ids[]",
									"value": "<string>",
									"description": "Filter by Lists. For example: \\\n \\\n`?list_ids[]=1234&list_ids[]=6789` "
								},
								{
									"key": "list_ids[]",
									"value": "<string>",
									"description": "Filter by Lists. For example: \\\n \\\n`?list_ids[]=1234&list_ids[]=6789` "
								},
								{
									"key": "statuses",
									"value": "<string>",
									"description": "Filter by statuses. Use `%20` to represent a space character. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"
								},
								{
									"key": "statuses",
									"value": "<string>",
									"description": "Filter by statuses. Use `%20` to represent a space character. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"
								},
								{
									"key": "include_closed",
									"value": "<boolean>",
									"description": "Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`."
								},
								{
									"key": "assignees",
									"value": "<string>",
									"description": "Filter by Assignees using people's ClickUp user id. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"
								},
								{
									"key": "assignees",
									"value": "<string>",
									"description": "Filter by Assignees using people's ClickUp user id. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "Filter by tags. User `%20` to represent a space character. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "Filter by tags. User `%20` to represent a space character. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"
								},
								{
									"key": "due_date_gt",
									"value": "<integer>",
									"description": "Filter by due date greater than Unix time in milliseconds."
								},
								{
									"key": "due_date_lt",
									"value": "<integer>",
									"description": "Filter by due date less than Unix time in milliseconds."
								},
								{
									"key": "date_created_gt",
									"value": "<integer>",
									"description": "Filter by date created greater than Unix time in milliseconds."
								},
								{
									"key": "date_created_lt",
									"value": "<integer>",
									"description": "Filter by date created less than Unix time in milliseconds."
								},
								{
									"key": "date_updated_gt",
									"value": "<integer>",
									"description": "Filter by date updated greater than Unix time in milliseconds."
								},
								{
									"key": "date_updated_lt",
									"value": "<integer>",
									"description": "Filter by date updated less than Unix time in milliseconds."
								},
								{
									"key": "date_done_gt",
									"value": "<integer>",
									"description": "Filter by date done greater than Unix time in milliseconds."
								},
								{
									"key": "date_done_lt",
									"value": "<integer>",
									"description": "Filter by date done less than Unix time in milliseconds."
								},
								{
									"key": "custom_fields",
									"value": "<string>",
									"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"}{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. The `=` operator isn't supported with Label Custom Fields.\\\n \\\nLearn more about [filtering using Custom Fields.](https://help.clickup.com/hc/en-us/articles/12665650881943-Search-sort-and-filter-tasks-by-Custom-Fields)"
								},
								{
									"key": "custom_fields",
									"value": "<string>",
									"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"}{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. The `=` operator isn't supported with Label Custom Fields.\\\n \\\nLearn more about [filtering using Custom Fields.](https://help.clickup.com/hc/en-us/articles/12665650881943-Search-sort-and-filter-tasks-by-Custom-Fields)"
								},
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by its custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								},
								{
									"key": "parent",
									"value": "<string>",
									"description": "Include the parent task ID to return subtasks."
								},
								{
									"key": "include_markdown_description",
									"value": "<boolean>",
									"description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
								},
								{
									"key": "custom_items",
									"value": "<number>",
									"description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."
								},
								{
									"key": "custom_items",
									"value": "<number>",
									"description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."
								}
							],
							"variable": [
								{
									"key": "team_Id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the tasks that meet specific criteria from a Workspace. Responses are limited to 100 tasks per page.  \\\n \\\nYou can only view task information of tasks you can access. \\\n \\\n Our Try It modal currently supports filtering by two or more Lists, Folders, or Spaces. To filter by a single List, Folder, or Space, we recommend using a free app like [Postman](https://www.postman.com/) to test our public API."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_Id/task?page=<integer>&order_by=<string>&reverse=<boolean>&subtasks=<boolean>&space_ids=<string>&project_ids=<string>&list_ids[]=<string>&statuses=<string>&include_closed=<boolean>&assignees=<string>&tags=<string>&due_date_gt=<integer>&due_date_lt=<integer>&date_created_gt=<integer>&date_created_lt=<integer>&date_updated_gt=<integer>&date_updated_lt=<integer>&date_done_gt=<integer>&date_done_lt=<integer>&custom_fields=<string>&custom_task_ids=<boolean>&team_id=<number>&parent=<string>&include_markdown_description=<boolean>&custom_items=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_Id",
										"task"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page to fetch (starts at 0)."
										},
										{
											"key": "order_by",
											"value": "<string>",
											"description": "Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`."
										},
										{
											"key": "reverse",
											"value": "<boolean>",
											"description": "Tasks are displayed in reverse order."
										},
										{
											"key": "subtasks",
											"value": "<boolean>",
											"description": "Include or exclude subtasks. By default, subtasks are excluded."
										},
										{
											"key": "space_ids",
											"value": "<string>",
											"description": "Filter by Spaces. For example: \\\n \\\n`?space_ids[]=1234&space_ids[]=6789`"
										},
										{
											"key": "project_ids",
											"value": "<string>",
											"description": "Filter by Folders. For example: \\\n \\\n`?project_ids[]=1234&project_ids[]=6789`"
										},
										{
											"key": "list_ids[]",
											"value": "<string>",
											"description": "Filter by Lists. For example: \\\n \\\n`?list_ids[]=1234&list_ids[]=6789` "
										},
										{
											"key": "statuses",
											"value": "<string>",
											"description": "Filter by statuses. Use `%20` to represent a space character. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"
										},
										{
											"key": "include_closed",
											"value": "<boolean>",
											"description": "Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`."
										},
										{
											"key": "assignees",
											"value": "<string>",
											"description": "Filter by Assignees using people's ClickUp user id. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "Filter by tags. User `%20` to represent a space character. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"
										},
										{
											"key": "due_date_gt",
											"value": "<integer>",
											"description": "Filter by due date greater than Unix time in milliseconds."
										},
										{
											"key": "due_date_lt",
											"value": "<integer>",
											"description": "Filter by due date less than Unix time in milliseconds."
										},
										{
											"key": "date_created_gt",
											"value": "<integer>",
											"description": "Filter by date created greater than Unix time in milliseconds."
										},
										{
											"key": "date_created_lt",
											"value": "<integer>",
											"description": "Filter by date created less than Unix time in milliseconds."
										},
										{
											"key": "date_updated_gt",
											"value": "<integer>",
											"description": "Filter by date updated greater than Unix time in milliseconds."
										},
										{
											"key": "date_updated_lt",
											"value": "<integer>",
											"description": "Filter by date updated less than Unix time in milliseconds."
										},
										{
											"key": "date_done_gt",
											"value": "<integer>",
											"description": "Filter by date done greater than Unix time in milliseconds."
										},
										{
											"key": "date_done_lt",
											"value": "<integer>",
											"description": "Filter by date done less than Unix time in milliseconds."
										},
										{
											"key": "custom_fields",
											"value": "<string>",
											"description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"}{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. The `=` operator isn't supported with Label Custom Fields.\\\n \\\nLearn more about [filtering using Custom Fields.](https://help.clickup.com/hc/en-us/articles/12665650881943-Search-sort-and-filter-tasks-by-Custom-Fields)"
										},
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by its custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										},
										{
											"key": "parent",
											"value": "<string>",
											"description": "Include the parent task ID to return subtasks."
										},
										{
											"key": "include_markdown_description",
											"value": "<boolean>",
											"description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
										},
										{
											"key": "custom_items",
											"value": "<number>",
											"description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."
										}
									],
									"variable": [
										{
											"key": "team_Id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tasks\": [\n    {\n      \"id\": \"<string>\",\n      \"custom_id\": \"<string,null>\",\n      \"name\": \"<string>\",\n      \"text_content\": \"<string>\",\n      \"description\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"orderindex\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"date_updated\": \"<string>\",\n      \"date_closed\": \"<string>\",\n      \"date_done\": \"<string,null>\",\n      \"creator\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"color\": \"<string>\",\n        \"email\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assignees\": [\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"email\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"email\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        }\n      ],\n      \"watchers\": [\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"email\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"email\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        }\n      ],\n      \"checklists\": [\n        {\n          \"id\": \"<string>\",\n          \"task_id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"creator\": \"<integer>\",\n          \"resolved\": \"<integer>\",\n          \"unresolved\": \"<integer>\",\n          \"items\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"assignee\": \"<string,null>\",\n              \"resolved\": \"<boolean>\",\n              \"parent\": \"<string,null>\",\n              \"date_created\": \"<string>\",\n              \"children\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"assignee\": \"<string,null>\",\n              \"resolved\": \"<boolean>\",\n              \"parent\": \"<string,null>\",\n              \"date_created\": \"<string>\",\n              \"children\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"task_id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"creator\": \"<integer>\",\n          \"resolved\": \"<integer>\",\n          \"unresolved\": \"<integer>\",\n          \"items\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"assignee\": \"<string,null>\",\n              \"resolved\": \"<boolean>\",\n              \"parent\": \"<string,null>\",\n              \"date_created\": \"<string>\",\n              \"children\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"assignee\": \"<string,null>\",\n              \"resolved\": \"<boolean>\",\n              \"parent\": \"<string,null>\",\n              \"date_created\": \"<string>\",\n              \"children\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ]\n        }\n      ],\n      \"tags\": [\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\"\n        }\n      ],\n      \"parent\": \"<string>\",\n      \"priority\": \"<integer>\",\n      \"due_date\": \"<string>\",\n      \"start_date\": \"<string>\",\n      \"points\": \"<number>\",\n      \"time_estimate\": \"<number>\",\n      \"custom_fields\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"type_config\": {},\n          \"date_created\": \"<string>\",\n          \"hide_from_guests\": \"<boolean>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"type_config\": {},\n          \"date_created\": \"<string>\",\n          \"hide_from_guests\": \"<boolean>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"dependencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"linked_tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"team_id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"permission_level\": \"<string>\",\n      \"list\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"access\": \"<boolean>\"\n      },\n      \"project\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hidden\": \"<boolean>\",\n        \"access\": \"<boolean>\"\n      },\n      \"folder\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hidden\": \"<boolean>\",\n        \"access\": \"<boolean>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\"\n      },\n      \"markdown_description\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"custom_id\": \"<string,null>\",\n      \"name\": \"<string>\",\n      \"text_content\": \"<string>\",\n      \"description\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"orderindex\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"date_updated\": \"<string>\",\n      \"date_closed\": \"<string>\",\n      \"date_done\": \"<string,null>\",\n      \"creator\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"color\": \"<string>\",\n        \"email\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assignees\": [\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"email\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"email\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        }\n      ],\n      \"watchers\": [\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"email\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"color\": \"<string>\",\n          \"email\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        }\n      ],\n      \"checklists\": [\n        {\n          \"id\": \"<string>\",\n          \"task_id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"creator\": \"<integer>\",\n          \"resolved\": \"<integer>\",\n          \"unresolved\": \"<integer>\",\n          \"items\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"assignee\": \"<string,null>\",\n              \"resolved\": \"<boolean>\",\n              \"parent\": \"<string,null>\",\n              \"date_created\": \"<string>\",\n              \"children\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"assignee\": \"<string,null>\",\n              \"resolved\": \"<boolean>\",\n              \"parent\": \"<string,null>\",\n              \"date_created\": \"<string>\",\n              \"children\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ]\n        },\n        {\n          \"id\": \"<string>\",\n          \"task_id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"date_created\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"creator\": \"<integer>\",\n          \"resolved\": \"<integer>\",\n          \"unresolved\": \"<integer>\",\n          \"items\": [\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"assignee\": \"<string,null>\",\n              \"resolved\": \"<boolean>\",\n              \"parent\": \"<string,null>\",\n              \"date_created\": \"<string>\",\n              \"children\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            },\n            {\n              \"id\": \"<string>\",\n              \"name\": \"<string>\",\n              \"orderindex\": \"<integer>\",\n              \"assignee\": \"<string,null>\",\n              \"resolved\": \"<boolean>\",\n              \"parent\": \"<string,null>\",\n              \"date_created\": \"<string>\",\n              \"children\": [\n                \"<string>\",\n                \"<string>\"\n              ]\n            }\n          ]\n        }\n      ],\n      \"tags\": [\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\"\n        }\n      ],\n      \"parent\": \"<string>\",\n      \"priority\": \"<integer>\",\n      \"due_date\": \"<string>\",\n      \"start_date\": \"<string>\",\n      \"points\": \"<number>\",\n      \"time_estimate\": \"<number>\",\n      \"custom_fields\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"type_config\": {},\n          \"date_created\": \"<string>\",\n          \"hide_from_guests\": \"<boolean>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"type_config\": {},\n          \"date_created\": \"<string>\",\n          \"hide_from_guests\": \"<boolean>\",\n          \"required\": \"<boolean>\"\n        }\n      ],\n      \"dependencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"linked_tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"team_id\": \"<string>\",\n      \"url\": \"<string>\",\n      \"permission_level\": \"<string>\",\n      \"list\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"access\": \"<boolean>\"\n      },\n      \"project\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hidden\": \"<boolean>\",\n        \"access\": \"<boolean>\"\n      },\n      \"folder\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"hidden\": \"<boolean>\",\n        \"access\": \"<boolean>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\"\n      },\n      \"markdown_description\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Task's Time in Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/time_in_status?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"time_in_status"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "View how long a task has been in each status. The Total time in Status ClickApp must first be enabled by the Workspace owner or an admin."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/time_in_status?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"time_in_status"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"current_status\": {\n    \"status\": \"<string>\",\n    \"color\": \"<string>\",\n    \"total_time\": {\n      \"by_minute\": \"<integer>\",\n      \"since\": \"<string>\"\n    }\n  },\n  \"status_history\": [\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"type\": \"<string>\",\n      \"total_time\": {\n        \"by_minute\": \"<integer>\",\n        \"since\": \"<string>\"\n      },\n      \"orderindex\": \"<integer>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"type\": \"<string>\",\n      \"total_time\": {\n        \"by_minute\": \"<integer>\",\n        \"since\": \"<string>\"\n      },\n      \"orderindex\": \"<integer>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Bulk Tasks' Time in Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/bulk_time_in_status/task_ids?task_ids=<string>&custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								"bulk_time_in_status",
								"task_ids"
							],
							"query": [
								{
									"key": "task_ids",
									"value": "<string>",
									"description": "(Required) Include this paramater once per `task_id`.\nYou can include up to 100 task ids per request.\nFor example: `task_ids=3cuh&task_ids=g4fs`"
								},
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							]
						},
						"description": "View how long two or more tasks have been in each status. The Total time in Status ClickApp must first be enabled by the Workspace owner or an admin."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/bulk_time_in_status/task_ids?task_ids=<string>&custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										"bulk_time_in_status",
										"task_ids"
									],
									"query": [
										{
											"key": "task_ids",
											"value": "<string>",
											"description": "(Required) Include this paramater once per `task_id`.\nYou can include up to 100 task ids per request.\nFor example: `task_ids=3cuh&task_ids=g4fs`"
										},
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"27075wz\": {\n    \"current_status\": {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"total_time\": {\n        \"by_minute\": \"<integer>\",\n        \"since\": \"<string>\"\n      }\n    },\n    \"status_history\": [\n      {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\",\n        \"total_time\": {\n          \"by_minute\": \"<integer>\",\n          \"since\": \"<string>\"\n        },\n        \"orderindex\": \"<integer>\"\n      },\n      {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\",\n        \"total_time\": {\n          \"by_minute\": \"<integer>\",\n          \"since\": \"<string>\"\n        },\n        \"orderindex\": \"<integer>\"\n      }\n    ]\n  },\n  \"20bbn28\": {\n    \"current_status\": {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"total_time\": {\n        \"by_minute\": \"<integer>\",\n        \"since\": \"<string>\"\n      }\n    },\n    \"status_history\": [\n      {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\",\n        \"total_time\": {\n          \"by_minute\": \"<integer>\",\n          \"since\": \"<string>\"\n        },\n        \"orderindex\": \"<integer>\"\n      },\n      {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"type\": \"<string>\",\n        \"total_time\": {\n          \"by_minute\": \"<integer>\",\n          \"since\": \"<string>\"\n        },\n        \"orderindex\": \"<integer>\"\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Create Task From Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/taskTemplate/:template_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"taskTemplate",
								":template_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								},
								{
									"key": "template_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Create a new task using a task template."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/taskTemplate/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"taskTemplate",
										":template_id"
									],
									"variable": [
										{
											"key": "list_id"
										},
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Task Checklists",
			"item": [
				{
					"name": "Create Checklist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/checklist?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"checklist"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a new checklist to a task."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/checklist?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"checklist"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"checklist\": {\n    \"id\": \"<string>\",\n    \"task_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"orderindex\": \"<integer>\",\n    \"resolved\": \"<integer>\",\n    \"unresolved\": \"<integer>\",\n    \"items\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Edit Checklist",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"position\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/checklist/:checklist_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"checklist",
								":checklist_id"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "<string>",
									"description": "(Required) b8a8-48d8-a0c6-b4200788a683 (uuid)"
								}
							]
						},
						"description": "Rename a task checklist, or reorder a checklist so it appears above or below other checklists on a task. "
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"position\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/checklist/:checklist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"checklist",
										":checklist_id"
									],
									"variable": [
										{
											"key": "checklist_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Delete Checklist",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/checklist/:checklist_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"checklist",
								":checklist_id"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "<string>",
									"description": "(Required) b8a8-48d8-a0c6-b4200788a683 (uuid)"
								}
							]
						},
						"description": "Delete a checklist from a task."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/checklist/:checklist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"checklist",
										":checklist_id"
									],
									"variable": [
										{
											"key": "checklist_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Create Checklist Item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"assignee\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/checklist/:checklist_id/checklist_item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"checklist",
								":checklist_id",
								"checklist_item"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "<string>",
									"description": "(Required) b8a8-48d8-a0c6-b4200788a683 (uuid)"
								}
							]
						},
						"description": "Add a line item to a task checklist."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"assignee\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/checklist/:checklist_id/checklist_item",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"checklist",
										":checklist_id",
										"checklist_item"
									],
									"variable": [
										{
											"key": "checklist_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"checklist\": {\n    \"id\": \"<string>\",\n    \"task_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"date_created\": \"<string>\",\n    \"orderindex\": \"<integer>\",\n    \"resolved\": \"<integer>\",\n    \"unresolved\": \"<integer>\",\n    \"items\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"assignee\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        \"resolved\": \"<boolean>\",\n        \"parent\": \"<string,null>\",\n        \"date_created\": \"<string>\",\n        \"children\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"assignee\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        },\n        \"resolved\": \"<boolean>\",\n        \"parent\": \"<string,null>\",\n        \"date_created\": \"<string>\",\n        \"children\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Edit Checklist Item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"assignee\": \"<string,null>\",\n  \"resolved\": \"<boolean>\",\n  \"parent\": \"<string,null>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/checklist/:checklist_id/checklist_item/:checklist_item_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"checklist",
								":checklist_id",
								"checklist_item",
								":checklist_item_id"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "<string>",
									"description": "(Required) b8a8-48d8-a0c6-b4200788a683 (uuid)"
								},
								{
									"key": "checklist_item_id",
									"value": "<string>",
									"description": "(Required) e491-47f5-9fd8-d1dc4cedcc6f (uuid)"
								}
							]
						},
						"description": "Update an individual line item in a task checklist. \\\n \\\nYou can rename it, set the assignee, mark it as resolved, or nest it under another checklist item."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"assignee\": \"<string,null>\",\n  \"resolved\": \"<boolean>\",\n  \"parent\": \"<string,null>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/checklist/:checklist_id/checklist_item/:checklist_item_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"checklist",
										":checklist_id",
										"checklist_item",
										":checklist_item_id"
									],
									"variable": [
										{
											"key": "checklist_id"
										},
										{
											"key": "checklist_item_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"checklist\": {\n    \"id\": \"<string>\",\n    \"task_id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"date_created\": \"<string>\",\n    \"orderindex\": \"<integer>\",\n    \"resolved\": \"<integer>\",\n    \"unresolved\": \"<integer>\",\n    \"items\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"assignee\": \"<string,null>\",\n        \"resolved\": \"<boolean>\",\n        \"parent\": \"<string,null>\",\n        \"date_created\": \"<string>\",\n        \"children\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"assignee\": \"<string,null>\",\n        \"resolved\": \"<boolean>\",\n        \"parent\": \"<string,null>\",\n        \"date_created\": \"<string>\",\n        \"children\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Checklist Item",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/checklist/:checklist_id/checklist_item/:checklist_item_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"checklist",
								":checklist_id",
								"checklist_item",
								":checklist_item_id"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "<string>",
									"description": "(Required) b8a8-48d8-a0c6-b4200788a683 (uuid)"
								},
								{
									"key": "checklist_item_id",
									"value": "<string>",
									"description": "(Required) e491-47f5-9fd8-d1dc4cedcc6f (uuid)"
								}
							]
						},
						"description": "Delete a line item from a task checklist."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/checklist/:checklist_id/checklist_item/:checklist_item_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"checklist",
										":checklist_id",
										"checklist_item",
										":checklist_item_id"
									],
									"variable": [
										{
											"key": "checklist_id"
										},
										{
											"key": "checklist_item_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Task Relationships",
			"item": [
				{
					"name": "Add Dependency",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"depends_on\": \"<string>\",\n  \"depedency_of\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/dependency?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"dependency"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) This is the task which is waiting on or blocking another task."
								}
							]
						},
						"description": "Set a task as waiting on or blocking another task."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"depends_on\": \"<string>\",\n  \"depedency_of\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/dependency?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"dependency"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Delete Dependency",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/dependency?depends_on=<string>&dependency_of=<string>&custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"dependency"
							],
							"query": [
								{
									"key": "depends_on",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "dependency_of",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Remove the dependency relationship between two or more tasks."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/dependency?depends_on=<string>&dependency_of=<string>&custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"dependency"
									],
									"query": [
										{
											"key": "depends_on",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "dependency_of",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Add Task Link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/link/:links_to?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"link",
								":links_to"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) The task to initiate the link from."
								},
								{
									"key": "links_to",
									"value": "<string>",
									"description": "(Required) The task to link to."
								}
							]
						},
						"description": "This is the equivalent of the feature _Task Links_ in the right-hand sidebar of a Task.  It allows you to link two tasks together. General links or links to other objects than tasks are not supported."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/link/:links_to?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"link",
										":links_to"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "links_to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"task\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"status\": {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    \"orderindex\": \"<string>\",\n    \"date_created\": \"<string>\",\n    \"date_updated\": \"<string>\",\n    \"date_closed\": \"<string,null>\",\n    \"creator\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"color\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"checklists\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parent\": \"<string,null>\",\n    \"priority\": \"<string,null>\",\n    \"due_date\": \"<string,null>\",\n    \"start_date\": \"<string,null>\",\n    \"time_estimate\": \"<string,null>\",\n    \"time_spent\": \"<string,null>\",\n    \"list\": {\n      \"id\": \"<string>\"\n    },\n    \"folder\": {\n      \"id\": \"<string>\"\n    },\n    \"space\": {\n      \"id\": \"<string>\"\n    },\n    \"linked_tasks\": [\n      {\n        \"task_id\": \"<string>\",\n        \"link_id\": \"<string>\",\n        \"date_created\": \"<string>\",\n        \"userid\": \"<string>\"\n      },\n      {\n        \"task_id\": \"<string>\",\n        \"link_id\": \"<string>\",\n        \"date_created\": \"<string>\",\n        \"userid\": \"<string>\"\n      }\n    ],\n    \"url\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Task Link",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/link/:links_to?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"link",
								":links_to"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "links_to",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Remove the link between two tasks."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/link/:links_to?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"link",
										":links_to"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "links_to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"task\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"status\": {\n      \"status\": \"<string>\",\n      \"color\": \"<string>\",\n      \"orderindex\": \"<integer>\",\n      \"type\": \"<string>\"\n    },\n    \"orderindex\": \"<string>\",\n    \"date_created\": \"<string>\",\n    \"date_updated\": \"<string>\",\n    \"date_closed\": \"<string,null>\",\n    \"creator\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"color\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"checklists\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"parent\": \"<string,null>\",\n    \"priority\": \"<string,null>\",\n    \"due_date\": \"<string,null>\",\n    \"start_date\": \"<string,null>\",\n    \"time_estimate\": \"<string,null>\",\n    \"time_spent\": \"<string,null>\",\n    \"list\": {\n      \"id\": \"<string>\"\n    },\n    \"folder\": {\n      \"id\": \"<string>\"\n    },\n    \"space\": {\n      \"id\": \"<string>\"\n    },\n    \"linked_tasks\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"url\": \"<string>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Templates",
			"item": [
				{
					"name": "Get Task Templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/taskTemplate?page=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"taskTemplate"
							],
							"query": [
								{
									"key": "page",
									"value": "<integer>",
									"description": "(Required) "
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the task templates available in a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/taskTemplate?page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"taskTemplate"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"templates\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Get Authorized Workspaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team"
							]
						},
						"description": "View the Workspaces available to the authenticated user."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"teams\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"color\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"members\": [\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        },\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"color\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"members\": [\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        },\n        {\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"username\": \"<string>\",\n            \"color\": \"<string>\",\n            \"profilePicture\": \"<string>\"\n          }\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Workspace seats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/seats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"seats"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the used, total, and available member and guest seats for a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/seats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"seats"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"members\": {\n    \"filled_members_seats\": \"<integer>\",\n    \"total_member_seats\": \"<integer>\",\n    \"empty_member_seats\": \"<integer>\"\n  },\n  \"guests\": {\n    \"filled_guest_seats\": \"<integer>\",\n    \"total_guest_seats\": \"<integer>\",\n    \"empty_guest_seats\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get Workspace Plan",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/plan",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"plan"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<string>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the current [Plan](https://clickup.com/pricing) for the specified Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"plan"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"plan_name\": \"<string>\",\n  \"plan_id\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "User Groups",
			"item": [
				{
					"name": "Create Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"members\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"handle\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/group",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"group"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "This endpoint creates a [User Group](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) within a Workspace.\\\n \\\nUser Groups are used to organize and manage users within a Workspace.\\\n \\\nIn the API documentation, `team_id` refers to the Workspace ID, and `group_id` refers to the User Group ID.\\\n \\\n**Note:** Adding a guest with view-only permissions to a Team automatically converts them to a paid guest.\\\n \\\nIf no paid guest seats are available, an additional member seat will be added, increasing the number of paid guest seats.\\\n \\\nThis change incurs a prorated charge based on the billing cycle."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"members\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"handle\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"group"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"team_id\": \"<string>\",\n  \"userid\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"handle\": \"<string>\",\n  \"date_created\": \"<string>\",\n  \"initials\": \"<string>\",\n  \"members\": [\n    {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    }\n  ],\n  \"avatar\": {\n    \"attachment_id\": \"<string,null>\",\n    \"color\": \"<string,null>\",\n    \"source\": \"<string,null>\",\n    \"icon\": \"<string,null>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"handle\": \"<string>\",\n  \"members\": {\n    \"add\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"rem\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/group/:group_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"group",
								":group_id"
							],
							"variable": [
								{
									"key": "group_id",
									"value": "<string>",
									"description": "(Required) User Group ID"
								}
							]
						},
						"description": "This endpoint is used to manage [User Groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups), which are groups of users within your Workspace.\\\n \\\nIn our API, `team_id` in the path refers to the Workspace ID, and `group_id` refers to the ID of a User Group.\\\n \\\n**Note:** Adding a guest with view-only permissions to a User Group automatically converts them to a paid guest.\\\n \\\nIf you don't have any paid guest seats available, a new member seat is automatically added to increase the number of paid guest seats.\\\n \\\nThis incurs a prorated charge based on your billing cycle."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"handle\": \"<string>\",\n  \"members\": {\n    \"add\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"rem\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/group/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"group",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"team_id\": \"<string>\",\n  \"userid\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"handle\": \"<string>\",\n  \"date_created\": \"<string>\",\n  \"initials\": \"<string>\",\n  \"members\": [\n    {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string,null>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string,null>\"\n    }\n  ],\n  \"avatar\": {\n    \"attachment_id\": \"<string,null>\",\n    \"color\": \"<string,null>\",\n    \"source\": \"<string,null>\",\n    \"icon\": \"<string,null>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/group/:group_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"group",
								":group_id"
							],
							"variable": [
								{
									"key": "group_id",
									"value": "<string>",
									"description": "(Required) User Group ID"
								}
							]
						},
						"description": "This endpoint is used to remove a [User Group](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) from your Workspace.\\\n \\\nIn our API documentation, `team_id` refers to the id of a Workspace, and `group_id` refers to the id of a user group."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/group/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"group",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/group?team_id=<number>&group_ids=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"group"
							],
							"query": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "group_ids",
									"value": "<string>",
									"description": "Enter one or more User Group IDs to retrieve information about specific User Group."
								}
							]
						},
						"description": "This endpoint is used to view [User Groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) in your Workspace.\\\n \\\nIn our API documentation, `team_id` refers to the ID of a Workspace, and `group_id` refers to the ID of a User Group."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/group?team_id=<number>&group_ids=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"group"
									],
									"query": [
										{
											"key": "team_id",
											"value": "<number>",
											"description": "(Required) Workspace ID"
										},
										{
											"key": "group_ids",
											"value": "<string>",
											"description": "Enter one or more User Group IDs to retrieve information about specific User Group."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"groups\": [\n    {\n      \"id\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"userid\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"handle\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"members\": [\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string,null>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string,null>\"\n        }\n      ],\n      \"avatar\": {\n        \"attachment_id\": \"<string,null>\",\n        \"color\": \"<string,null>\",\n        \"source\": \"<string,null>\",\n        \"icon\": \"<string,null>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"team_id\": \"<string>\",\n      \"userid\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"handle\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"members\": [\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string,null>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string,null>\"\n        }\n      ],\n      \"avatar\": {\n        \"attachment_id\": \"<string,null>\",\n        \"color\": \"<string,null>\",\n        \"source\": \"<string,null>\",\n        \"icon\": \"<string,null>\"\n      }\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Time Tracking",
			"item": [
				{
					"name": "Get time entries within a date range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_Id/time_entries?start_date=<number>&end_date=<number>&assignee=<number>&include_task_tags=<boolean>&include_location_names=<boolean>&space_id=<number>&folder_id=<number>&list_id=<number>&task_id=<string>&custom_task_ids=<boolean>&team_id=<number>&is_billable=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_Id",
								"time_entries"
							],
							"query": [
								{
									"key": "start_date",
									"value": "<number>",
									"description": "Unix time in milliseconds"
								},
								{
									"key": "end_date",
									"value": "<number>",
									"description": "Unix time in milliseconds"
								},
								{
									"key": "assignee",
									"value": "<number>",
									"description": "Filter by `user_id`. For multiple assignees, separate `user_id` using commas.\\\n \\\n **Example:** `assignee=1234,9876`\\\n \\\n***Note:** Only Workspace Owners/Admins have access to do this.*"
								},
								{
									"key": "include_task_tags",
									"value": "<boolean>",
									"description": "Include task tags in the response for time entries associated with tasks."
								},
								{
									"key": "include_location_names",
									"value": "<boolean>",
									"description": "Include the names of the List, Folder, and Space along with the `list_id`,`folder_id`, and `space_id`."
								},
								{
									"key": "space_id",
									"value": "<number>",
									"description": "Only include time entries associated with tasks in a specific Space."
								},
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "Only include time entries associated with tasks in a specific Folder."
								},
								{
									"key": "list_id",
									"value": "<number>",
									"description": "Only include time entries associated with tasks in a specific List."
								},
								{
									"key": "task_id",
									"value": "<string>",
									"description": "Only include time entries associated with a specific task."
								},
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								},
								{
									"key": "is_billable",
									"value": "<boolean>",
									"description": "Include only billable time entries by using a value of `true` or only non-billable time entries by using a value of `false`.\\\n \\\nFor example: `?is_billable=true`."
								}
							],
							"variable": [
								{
									"key": "team_Id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View time entries filtered by start and end date. \\\n \\\nBy default, this endpoint returns time entries from the last 30 days created by the authenticated user. \\\n \\\nTo retrieve time entries for other users, you must include the `assignee` query parameter. \\\n \\\nOnly one of the following location filters can be included at a time: `space_id`, `folder_id`, `list_id`, or `task_id`. \\\n \\\n***Note:** A time entry that has a negative duration means that timer is currently running for that user.*"
					},
					"response": [
						{
							"name": "If your time entry is associated with a task that uses custom task ids you can expect a `custom_id`` field in the body of the response. The task field will only be included if there is a task associated with a time entry.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_Id/time_entries?start_date=<number>&end_date=<number>&assignee=<number>&include_task_tags=<boolean>&include_location_names=<boolean>&space_id=<number>&folder_id=<number>&list_id=<number>&task_id=<string>&custom_task_ids=<boolean>&team_id=<number>&is_billable=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_Id",
										"time_entries"
									],
									"query": [
										{
											"key": "start_date",
											"value": "<number>",
											"description": "Unix time in milliseconds"
										},
										{
											"key": "end_date",
											"value": "<number>",
											"description": "Unix time in milliseconds"
										},
										{
											"key": "assignee",
											"value": "<number>",
											"description": "Filter by `user_id`. For multiple assignees, separate `user_id` using commas.\\\n \\\n **Example:** `assignee=1234,9876`\\\n \\\n***Note:** Only Workspace Owners/Admins have access to do this.*"
										},
										{
											"key": "include_task_tags",
											"value": "<boolean>",
											"description": "Include task tags in the response for time entries associated with tasks."
										},
										{
											"key": "include_location_names",
											"value": "<boolean>",
											"description": "Include the names of the List, Folder, and Space along with the `list_id`,`folder_id`, and `space_id`."
										},
										{
											"key": "space_id",
											"value": "<number>",
											"description": "Only include time entries associated with tasks in a specific Space."
										},
										{
											"key": "folder_id",
											"value": "<number>",
											"description": "Only include time entries associated with tasks in a specific Folder."
										},
										{
											"key": "list_id",
											"value": "<number>",
											"description": "Only include time entries associated with tasks in a specific List."
										},
										{
											"key": "task_id",
											"value": "<string>",
											"description": "Only include time entries associated with a specific task."
										},
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										},
										{
											"key": "is_billable",
											"value": "<boolean>",
											"description": "Include only billable time entries by using a value of `true` or only non-billable time entries by using a value of `false`.\\\n \\\nFor example: `?is_billable=true`."
										}
									],
									"variable": [
										{
											"key": "team_Id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"task\": {\n        \"id\": \"<string>\",\n        \"custom_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"status\": {\n          \"status\": \"<string>\",\n          \"color\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"type\": \"<string>\"\n        },\n        \"custom_type\": \"<string,null>\"\n      },\n      \"wid\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"billable\": \"<boolean>\",\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"duration\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"source\": \"<string>\",\n      \"at\": \"<string>\",\n      \"task_location\": {\n        \"list_id\": \"<integer>\",\n        \"folder_id\": \"<integer>\",\n        \"space_id\": \"<integer>\",\n        \"list_name\": \"<string>\",\n        \"folder_name\": \"<string>\",\n        \"space_name\": \"<string>\"\n      },\n      \"task_tags\": [\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\",\n          \"creator\": \"<integer>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\",\n          \"creator\": \"<integer>\"\n        }\n      ],\n      \"task_url\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"task\": {\n        \"id\": \"<string>\",\n        \"custom_id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"status\": {\n          \"status\": \"<string>\",\n          \"color\": \"<string>\",\n          \"orderindex\": \"<integer>\",\n          \"type\": \"<string>\"\n        },\n        \"custom_type\": \"<string,null>\"\n      },\n      \"wid\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"billable\": \"<boolean>\",\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"duration\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"source\": \"<string>\",\n      \"at\": \"<string>\",\n      \"task_location\": {\n        \"list_id\": \"<integer>\",\n        \"folder_id\": \"<integer>\",\n        \"space_id\": \"<integer>\",\n        \"list_name\": \"<string>\",\n        \"folder_name\": \"<string>\",\n        \"space_name\": \"<string>\"\n      },\n      \"task_tags\": [\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\",\n          \"creator\": \"<integer>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\",\n          \"creator\": \"<integer>\"\n        }\n      ],\n      \"task_url\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a time entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"start\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    }\n  ],\n  \"stop\": \"<integer>\",\n  \"end\": \"<integer>\",\n  \"billable\": \"<boolean>\",\n  \"assignee\": \"<integer>\",\n  \"tid\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_Id/time_entries?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_Id",
								"time_entries"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "team_Id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Create a time entry. \\\n \\\n***Note:** A time entry that has a negative duration means that timer is currently running for that user.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    }\n  ],\n  \"stop\": \"<integer>\",\n  \"end\": \"<integer>\",\n  \"billable\": \"<boolean>\",\n  \"assignee\": \"<integer>\",\n  \"tid\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_Id/time_entries?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_Id",
										"time_entries"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "team_Id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"<string>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    }\n  ],\n  \"start\": \"<integer>\",\n  \"billable\": \"<boolean>\",\n  \"duration\": \"<integer>\",\n  \"assignee\": \"<integer>\",\n  \"tid\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get singular time entry",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/:timer_id?include_task_tags=<boolean>&include_location_names=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								":timer_id"
							],
							"query": [
								{
									"key": "include_task_tags",
									"value": "<boolean>",
									"description": "Include task tags in the response for time entries associated with tasks."
								},
								{
									"key": "include_location_names",
									"value": "<boolean>",
									"description": "Include the names of the List, Folder, and Space along with `list_id`,`folder_id`, and `space_id`."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "timer_id",
									"value": "<string>",
									"description": "(Required) The ID of a time entry. \\\n \\\nThis can be found using the [Get Time Entries Within a Date Range](ref:gettimeentrieswithinadaterange) endpoint."
								}
							]
						},
						"description": "View a single time entry. \\\n \\\n***Note:** A time entry that has a negative duration means that timer is currently running for that user.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/:timer_id?include_task_tags=<boolean>&include_location_names=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										":timer_id"
									],
									"query": [
										{
											"key": "include_task_tags",
											"value": "<boolean>",
											"description": "Include task tags in the response for time entries associated with tasks."
										},
										{
											"key": "include_location_names",
											"value": "<boolean>",
											"description": "Include the names of the List, Folder, and Space along with `list_id`,`folder_id`, and `space_id`."
										}
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "timer_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"wid\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"billable\": \"<boolean>\",\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"duration\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"source\": \"<string>\",\n      \"at\": \"<string>\",\n      \"task_location\": {\n        \"list_id\": \"<integer>\",\n        \"folder_id\": \"<integer>\",\n        \"space_id\": \"<integer>\",\n        \"list_name\": \"<string>\",\n        \"folder_name\": \"<string>\",\n        \"space_name\": \"<string>\"\n      },\n      \"task_tags\": [\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\",\n          \"creator\": \"<integer>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\",\n          \"creator\": \"<integer>\"\n        }\n      ],\n      \"task_url\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"wid\": \"<string>\",\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"billable\": \"<boolean>\",\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"duration\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"source\": \"<string>\",\n      \"at\": \"<string>\",\n      \"task_location\": {\n        \"list_id\": \"<integer>\",\n        \"folder_id\": \"<integer>\",\n        \"space_id\": \"<integer>\",\n        \"list_name\": \"<string>\",\n        \"folder_name\": \"<string>\",\n        \"space_name\": \"<string>\"\n      },\n      \"task_tags\": [\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\",\n          \"creator\": \"<integer>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"tag_fg\": \"<string>\",\n          \"tag_bg\": \"<string>\",\n          \"creator\": \"<integer>\"\n        }\n      ],\n      \"task_url\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a time Entry",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/:timer_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								":timer_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "timer_id",
									"value": "<number>",
									"description": "(Required) Array of timer ids to delete separated by commas"
								}
							]
						},
						"description": "Delete a time entry from a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/:timer_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										":timer_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "timer_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"task\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"custom_type\": \"<string,null>\"\n    },\n    \"wid\": \"<string>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"billable\": \"<boolean>\",\n    \"start\": \"<string>\",\n    \"end\": \"<integer>\",\n    \"duration\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"source\": \"<string>\",\n    \"at\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a time Entry",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    }\n  ],\n  \"tid\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tag_action\": \"<string>\",\n  \"start\": \"<integer>\",\n  \"end\": \"<integer>\",\n  \"billable\": \"<boolean>\",\n  \"duration\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/:timer_id?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								":timer_id"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`"
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "timer_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Update the details of a time entry."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    }\n  ],\n  \"tid\": \"<string>\",\n  \"description\": \"<string>\",\n  \"tag_action\": \"<string>\",\n  \"start\": \"<integer>\",\n  \"end\": \"<integer>\",\n  \"billable\": \"<boolean>\",\n  \"duration\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/:timer_id?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										":timer_id"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`"
										}
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "timer_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get time entry history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/:timer_id/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								":timer_id",
								"history"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "timer_id",
									"value": "<string>",
									"description": "(Required) The ID of a time entry. \\\n \\\nThis can be found using the [Get Time Entries Within a Date Range](ref:gettimeentrieswithinadaterange) endpoint."
								}
							]
						},
						"description": "View a list of changes made to a time entry."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/:timer_id/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										":timer_id",
										"history"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "timer_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get running time entry",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/current?assignee=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								"current"
							],
							"query": [
								{
									"key": "assignee",
									"value": "<number>",
									"description": "user id"
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View a time entry that's currently tracking time for the authenticated user. \\\n \\\n***Note:** A time entry that has a negative duration means that timer is currently running for that user.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/current?assignee=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										"current"
									],
									"query": [
										{
											"key": "assignee",
											"value": "<number>",
											"description": "user id"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"task\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      }\n    },\n    \"wid\": \"<string>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"billable\": \"<boolean>\",\n    \"start\": \"<string>\",\n    \"duration\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"at\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Remove tags from time entries",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"time_entry_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								"tags"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Remove labels from time entries. This does not remove the label from a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"time_entry_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										"tags"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get all tags from time entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								"tags"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View all the labels that have been applied to time entries in a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										"tags"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"creator\": \"<integer>\",\n      \"tag_bg\": \"<string>\",\n      \"tag_fg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"creator\": \"<integer>\",\n      \"tag_bg\": \"<string>\",\n      \"tag_fg\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add tags from time entries",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"time_entry_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								"tags"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Add a label to a time entry."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"time_entry_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"tag_fg\": \"<string>\",\n      \"tag_bg\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										"tags"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Change tag names from time entries",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"new_name\": \"<string>\",\n  \"tag_bg\": \"<string>\",\n  \"tag_fg\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								"tags"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Rename an time entry label."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"new_name\": \"<string>\",\n  \"tag_bg\": \"<string>\",\n  \"tag_fg\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										"tags"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Start a time Entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"<string>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"tid\": \"<string>\",\n  \"billable\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_Id/time_entries/start?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_Id",
								"time_entries",
								"start"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "team_Id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Start a timer for the authenticated user."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\"\n    }\n  ],\n  \"tid\": \"<string>\",\n  \"billable\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_Id/time_entries/start?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_Id",
										"time_entries",
										"start"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "team_Id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"task\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"custom_type\": \"<string,null>\"\n    },\n    \"wid\": \"<string>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"billable\": \"<boolean>\",\n    \"start\": \"<string>\",\n    \"duration\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"at\": \"<integer>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Stop a time Entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/stop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"time_entries",
								"stop"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Stop a timer that's currently running for the authenticated user."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/time_entries/stop",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"time_entries",
										"stop"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<string>\",\n    \"task\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"custom_type\": \"<string,null>\"\n    },\n    \"wid\": \"<string>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"billable\": \"<boolean>\",\n    \"start\": \"<string>\",\n    \"end\": \"<integer>\",\n    \"duration\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"source\": \"<string>\",\n    \"at\": \"<integer>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Time Tracking (Legacy)",
			"item": [
				{
					"name": "Get tracked time",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/time?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"time"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "***Note:** This is a legacy time tracking endpoint. We recommend using the Time Tracking API endpoints to manage time entries.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/time?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"time"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string,null>\"\n      },\n      \"time\": \"<integer>\",\n      \"intervals\": [\n        {\n          \"id\": \"<string>\",\n          \"start\": \"<string,null>\",\n          \"end\": \"<string,null>\",\n          \"time\": \"<string>\",\n          \"source\": \"<string>\",\n          \"date_added\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"start\": \"<string,null>\",\n          \"end\": \"<string,null>\",\n          \"time\": \"<string>\",\n          \"source\": \"<string>\",\n          \"date_added\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"user\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"color\": \"<string>\",\n        \"initials\": \"<string>\",\n        \"profilePicture\": \"<string,null>\"\n      },\n      \"time\": \"<integer>\",\n      \"intervals\": [\n        {\n          \"id\": \"<string>\",\n          \"start\": \"<string,null>\",\n          \"end\": \"<string,null>\",\n          \"time\": \"<string>\",\n          \"source\": \"<string>\",\n          \"date_added\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"start\": \"<string,null>\",\n          \"end\": \"<string,null>\",\n          \"time\": \"<string>\",\n          \"source\": \"<string>\",\n          \"date_added\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Track time",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"start\": \"<integer>\",\n  \"end\": \"<integer>\",\n  \"time\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/time?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"time"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "***Note:** This is a legacy time tracking endpoint. We recommend using the Time Tracking API endpoints to manage time entries.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<integer>\",\n  \"end\": \"<integer>\",\n  \"time\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/time?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"time"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Edit time tracked",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"start\": \"<integer>\",\n  \"end\": \"<integer>\",\n  \"time\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/time/:interval_id?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"time",
								":interval_id"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "interval_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "***Note:** This is a legacy time tracking endpoint. We recommend using the Time Tracking API endpoints to manage time entries.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start\": \"<integer>\",\n  \"end\": \"<integer>\",\n  \"time\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/time/:interval_id?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"time",
										":interval_id"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "interval_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Delete time tracked",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/task/:task_id/time/:interval_id?custom_task_ids=<boolean>&team_id=<number>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"task",
								":task_id",
								"time",
								":interval_id"
							],
							"query": [
								{
									"key": "custom_task_ids",
									"value": "<boolean>",
									"description": "If you want to reference a task by it's custom task id, this value must be `true`."
								},
								{
									"key": "team_id",
									"value": "<number>",
									"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
								}
							],
							"variable": [
								{
									"key": "task_id",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "interval_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "***Note:** This is a legacy time tracking endpoint. We recommend using the Time Tracking API endpoints to manage time entries.*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/task/:task_id/time/:interval_id?custom_task_ids=<boolean>&team_id=<number>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"task",
										":task_id",
										"time",
										":interval_id"
									],
									"query": [
										{
											"key": "custom_task_ids",
											"value": "<boolean>",
											"description": "If you want to reference a task by it's custom task id, this value must be `true`."
										},
										{
											"key": "team_id",
											"value": "<number>",
											"description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
										}
									],
									"variable": [
										{
											"key": "task_id"
										},
										{
											"key": "interval_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Invite User To Workspace",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<string>\",\n  \"admin\": \"<boolean>\",\n  \"custom_role_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"user"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Invite someone to join your Workspace as a member. To invite someone as a guest, use the [Invite Guest](ref:inviteguesttoworkspace) endpoint.\\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"admin\": \"<boolean>\",\n  \"custom_role_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"user"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"team\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"color\": \"<string>\",\n    \"avatar\": \"<string,null>\",\n    \"members\": [\n      {\n        \"user\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string,null>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string,null>\",\n          \"profilePicture\": \"<string,null>\",\n          \"initials\": \"<string>\",\n          \"role\": \"<integer>\",\n          \"custom_role\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          \"last_active\": \"<string,null>\",\n          \"date_joined\": \"<string,null>\",\n          \"date_invited\": \"<string>\"\n        },\n        \"invited_by\": {\n          \"id\": \"<integer>\",\n          \"color\": \"<string>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        }\n      },\n      {\n        \"user\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string,null>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string,null>\",\n          \"profilePicture\": \"<string,null>\",\n          \"initials\": \"<string>\",\n          \"role\": \"<integer>\",\n          \"custom_role\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\"\n          },\n          \"last_active\": \"<string,null>\",\n          \"date_joined\": \"<string,null>\",\n          \"date_invited\": \"<string>\"\n        },\n        \"invited_by\": {\n          \"id\": \"<integer>\",\n          \"color\": \"<string>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string>\"\n        }\n      }\n    ],\n    \"roles\": [\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"custom\": \"<boolean>\",\n        \"inherited_role\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"custom\": \"<boolean>\",\n        \"inherited_role\": \"<integer>\"\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/user/:user_id?include_shared=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"user",
								":user_id"
							],
							"query": [
								{
									"key": "include_shared",
									"value": "<boolean>",
									"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "user_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View information about a user in a Workspace. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/user/:user_id?include_shared=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"user",
										":user_id"
									],
									"query": [
										{
											"key": "include_shared",
											"value": "<boolean>",
											"description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
										}
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"member\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"custom_role\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"shared\": {\n      \"tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"folders\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Edit User On Workspace",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"admin\": \"<boolean>\",\n  \"custom_role_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/user/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"user",
								":user_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "user_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Update a user's name and role. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"admin\": \"<boolean>\",\n  \"custom_role_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/user/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"user",
										":user_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"member\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"color\": \"<string,null>\",\n      \"profilePicture\": \"<string,null>\",\n      \"initials\": \"<string>\",\n      \"role\": \"<integer>\",\n      \"custom_role\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"last_active\": \"<string,null>\",\n      \"date_joined\": \"<string,null>\",\n      \"date_invited\": \"<string>\"\n    },\n    \"invited_by\": {\n      \"id\": \"<integer>\",\n      \"color\": \"<string>\",\n      \"username\": \"<string>\",\n      \"email\": \"<string>\",\n      \"initials\": \"<string>\",\n      \"profilePicture\": \"<string>\"\n    },\n    \"shared\": {\n      \"tasks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"folders\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Remove User From Workspace",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/user/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"user",
								":user_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								},
								{
									"key": "user_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deactivate a user from a Workspace. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/user/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"user",
										":user_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"team\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"color\": \"<string>\",\n    \"avatar\": \"<string,null>\",\n    \"members\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Views",
			"item": [
				{
					"name": "Get Workspace (Everything level) Views",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"view"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the task and page views available at the Everything Level of a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/view",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"view"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"views\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<integer>\"\n      },\n      \"grouping\": {\n        \"field\": \"<string>\",\n        \"dir\": \"<integer>\",\n        \"collapsed\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignore\": \"<boolean>\"\n      },\n      \"divide\": {\n        \"collapsed\": \"<boolean>\",\n        \"field\": \"<null>\",\n        \"dir\": \"<null>\"\n      },\n      \"sorting\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"op\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"search\": \"<string>\",\n        \"show_closed\": \"<boolean>\"\n      },\n      \"columns\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"team_sidebar\": {\n        \"assignees\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"assigned_comments\": \"<boolean>\",\n        \"unassigned_tasks\": \"<boolean>\"\n      },\n      \"settings\": {\n        \"show_task_locations\": \"<boolean>\",\n        \"show_subtasks\": \"<integer>\",\n        \"show_subtask_parent_names\": \"<boolean>\",\n        \"show_closed_subtasks\": \"<boolean>\",\n        \"show_assignees\": \"<boolean>\",\n        \"show_images\": \"<boolean>\",\n        \"collapse_empty_columns\": \"<string,null>\",\n        \"me_comments\": \"<boolean>\",\n        \"me_subtasks\": \"<boolean>\",\n        \"me_checklists\": \"<boolean>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<integer>\"\n      },\n      \"grouping\": {\n        \"field\": \"<string>\",\n        \"dir\": \"<integer>\",\n        \"collapsed\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignore\": \"<boolean>\"\n      },\n      \"divide\": {\n        \"collapsed\": \"<boolean>\",\n        \"field\": \"<null>\",\n        \"dir\": \"<null>\"\n      },\n      \"sorting\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"op\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"search\": \"<string>\",\n        \"show_closed\": \"<boolean>\"\n      },\n      \"columns\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"team_sidebar\": {\n        \"assignees\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"assigned_comments\": \"<boolean>\",\n        \"unassigned_tasks\": \"<boolean>\"\n      },\n      \"settings\": {\n        \"show_task_locations\": \"<boolean>\",\n        \"show_subtasks\": \"<integer>\",\n        \"show_subtask_parent_names\": \"<boolean>\",\n        \"show_closed_subtasks\": \"<boolean>\",\n        \"show_assignees\": \"<boolean>\",\n        \"show_images\": \"<boolean>\",\n        \"collapse_empty_columns\": \"<string,null>\",\n        \"me_comments\": \"<boolean>\",\n        \"me_subtasks\": \"<boolean>\",\n        \"me_checklists\": \"<boolean>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Workspace (Everything level) View",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"view"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view at the Everything Level of a Workspace."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/view",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"view"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"view\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<string>\",\n      \"type\": \"<integer>\"\n    },\n    \"grouping\": {\n      \"field\": \"<string>\",\n      \"dir\": \"<integer>\",\n      \"collapsed\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ignore\": \"<boolean>\"\n    },\n    \"divide\": {\n      \"collapsed\": \"<boolean>\",\n      \"field\": \"<null>\",\n      \"dir\": \"<null>\"\n    },\n    \"sorting\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"filters\": {\n      \"op\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"search\": \"<string>\",\n      \"show_closed\": \"<boolean>\"\n    },\n    \"columns\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"team_sidebar\": {\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"assigned_comments\": \"<boolean>\",\n      \"unassigned_tasks\": \"<boolean>\"\n    },\n    \"settings\": {\n      \"show_task_locations\": \"<boolean>\",\n      \"show_subtasks\": \"<integer>\",\n      \"show_subtask_parent_names\": \"<boolean>\",\n      \"show_closed_subtasks\": \"<boolean>\",\n      \"show_assignees\": \"<boolean>\",\n      \"show_images\": \"<boolean>\",\n      \"collapse_empty_columns\": \"<string,null>\",\n      \"me_comments\": \"<boolean>\",\n      \"me_subtasks\": \"<boolean>\",\n      \"me_checklists\": \"<boolean>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get Space Views",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"view"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the task and page views available for a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/view",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"view"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"views\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<integer>\"\n      },\n      \"grouping\": {\n        \"field\": \"<string>\",\n        \"dir\": \"<integer>\",\n        \"collapsed\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignore\": \"<boolean>\"\n      },\n      \"divide\": {\n        \"collapsed\": \"<boolean>\",\n        \"field\": \"<null>\",\n        \"dir\": \"<null>\"\n      },\n      \"sorting\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"op\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"search\": \"<string>\",\n        \"show_closed\": \"<boolean>\"\n      },\n      \"columns\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"team_sidebar\": {\n        \"assignees\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"assigned_comments\": \"<boolean>\",\n        \"unassigned_tasks\": \"<boolean>\"\n      },\n      \"settings\": {\n        \"show_task_locations\": \"<boolean>\",\n        \"show_subtasks\": \"<integer>\",\n        \"show_subtask_parent_names\": \"<boolean>\",\n        \"show_closed_subtasks\": \"<boolean>\",\n        \"show_assignees\": \"<boolean>\",\n        \"show_images\": \"<boolean>\",\n        \"collapse_empty_columns\": \"<string,null>\",\n        \"me_comments\": \"<boolean>\",\n        \"me_subtasks\": \"<boolean>\",\n        \"me_checklists\": \"<boolean>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<integer>\"\n      },\n      \"grouping\": {\n        \"field\": \"<string>\",\n        \"dir\": \"<integer>\",\n        \"collapsed\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignore\": \"<boolean>\"\n      },\n      \"divide\": {\n        \"collapsed\": \"<boolean>\",\n        \"field\": \"<null>\",\n        \"dir\": \"<null>\"\n      },\n      \"sorting\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"op\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"search\": \"<string>\",\n        \"show_closed\": \"<boolean>\"\n      },\n      \"columns\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"team_sidebar\": {\n        \"assignees\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"assigned_comments\": \"<boolean>\",\n        \"unassigned_tasks\": \"<boolean>\"\n      },\n      \"settings\": {\n        \"show_task_locations\": \"<boolean>\",\n        \"show_subtasks\": \"<integer>\",\n        \"show_subtask_parent_names\": \"<boolean>\",\n        \"show_closed_subtasks\": \"<boolean>\",\n        \"show_assignees\": \"<boolean>\",\n        \"show_images\": \"<boolean>\",\n        \"collapse_empty_columns\": \"<string,null>\",\n        \"me_comments\": \"<boolean>\",\n        \"me_subtasks\": \"<boolean>\",\n        \"me_checklists\": \"<boolean>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Space View",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/space/:space_id/view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"space",
								":space_id",
								"view"
							],
							"variable": [
								{
									"key": "space_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a Space."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/space/:space_id/view",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"space",
										":space_id",
										"view"
									],
									"variable": [
										{
											"key": "space_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"view\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<string>\",\n      \"type\": \"<integer>\"\n    },\n    \"grouping\": {\n      \"field\": \"<string>\",\n      \"dir\": \"<integer>\",\n      \"collapsed\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ignore\": \"<boolean>\"\n    },\n    \"divide\": {\n      \"collapsed\": \"<boolean>\",\n      \"field\": \"<null>\",\n      \"dir\": \"<null>\"\n    },\n    \"sorting\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"filters\": {\n      \"op\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"search\": \"<string>\",\n      \"show_closed\": \"<boolean>\"\n    },\n    \"columns\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"team_sidebar\": {\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"assigned_comments\": \"<boolean>\",\n      \"unassigned_tasks\": \"<boolean>\"\n    },\n    \"settings\": {\n      \"show_task_locations\": \"<boolean>\",\n      \"show_subtasks\": \"<integer>\",\n      \"show_subtask_parent_names\": \"<boolean>\",\n      \"show_closed_subtasks\": \"<boolean>\",\n      \"show_assignees\": \"<boolean>\",\n      \"show_images\": \"<boolean>\",\n      \"collapse_empty_columns\": \"<string,null>\",\n      \"me_comments\": \"<boolean>\",\n      \"me_subtasks\": \"<boolean>\",\n      \"me_checklists\": \"<boolean>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get Folder Views",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id/view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id",
								"view"
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the task and page views available for a Folder."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/view",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"view"
									],
									"variable": [
										{
											"key": "folder_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"views\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<integer>\"\n      },\n      \"grouping\": {\n        \"field\": \"<string>\",\n        \"dir\": \"<integer>\",\n        \"collapsed\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignore\": \"<boolean>\"\n      },\n      \"divide\": {\n        \"collapsed\": \"<boolean>\",\n        \"field\": \"<null>\",\n        \"dir\": \"<null>\"\n      },\n      \"sorting\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"op\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"search\": \"<string>\",\n        \"show_closed\": \"<boolean>\"\n      },\n      \"columns\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"team_sidebar\": {\n        \"assignees\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"assigned_comments\": \"<boolean>\",\n        \"unassigned_tasks\": \"<boolean>\"\n      },\n      \"settings\": {\n        \"show_task_locations\": \"<boolean>\",\n        \"show_subtasks\": \"<integer>\",\n        \"show_subtask_parent_names\": \"<boolean>\",\n        \"show_closed_subtasks\": \"<boolean>\",\n        \"show_assignees\": \"<boolean>\",\n        \"show_images\": \"<boolean>\",\n        \"collapse_empty_columns\": \"<string,null>\",\n        \"me_comments\": \"<boolean>\",\n        \"me_subtasks\": \"<boolean>\",\n        \"me_checklists\": \"<boolean>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<integer>\"\n      },\n      \"grouping\": {\n        \"field\": \"<string>\",\n        \"dir\": \"<integer>\",\n        \"collapsed\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignore\": \"<boolean>\"\n      },\n      \"divide\": {\n        \"collapsed\": \"<boolean>\",\n        \"field\": \"<null>\",\n        \"dir\": \"<null>\"\n      },\n      \"sorting\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"op\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"search\": \"<string>\",\n        \"show_closed\": \"<boolean>\"\n      },\n      \"columns\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"team_sidebar\": {\n        \"assignees\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"assigned_comments\": \"<boolean>\",\n        \"unassigned_tasks\": \"<boolean>\"\n      },\n      \"settings\": {\n        \"show_task_locations\": \"<boolean>\",\n        \"show_subtasks\": \"<integer>\",\n        \"show_subtask_parent_names\": \"<boolean>\",\n        \"show_closed_subtasks\": \"<boolean>\",\n        \"show_assignees\": \"<boolean>\",\n        \"show_images\": \"<boolean>\",\n        \"collapse_empty_columns\": \"<string,null>\",\n        \"me_comments\": \"<boolean>\",\n        \"me_subtasks\": \"<boolean>\",\n        \"me_checklists\": \"<boolean>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Folder View",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/folder/:folder_id/view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"folder",
								":folder_id",
								"view"
							],
							"variable": [
								{
									"key": "folder_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a Folder."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/folder/:folder_id/view",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"folder",
										":folder_id",
										"view"
									],
									"variable": [
										{
											"key": "folder_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"view\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<string>\",\n      \"type\": \"<integer>\"\n    },\n    \"grouping\": {\n      \"field\": \"<string>\",\n      \"dir\": \"<integer>\",\n      \"collapsed\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ignore\": \"<boolean>\"\n    },\n    \"divide\": {\n      \"collapsed\": \"<boolean>\",\n      \"field\": \"<null>\",\n      \"dir\": \"<null>\"\n    },\n    \"sorting\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"filters\": {\n      \"op\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"search\": \"<string>\",\n      \"show_closed\": \"<boolean>\"\n    },\n    \"columns\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"team_sidebar\": {\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"assigned_comments\": \"<boolean>\",\n      \"unassigned_tasks\": \"<boolean>\"\n    },\n    \"settings\": {\n      \"show_task_locations\": \"<boolean>\",\n      \"show_subtasks\": \"<integer>\",\n      \"show_subtask_parent_names\": \"<boolean>\",\n      \"show_closed_subtasks\": \"<boolean>\",\n      \"show_assignees\": \"<boolean>\",\n      \"show_images\": \"<boolean>\",\n      \"collapse_empty_columns\": \"<string,null>\",\n      \"me_comments\": \"<boolean>\",\n      \"me_subtasks\": \"<boolean>\",\n      \"me_checklists\": \"<boolean>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get List Views",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"view"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "View the task and page views available for a List.<br> Views and required views are separate responses."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/view",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"view"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"views\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<integer>\"\n      },\n      \"grouping\": {\n        \"field\": \"<string>\",\n        \"dir\": \"<integer>\",\n        \"collapsed\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignore\": \"<boolean>\"\n      },\n      \"divide\": {\n        \"collapsed\": \"<boolean>\",\n        \"field\": \"<null>\",\n        \"dir\": \"<null>\"\n      },\n      \"sorting\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"op\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"search\": \"<string>\",\n        \"show_closed\": \"<boolean>\"\n      },\n      \"columns\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"team_sidebar\": {\n        \"assignees\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"assigned_comments\": \"<boolean>\",\n        \"unassigned_tasks\": \"<boolean>\"\n      },\n      \"settings\": {\n        \"show_task_locations\": \"<boolean>\",\n        \"show_subtasks\": \"<integer>\",\n        \"show_subtask_parent_names\": \"<boolean>\",\n        \"show_closed_subtasks\": \"<boolean>\",\n        \"show_assignees\": \"<boolean>\",\n        \"show_images\": \"<boolean>\",\n        \"collapse_empty_columns\": \"<string,null>\",\n        \"me_comments\": \"<boolean>\",\n        \"me_subtasks\": \"<boolean>\",\n        \"me_checklists\": \"<boolean>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<string>\",\n        \"type\": \"<integer>\"\n      },\n      \"grouping\": {\n        \"field\": \"<string>\",\n        \"dir\": \"<integer>\",\n        \"collapsed\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ignore\": \"<boolean>\"\n      },\n      \"divide\": {\n        \"collapsed\": \"<boolean>\",\n        \"field\": \"<null>\",\n        \"dir\": \"<null>\"\n      },\n      \"sorting\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"op\": \"<string>\",\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"search\": \"<string>\",\n        \"show_closed\": \"<boolean>\"\n      },\n      \"columns\": {\n        \"fields\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"team_sidebar\": {\n        \"assignees\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"assigned_comments\": \"<boolean>\",\n        \"unassigned_tasks\": \"<boolean>\"\n      },\n      \"settings\": {\n        \"show_task_locations\": \"<boolean>\",\n        \"show_subtasks\": \"<integer>\",\n        \"show_subtask_parent_names\": \"<boolean>\",\n        \"show_closed_subtasks\": \"<boolean>\",\n        \"show_assignees\": \"<boolean>\",\n        \"show_images\": \"<boolean>\",\n        \"collapse_empty_columns\": \"<string,null>\",\n        \"me_comments\": \"<boolean>\",\n        \"me_subtasks\": \"<boolean>\",\n        \"me_checklists\": \"<boolean>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create List View",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/list/:list_id/view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"list",
								":list_id",
								"view"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "<number>",
									"description": "(Required) "
								}
							]
						},
						"description": "Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a List."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/list/:list_id/view",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"list",
										":list_id",
										"view"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"view\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<string>\",\n      \"type\": \"<integer>\"\n    },\n    \"grouping\": {\n      \"field\": \"<string>\",\n      \"dir\": \"<integer>\",\n      \"collapsed\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ignore\": \"<boolean>\"\n    },\n    \"divide\": {\n      \"collapsed\": \"<boolean>\",\n      \"field\": \"<null>\",\n      \"dir\": \"<null>\"\n    },\n    \"sorting\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"filters\": {\n      \"op\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"search\": \"<string>\",\n      \"show_closed\": \"<boolean>\"\n    },\n    \"columns\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"team_sidebar\": {\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"assigned_comments\": \"<boolean>\",\n      \"unassigned_tasks\": \"<boolean>\"\n    },\n    \"settings\": {\n      \"show_task_locations\": \"<boolean>\",\n      \"show_subtasks\": \"<integer>\",\n      \"show_subtask_parent_names\": \"<boolean>\",\n      \"show_closed_subtasks\": \"<boolean>\",\n      \"show_assignees\": \"<boolean>\",\n      \"show_images\": \"<boolean>\",\n      \"collapse_empty_columns\": \"<string,null>\",\n      \"me_comments\": \"<boolean>\",\n      \"me_subtasks\": \"<boolean>\",\n      \"me_checklists\": \"<boolean>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get View",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/view/:view_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"view",
								":view_id"
							],
							"variable": [
								{
									"key": "view_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "View information about a specific task or page view."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/view/:view_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"view",
										":view_id"
									],
									"variable": [
										{
											"key": "view_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"view\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<string>\",\n      \"type\": \"<integer>\"\n    },\n    \"grouping\": {\n      \"field\": \"<string>\",\n      \"dir\": \"<integer>\",\n      \"collapsed\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ignore\": \"<boolean>\"\n    },\n    \"divide\": {\n      \"collapsed\": \"<boolean>\",\n      \"field\": \"<null>\",\n      \"dir\": \"<null>\"\n    },\n    \"sorting\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"filters\": {\n      \"op\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"search\": \"<string>\",\n      \"show_closed\": \"<boolean>\"\n    },\n    \"columns\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"team_sidebar\": {\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"assigned_comments\": \"<boolean>\",\n      \"unassigned_tasks\": \"<boolean>\"\n    },\n    \"settings\": {\n      \"show_task_locations\": \"<boolean>\",\n      \"show_subtasks\": \"<integer>\",\n      \"show_subtask_parent_names\": \"<boolean>\",\n      \"show_closed_subtasks\": \"<boolean>\",\n      \"show_assignees\": \"<boolean>\",\n      \"show_images\": \"<boolean>\",\n      \"collapse_empty_columns\": \"<string,null>\",\n      \"me_comments\": \"<boolean>\",\n      \"me_subtasks\": \"<boolean>\",\n      \"me_checklists\": \"<boolean>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update View",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<string>\",\n    \"type\": \"<integer>\"\n  },\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/view/:view_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"view",
								":view_id"
							],
							"variable": [
								{
									"key": "view_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Rename a view, update the grouping, sorting, filters, columns, and settings of a view."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<string>\",\n    \"type\": \"<integer>\"\n  },\n  \"grouping\": {\n    \"field\": \"<string>\",\n    \"dir\": \"<integer>\",\n    \"collapsed\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ignore\": \"<boolean>\"\n  },\n  \"divide\": {\n    \"collapsed\": \"<boolean>\",\n    \"field\": \"<null>\",\n    \"dir\": \"<null>\"\n  },\n  \"sorting\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"filters\": {\n    \"op\": \"<string>\",\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"search\": \"<string>\",\n    \"show_closed\": \"<boolean>\"\n  },\n  \"columns\": {\n    \"fields\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"team_sidebar\": {\n    \"assignees\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"assigned_comments\": \"<boolean>\",\n    \"unassigned_tasks\": \"<boolean>\"\n  },\n  \"settings\": {\n    \"show_task_locations\": \"<boolean>\",\n    \"show_subtasks\": \"<integer>\",\n    \"show_subtask_parent_names\": \"<boolean>\",\n    \"show_closed_subtasks\": \"<boolean>\",\n    \"show_assignees\": \"<boolean>\",\n    \"show_images\": \"<boolean>\",\n    \"collapse_empty_columns\": \"<string,null>\",\n    \"me_comments\": \"<boolean>\",\n    \"me_subtasks\": \"<boolean>\",\n    \"me_checklists\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/view/:view_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"view",
										":view_id"
									],
									"variable": [
										{
											"key": "view_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"view\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<string>\",\n      \"type\": \"<integer>\"\n    },\n    \"grouping\": {\n      \"field\": \"<string>\",\n      \"dir\": \"<integer>\",\n      \"collapsed\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ignore\": \"<boolean>\"\n    },\n    \"divide\": {\n      \"collapsed\": \"<boolean>\",\n      \"field\": \"<null>\",\n      \"dir\": \"<null>\"\n    },\n    \"sorting\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"filters\": {\n      \"op\": \"<string>\",\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"search\": \"<string>\",\n      \"show_closed\": \"<boolean>\"\n    },\n    \"columns\": {\n      \"fields\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"team_sidebar\": {\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"assigned_comments\": \"<boolean>\",\n      \"unassigned_tasks\": \"<boolean>\"\n    },\n    \"settings\": {\n      \"show_task_locations\": \"<boolean>\",\n      \"show_subtasks\": \"<integer>\",\n      \"show_subtask_parent_names\": \"<boolean>\",\n      \"show_closed_subtasks\": \"<boolean>\",\n      \"show_assignees\": \"<boolean>\",\n      \"show_images\": \"<boolean>\",\n      \"collapse_empty_columns\": \"<string,null>\",\n      \"me_comments\": \"<boolean>\",\n      \"me_subtasks\": \"<boolean>\",\n      \"me_checklists\": \"<boolean>\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete View",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/view/:view_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"view",
								":view_id"
							],
							"variable": [
								{
									"key": "view_id",
									"value": "<string>",
									"description": "(Required) 105 (string)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/view/:view_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"view",
										":view_id"
									],
									"variable": [
										{
											"key": "view_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get View Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/view/:view_id/task?page=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"view",
								":view_id",
								"task"
							],
							"query": [
								{
									"key": "page",
									"value": "<integer>",
									"description": "(Required) "
								}
							],
							"variable": [
								{
									"key": "view_id",
									"value": "<string>",
									"description": "(Required) 105 (string)"
								}
							]
						},
						"description": "See all visible tasks in a view in ClickUp."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/view/:view_id/task?page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"view",
										":view_id",
										"task"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "view_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tasks\": [\n    {\n      \"id\": \"<string>\",\n      \"custom_item_id\": \"<number,null>\",\n      \"name\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"orderindex\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"date_updated\": \"<string>\",\n      \"date_closed\": \"<string,null>\",\n      \"date_done\": \"<string,null>\",\n      \"creator\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"watchers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"checklists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parent\": \"<string,null>\",\n      \"priority\": \"<string,null>\",\n      \"due_date\": \"<string,null>\",\n      \"start_date\": \"<string,null>\",\n      \"points\": \"<number>\",\n      \"time_estimate\": \"<string,null>\",\n      \"time_spent\": \"<string,null>\",\n      \"list\": {\n        \"id\": \"<string>\"\n      },\n      \"folder\": {\n        \"id\": \"<string>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\"\n      },\n      \"url\": \"<string>\",\n      \"markdown_description\": \"<string>\",\n      \"custom_fields\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"type_config\": {\n          \"single_user\": \"<boolean>\",\n          \"include_groups\": \"<boolean>\",\n          \"include_guests\": \"<boolean>\",\n          \"include_team_members\": \"<boolean>\"\n        },\n        \"date_created\": \"<string>\",\n        \"hide_from_guests\": \"<boolean>\",\n        \"value\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string,null>\"\n        },\n        \"value_richtext\": \"<string>\",\n        \"value_markdown\": \"<string>\",\n        \"required\": \"<boolean>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"custom_item_id\": \"<number,null>\",\n      \"name\": \"<string>\",\n      \"status\": {\n        \"status\": \"<string>\",\n        \"color\": \"<string>\",\n        \"orderindex\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      \"orderindex\": \"<string>\",\n      \"date_created\": \"<string>\",\n      \"date_updated\": \"<string>\",\n      \"date_closed\": \"<string,null>\",\n      \"date_done\": \"<string,null>\",\n      \"creator\": {\n        \"id\": \"<integer>\",\n        \"username\": \"<string>\",\n        \"color\": \"<string>\",\n        \"profilePicture\": \"<string>\"\n      },\n      \"assignees\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"watchers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"checklists\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"parent\": \"<string,null>\",\n      \"priority\": \"<string,null>\",\n      \"due_date\": \"<string,null>\",\n      \"start_date\": \"<string,null>\",\n      \"points\": \"<number>\",\n      \"time_estimate\": \"<string,null>\",\n      \"time_spent\": \"<string,null>\",\n      \"list\": {\n        \"id\": \"<string>\"\n      },\n      \"folder\": {\n        \"id\": \"<string>\"\n      },\n      \"space\": {\n        \"id\": \"<string>\"\n      },\n      \"url\": \"<string>\",\n      \"markdown_description\": \"<string>\",\n      \"custom_fields\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"type_config\": {\n          \"single_user\": \"<boolean>\",\n          \"include_groups\": \"<boolean>\",\n          \"include_guests\": \"<boolean>\",\n          \"include_team_members\": \"<boolean>\"\n        },\n        \"date_created\": \"<string>\",\n        \"hide_from_guests\": \"<boolean>\",\n        \"value\": {\n          \"id\": \"<integer>\",\n          \"username\": \"<string>\",\n          \"email\": \"<string>\",\n          \"color\": \"<string>\",\n          \"initials\": \"<string>\",\n          \"profilePicture\": \"<string,null>\"\n        },\n        \"value_richtext\": \"<string>\",\n        \"value_markdown\": \"<string>\",\n        \"required\": \"<boolean>\"\n      }\n    }\n  ],\n  \"last_page\": \"<boolean>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Get Webhooks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"webhook"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "View the webhooks created via the API for a Workspace. This endpoint returns webhooks created by the authenticated user."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"webhook"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"webhooks\": [\n    {\n      \"id\": \"<string>\",\n      \"userid\": \"<integer>\",\n      \"team_id\": \"<integer>\",\n      \"endpoint\": \"<string>\",\n      \"client_id\": \"<string>\",\n      \"events\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"task_id\": \"<string,null>\",\n      \"list_id\": \"<string,null>\",\n      \"folder_id\": \"<string,null>\",\n      \"space_id\": \"<string,null>\",\n      \"health\": {\n        \"status\": \"<string>\",\n        \"fail_count\": \"<integer>\"\n      },\n      \"secret\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"userid\": \"<integer>\",\n      \"team_id\": \"<integer>\",\n      \"endpoint\": \"<string>\",\n      \"client_id\": \"<string>\",\n      \"events\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"task_id\": \"<string,null>\",\n      \"list_id\": \"<string,null>\",\n      \"folder_id\": \"<string,null>\",\n      \"space_id\": \"<string,null>\",\n      \"health\": {\n        \"status\": \"<string>\",\n        \"fail_count\": \"<integer>\"\n      },\n      \"secret\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"endpoint\": \"<string>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"space_id\": \"<integer>\",\n  \"folder_id\": \"<integer>\",\n  \"list_id\": \"<integer>\",\n  \"task_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/team/:team_id/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"team",
								":team_id",
								"webhook"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "<number>",
									"description": "(Required) Workspace ID"
								}
							]
						},
						"description": "Set up a webhook to monitor for events.<br> We do not have a dedicated IP address for webhooks. We use our domain name and dynamic addressing."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"endpoint\": \"<string>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"space_id\": \"<integer>\",\n  \"folder_id\": \"<integer>\",\n  \"list_id\": \"<integer>\",\n  \"task_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/team/:team_id/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"team",
										":team_id",
										"webhook"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"webhook\": {\n    \"id\": \"<string>\",\n    \"userid\": \"<integer>\",\n    \"team_id\": \"<integer>\",\n    \"endpoint\": \"<string>\",\n    \"client_id\": \"<string>\",\n    \"events\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"task_id\": \"<string,null>\",\n    \"list_id\": \"<string,null>\",\n    \"folder_id\": \"<string,null>\",\n    \"space_id\": \"<string,null>\",\n    \"health\": {\n      \"status\": \"<string>\",\n      \"fail_count\": \"<integer>\"\n    },\n    \"secret\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Webhook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"endpoint\": \"<string>\",\n  \"events\": \"<string>\",\n  \"status\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/webhook/:webhook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"webhook",
								":webhook_id"
							],
							"variable": [
								{
									"key": "webhook_id",
									"value": "<string>",
									"description": "(Required) e506-4a29-9d42-26e504e3435e (uuid)"
								}
							]
						},
						"description": "Update a webhook to change the events to be monitored."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"endpoint\": \"<string>\",\n  \"events\": \"<string>\",\n  \"status\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/webhook/:webhook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"webhook",
										":webhook_id"
									],
									"variable": [
										{
											"key": "webhook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"webhook\": {\n    \"id\": \"<string>\",\n    \"userid\": \"<integer>\",\n    \"team_id\": \"<integer>\",\n    \"endpoint\": \"<string>\",\n    \"client_id\": \"<string>\",\n    \"events\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"task_id\": \"<string,null>\",\n    \"list_id\": \"<string,null>\",\n    \"folder_id\": \"<string,null>\",\n    \"space_id\": \"<string,null>\",\n    \"health\": {\n      \"status\": \"<string>\",\n      \"fail_count\": \"<integer>\"\n    },\n    \"secret\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete Webhook",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/webhook/:webhook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"webhook",
								":webhook_id"
							],
							"variable": [
								{
									"key": "webhook_id",
									"value": "<string>",
									"description": "(Required) e506-4a29-9d42-26e504e3435e (uuid)"
								}
							]
						},
						"description": "Delete a webhook to stop monitoring the events and locations of the webhook."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/webhook/:webhook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"webhook",
										":webhook_id"
									],
									"variable": [
										{
											"key": "webhook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.clickup.com/api"
		}
	]
}